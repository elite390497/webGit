{"version":3,"file":"js/institute/document/edit~js/institute/document/index.js?id=359db93ef0210810828a","sources":["webpack:///resources/js/views/institute/document/form.vue","webpack:///./resources/js/views/institute/document/form.vue","webpack:///./resources/js/views/institute/document/form.vue?c9f8","webpack:///./resources/js/views/institute/document/form.vue?ef7a","webpack:///./resources/js/views/institute/document/form.vue?8db1"],"sourcesContent":["<template>\n\t<div>\n        <form @submit.prevent=\"proceed\" @keydown=\"instituteDocumentForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('institute.document_title')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"instituteDocumentForm.title\" name=\"title\" :placeholder=\"trans('institute.document_title')\">\n                        <show-error :form-name=\"instituteDocumentForm\" prop-name=\"title\"></show-error>\n                    </div>\n                </div>\n\t            <div class=\"col-12 col-sm-3\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('general.tags')}}</label>\n\t                    <v-select v-model=\"instituteDocumentForm.tags\" :tag-placeholder=\"trans('general.add_this_as_new_tag')\" :placeholder=\"trans('general.search_or_add_a_tag')\" label=\"name\" track-by=\"slug\" :options=\"tag_options\" name=\"tag\" :multiple=\"true\" :taggable=\"true\" @tag=\"addTag\">\n                        </v-select>\n\t                    <show-error :form-name=\"instituteDocumentForm\" prop-name=\"tag\"></show-error>\n\t                </div>\n\t            </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('institute.document_date_of_expiry')}}</label>\n                        <datepicker v-model=\"instituteDocumentForm.date_of_expiry\" :bootstrapStyling=\"true\" @selected=\"instituteDocumentForm.errors.clear('date_of_expiry')\" :placeholder=\"trans('institute.document_date_of_expiry')\"></datepicker>\n                        <show-error :form-name=\"instituteDocumentForm\" prop-name=\"date_of_expiry\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-12\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('institute.document_description')}}</label>\n                        <autosize-textarea v-model=\"instituteDocumentForm.description\" rows=\"2\" name=\"description\" :placeholder=\"trans('institute.document_description')\"></autosize-textarea>\n                        <show-error :form-name=\"instituteDocumentForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <label>&nbsp;</label>\n                    <div class=\"form-group\">\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"instituteDocumentForm.upload_token\" module=\"institute_document\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/institute/document\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\n\n    export default {\n        components:{},\n        props: ['id'],\n        data() {\n            return {\n                instituteDocumentForm: new Form({\n                    title : '',\n                    tags: [],\n                    date_of_expiry: '',\n                    description : '',\n                    upload_token: ''\n                }),\n                tag_options: [],\n                clearAttachment: false,\n                module_id: ''\n            };\n        },\n        mounted() {\n            this.instituteDocumentForm.upload_token = this.$uuid.v4();\n\n            this.getPreRequisite();\n\n            if (this.id)\n                this.getDocument();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.updateDocument();\n                else\n                    this.storeDocument();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/institute/document/pre-requisite')\n                    .then(response => {\n                        this.tag_options = response.tags;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            storeDocument(){\n                let loader = this.$loading.show();\n                this.instituteDocumentForm.date_of_expiry = helper.toDate(this.instituteDocumentForm.date_of_expiry);\n\n                this.instituteDocumentForm.post('/api/institute/document')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.clearAttachment = !this.clearAttachment;\n                        this.$emit('completed');\n                        this.instituteDocumentForm.upload_token = this.$uuid.v4();\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getDocument(){\n                let loader = this.$loading.show();\n                axios.get('/api/institute/document/'+this.id)\n                    .then(response => {\n                        this.instituteDocumentForm.title = response.institute_document.title;\n                        this.instituteDocumentForm.date_of_expiry = response.institute_document.date_of_expiry;\n                        response.institute_document.tags.forEach(tag => {\n                            this.instituteDocumentForm.tags.push({\n                                name: tag.name,\n                                slug: tag.slug\n                            });\n                        })\n                        this.instituteDocumentForm.description = response.institute_document.description;\n                        this.instituteDocumentForm.upload_token = response.institute_document.upload_token;\n                        this.module_id = response.institute_document.id;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        this.$router.push('/institute/document');\n                    });\n            },\n            updateDocument(){\n                let loader = this.$loading.show();\n                this.instituteDocumentForm.date_of_expiry = helper.toDate(this.instituteDocumentForm.date_of_expiry);\n                this.instituteDocumentForm.patch('/api/institute/document/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                        this.$router.push('/institute/document');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            addTag (newTag) {\n                const tag = {\n                    name: newTag,\n                    slug: newTag.substring(0, 2) + Math.floor((Math.random() * 10000000))\n                }\n                this.tag_options.push(tag)\n                this.instituteDocumentForm.tags.push(tag)\n            }\n        },\n        watch: {\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.instituteDocumentForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"institute.document_title\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.instituteDocumentForm.title,\n                      expression: \"instituteDocumentForm.title\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: _vm.trans(\"institute.document_title\"),\n                  },\n                  domProps: { value: _vm.instituteDocumentForm.title },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.instituteDocumentForm,\n                        \"title\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.instituteDocumentForm,\n                    \"prop-name\": \"title\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"general.tags\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"v-select\", {\n                  attrs: {\n                    \"tag-placeholder\": _vm.trans(\"general.add_this_as_new_tag\"),\n                    placeholder: _vm.trans(\"general.search_or_add_a_tag\"),\n                    label: \"name\",\n                    \"track-by\": \"slug\",\n                    options: _vm.tag_options,\n                    name: \"tag\",\n                    multiple: true,\n                    taggable: true,\n                  },\n                  on: { tag: _vm.addTag },\n                  model: {\n                    value: _vm.instituteDocumentForm.tags,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.instituteDocumentForm, \"tags\", $$v)\n                    },\n                    expression: \"instituteDocumentForm.tags\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.instituteDocumentForm,\n                    \"prop-name\": \"tag\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"institute.document_date_of_expiry\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"institute.document_date_of_expiry\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.instituteDocumentForm.errors.clear(\n                        \"date_of_expiry\"\n                      )\n                    },\n                  },\n                  model: {\n                    value: _vm.instituteDocumentForm.date_of_expiry,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.instituteDocumentForm, \"date_of_expiry\", $$v)\n                    },\n                    expression: \"instituteDocumentForm.date_of_expiry\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.instituteDocumentForm,\n                    \"prop-name\": \"date_of_expiry\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"institute.document_description\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"2\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\"institute.document_description\"),\n                  },\n                  model: {\n                    value: _vm.instituteDocumentForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.instituteDocumentForm, \"description\", $$v)\n                    },\n                    expression: \"instituteDocumentForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.instituteDocumentForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\"label\", [_vm._v(\" \")]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.upload_document\"),\n                    token: _vm.instituteDocumentForm.upload_token,\n                    module: \"institute_document\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.module_id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.id,\n                    expression: \"id\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/institute/document\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.id\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.id\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=3a28c60f&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3a28c60f')) {\n      api.createRecord('3a28c60f', component.options)\n    } else {\n      api.reload('3a28c60f', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=3a28c60f&\", function () {\n      api.rerender('3a28c60f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/institute/document/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=3a28c60f&\""],"mappings":";;;;;;;;;;AAyDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACtKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;AC3QA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
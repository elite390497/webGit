{"version":3,"file":"js/academic/session/edit~js/academic/session/index~js/setup.js?id=c5d27eadaab7b8020ff8","sources":["webpack:///resources/js/views/academic/session/form.vue","webpack:///./resources/js/views/academic/session/form.vue","webpack:///./resources/js/views/academic/session/form.vue?ab0c","webpack:///./resources/js/views/academic/session/form.vue?e83c","webpack:///./resources/js/views/academic/session/form.vue?ffa8"],"sourcesContent":["<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"academicSessionForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_name')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.name\" name=\"name\" :placeholder=\"trans('academic.session_name')\">\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"name\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_start_date')}}</label>\n                    <datepicker v-model=\"academicSessionForm.start_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('start_date')\" :placeholder=\"trans('academic.session_start_date')\" :disabled=\"id ? true : false\"></datepicker>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"start_date\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_end_date')}}</label>\n                    <datepicker v-model=\"academicSessionForm.end_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('end_date')\" :placeholder=\"trans('academic.session_end_date')\" :disabled=\"id ? true : false\"></datepicker>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"end_date\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_description')}}</label>\n                    <autosize-textarea v-model=\"academicSessionForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('academic.session_description')\"></autosize-textarea>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"description\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.transfer_certificate_format')}}</label>\n                    <v-select label=\"name\" v-model=\"selected_transfer_certificate_format\" name=\"transfer_certificate_format\" id=\"transfer_certificate_format\" :options=\"transfer_certificate_formats\" :placeholder=\"trans('academic.select_transfer_certificate_format')\" @select=\"onTransferCertificateFormatSelect\" @close=\"academicSessionForm.errors.clear('transfer_certificate_format')\" @remove=\"academicSessionForm.transfer_certificate_format = ''\">\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transfer_certificate_formats.length\">\n                            {{trans('general.no_option_found')}}\n                        </div>\n                    </v-select>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"transfer_certificate_format\"></show-error>\n                </div>\n            </div>\n        </div>\n        <template v-if=\"!setupWizard\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <switches class=\"m-l-20\" v-model=\"academicSessionForm.is_default\" theme=\"bootstrap\" color=\"success\"></switches> {{trans('academic.session_is_default')}}\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/academic/session\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </template>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            id: ''\n        },\n        components: {},\n        data() {\n            return {\n                academicSessionForm: new Form({\n                    name : '',\n                    description : '',\n                    start_date: '',\n                    end_date: '',\n                    transfer_certificate_format: '',\n                    is_default: 0\n                }),\n                transfer_certificate_formats: [],\n                selected_transfer_certificate_format: null,\n            };\n        },\n        mounted() {\n            if(!helper.hasPermission('create-academic-session') && !helper.hasPermission('edit-academic-session')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/academic/session/pre-requisite')\n                    .then(response => {\n                        this.transfer_certificate_formats = response.transfer_certificate_formats;\n\n                        if(this.id)\n                            this.get();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },  \n            store(){\n                let loader = this.$loading.show();\n                this.academicSessionForm.post('/api/academic/session')\n                    .then(response => {\n                        this.$store.dispatch('setAcademicSession',response.academic_sessions);\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                        if (this.setupWizard)\n                            this.$router.push('/dashboard');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/academic/session/'+this.id)\n                    .then(response => {\n                        this.academicSessionForm.name = response.name;\n                        this.academicSessionForm.description = response.description;\n                        this.academicSessionForm.start_date = response.start_date;\n                        this.academicSessionForm.end_date = response.end_date;\n                        this.academicSessionForm.is_default = response.is_default;\n\n                        let transfer_certificate_format_id = response.options && response.options.hasOwnProperty(\"transfer_certificate_format\") ? response.options.transfer_certificate_format : null;\n\n                        let transfer_certificate_format = this.transfer_certificate_formats.find(o => o.id == transfer_certificate_format_id);\n\n                        this.academicSessionForm.transfer_certificate_format = transfer_certificate_format_id;\n                        this.selected_transfer_certificate_format = transfer_certificate_format || null; \n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/academic/session');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.academicSessionForm.patch('/api/academic/session/'+this.id)\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/academic/session');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onTransferCertificateFormatSelect(selectedOption){\n                return this.academicSessionForm.transfer_certificate_format = selectedOption.id;\n            }\n        }\n    }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.academicSessionForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.academicSessionForm.name,\n                    expression: \"academicSessionForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.session_name\"),\n                },\n                domProps: { value: _vm.academicSessionForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.academicSessionForm,\n                      \"name\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_start_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_start_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"start_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.start_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"start_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.start_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"start_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_end_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_end_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"end_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.end_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"end_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.end_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"end_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"autosize-textarea\", {\n                attrs: {\n                  rows: \"1\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.session_description\"),\n                },\n                model: {\n                  value: _vm.academicSessionForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"description\", $$v)\n                  },\n                  expression: \"academicSessionForm.description\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"academic.transfer_certificate_format\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-select\",\n                {\n                  attrs: {\n                    label: \"name\",\n                    name: \"transfer_certificate_format\",\n                    id: \"transfer_certificate_format\",\n                    options: _vm.transfer_certificate_formats,\n                    placeholder: _vm.trans(\n                      \"academic.select_transfer_certificate_format\"\n                    ),\n                  },\n                  on: {\n                    select: _vm.onTransferCertificateFormatSelect,\n                    close: function ($event) {\n                      return _vm.academicSessionForm.errors.clear(\n                        \"transfer_certificate_format\"\n                      )\n                    },\n                    remove: function ($event) {\n                      _vm.academicSessionForm.transfer_certificate_format = \"\"\n                    },\n                  },\n                  model: {\n                    value: _vm.selected_transfer_certificate_format,\n                    callback: function ($$v) {\n                      _vm.selected_transfer_certificate_format = $$v\n                    },\n                    expression: \"selected_transfer_certificate_format\",\n                  },\n                },\n                [\n                  !_vm.transfer_certificate_formats.length\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"multiselect__option\",\n                          attrs: { slot: \"afterList\" },\n                          slot: \"afterList\",\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm.trans(\"general.no_option_found\")) +\n                              \"\\n                    \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"transfer_certificate_format\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      !_vm.setupWizard\n        ? [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"switches\", {\n                      staticClass: \"m-l-20\",\n                      attrs: { theme: \"bootstrap\", color: \"success\" },\n                      model: {\n                        value: _vm.academicSessionForm.is_default,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.academicSessionForm, \"is_default\", $$v)\n                        },\n                        expression: \"academicSessionForm.is_default\",\n                      },\n                    }),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(_vm.trans(\"academic.session_is_default\")) +\n                        \"\\n                \"\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"card-footer text-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.id,\n                        expression: \"id\",\n                      },\n                    ],\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { to: \"/academic/session\" },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                !_vm.id\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.$emit(\"cancel\")\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm.id\n                      ? _c(\"span\", [\n                          _vm._v(_vm._s(_vm.trans(\"general.update\"))),\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=0fd33ab6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0fd33ab6')) {\n      api.createRecord('0fd33ab6', component.options)\n    } else {\n      api.reload('0fd33ab6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=0fd33ab6&\", function () {\n      api.rerender('0fd33ab6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/session/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=0fd33ab6&\""],"mappings":";;;;;;;;;;AAkEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;;;;;;;;;;;;;AC3VA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
{"version":3,"file":"js/academic/classTiming/create~js/academic/classTiming/edit.js?id=a5b81668e5ee54bd432c","sources":["webpack:///resources/js/views/academic/class-timing/form.vue","webpack:///./resources/js/views/academic/class-timing/form.vue","webpack:///./resources/js/views/academic/class-timing/form.vue?0370","webpack:///./resources/js/views/academic/class-timing/form.vue?6e28","webpack:///./resources/js/views/academic/class-timing/form.vue?e975"],"sourcesContent":["<template>\n\t<div class=\"p-t-20\">\n        <form @submit.prevent=\"proceed\" @keydown=\"classTimingForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.class_timing_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"classTimingForm.name\" name=\"name\" :placeholder=\"trans('academic.class_timing_name')\">\n                        <show-error :form-name=\"classTimingForm\" prop-name=\"name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-9\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.class_timing_description')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"classTimingForm.description\" name=\"description\" :placeholder=\"trans('academic.class_timing_description')\">\n                        <show-error :form-name=\"classTimingForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\" v-for=\"(session, index) in classTimingForm.sessions\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">\n                            {{trans('academic.class_timing_session_name')}}\n                            <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_session`\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('academic.delete_class_timing_session')\"><i class=\"fas fa-times\"></i></button>\n                        </label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"session.name\" :name=\"getSessionName(index)\" :placeholder=\"trans('academic.class_timing_session_name')\">\n                        <show-error :form-name=\"classTimingForm\" :prop-name=\"getSessionName\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.start_time')}}</label>\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <select v-model=\"session.start_hour\" class=\"custom-select col-12\" :name=\"getSessionStartHourName(index)\" @change=\"classTimingForm.errors.clear(getSessionStartHourName(index))\">\n                                  <option value=null selected>{{trans('academic.select_hour')}}</option>\n                                  <option v-for=\"hour in hours\" v-bind:value=\"hour\">\n                                    {{ timePadding(hour) }}\n                                  </option>\n                                </select>\n                                <show-error :form-name=\"classTimingForm\" :prop-name=\"getSessionStartHourName(index)\"></show-error>\n                            </div>\n                            <div class=\"col-6\">\n                                <select v-model=\"session.start_min\" class=\"custom-select col-12\" :name=\"getSessionStartHourName(index)\" @change=\"classTimingForm.errors.clear(getSessionStartHourName(index))\">\n                                  <option value=null selected>{{trans('academic.select_min')}}</option>\n                                  <option v-for=\"min in mins\" v-bind:value=\"min\">\n                                    {{ timePadding(min) }}\n                                  </option>\n                                </select>\n                                <show-error :form-name=\"classTimingForm\" :prop-name=\"getSessionStartMinName(index)\"></show-error>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.end_time')}}</label>\n                        <div class=\"row\">\n                            <div class=\"col-6\">\n                                <select v-model=\"session.end_hour\" class=\"custom-select col-12\" :name=\"getSessionEndHourName(index)\" @change=\"setNextStartHour(session, index)\">\n                                  <option value=null selected>{{trans('academic.select_hour')}}</option>\n                                  <option v-for=\"hour in hours\" v-bind:value=\"hour\">\n                                    {{ timePadding(hour) }}\n                                  </option>\n                                </select>\n                                <show-error :form-name=\"classTimingForm\" :prop-name=\"getSessionEndHourName(index)\"></show-error>\n                            </div>\n                            <div class=\"col-6\">\n                                <select v-model=\"session.end_min\" class=\"custom-select col-12\" :name=\"getSessionEndMinName(index)\" @change=\"setNextStartMin(session, index)\">\n                                  <option value=null selected>{{trans('academic.select_min')}}</option>\n                                  <option v-for=\"min in mins\" v-bind:value=\"min\">\n                                    {{ timePadding(min) }}\n                                  </option>\n                                </select>\n                                <show-error :form-name=\"classTimingForm\" :prop-name=\"getSessionEndMinName(index)\"></show-error>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-2\">\n                    <div class=\"form-group\">\n                        <div>{{trans('academic.is_a_break')}}</div>\n                        <switches class=\"m-t-20\" v-model=\"session.is_a_break\" theme=\"bootstrap\" color=\"success\"></switches> \n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-1\">\n                    <div class=\"form-group\">\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('academic.add_class_timing_session')}}</button>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer text-right\">\n                <button type=\"button\" class=\"btn btn-danger \" @click=\"$router.push('/academic/class/timing')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\" :disabled=\"is_disabled_editing\"><i class=\"fas fa-lock\" v-if=\"is_disabled_editing\"></i> {{trans('general.save')}}</button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n\n\texport default {\n        components: {},\n        props: ['uuid'],\n\t\tdata(){\n\t\t\treturn {\n                classTimingForm: new Form({\n                    name: '',\n                    description: '',\n                    sessions: []\n                }),\n                hours: [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],\n                mins: [0,5,10,15,20,25,30,35,40,45,50,55],\n                is_disabled_editing: false\n\t\t\t}\n\t\t},\n\t\tmounted(){\n            if(!this.uuid)\n                this.addRow();\n\n            if(this.uuid)\n                this.get();\n\t\t},\n\t\tmethods: {\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/class/timing/'+this.uuid)\n                    .then(response => {\n                        this.classTimingForm.name = response.name;\n                        this.classTimingForm.description = response.description;\n                        response.class_timing_sessions.forEach(session => {\n                            this.classTimingForm.sessions.push({\n                                uuid: session.uuid,\n                                name: session.name,\n                                start_hour: Number(session.start.split(\":\")[0]),\n                                start_min: Number(session.start.split(\":\")[1]),\n                                end_hour: Number(session.end.split(\":\")[0]),\n                                end_min: Number(session.end.split(\":\")[1]),\n                                is_a_break: session.is_a_break\n                            })\n                        });\n                        this.is_disabled_editing = (response.timetable_allocations.length) ? true : false;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },  \n            addRow(){\n                let new_index = this.classTimingForm.sessions.push({\n                    uuid: this.$uuid.v4(),\n                    name: '',\n                    start_hour: '',\n                    start_min: '',\n                    end_hour: '',\n                    end_min: '',\n                    is_a_break: false\n                })\n            },\n            timePadding(time){\n                return helper.formatWithPadding(time,2);\n            },\n            getSessionName(index){\n                return index+'_name';\n            },\n            getSessionStartHourName(index){\n                return index+'_start_hour';\n            },\n            getSessionStartMinName(index){\n                return index+'_start_min';\n            },\n            getSessionEndHourName(index){\n                return index+'_end_hour';\n            },\n            getSessionEndMinName(index){\n                return index+'_end_min';\n            },\n            setNextStartHour(session, index){\n                this.classTimingForm.errors.clear(this.getSessionEndHourName(index));\n                if (typeof this.classTimingForm.sessions[index + 1] !== 'undefined') {\n                    let next_session = this.classTimingForm.sessions[index + 1];\n                    next_session.start_hour = session.end_hour;\n                }\n            },\n            setNextStartMin(session, index) {\n                this.classTimingForm.errors.clear(this.getSessionEndMinName(index));\n                if (typeof this.classTimingForm.sessions[index + 1] !== 'undefined') {\n                    let next_session = this.classTimingForm.sessions[index + 1];\n                    next_session.start_min = session.end_min;\n                }\n            },\n            confirmDelete(index){\n                return dialog => this.deleteSession(index);\n            },\n            deleteSession(index){\n                this.classTimingForm.sessions.splice(index, 1);\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.classTimingForm.post('/api/class/timing')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.classTimingForm.sessions = [];\n                        this.addRow();\n                        this.$router.push('/academic/class/timing');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.classTimingForm.patch('/api/class/timing/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/academic/class/timing');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            }\n\t\t}\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"p-t-20\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.classTimingForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.class_timing_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.classTimingForm.name,\n                      expression: \"classTimingForm.name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: _vm.trans(\"academic.class_timing_name\"),\n                  },\n                  domProps: { value: _vm.classTimingForm.name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.classTimingForm, \"name\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.classTimingForm,\n                    \"prop-name\": \"name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-9\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"academic.class_timing_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.classTimingForm.description,\n                      expression: \"classTimingForm.description\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\"academic.class_timing_description\"),\n                  },\n                  domProps: { value: _vm.classTimingForm.description },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.classTimingForm,\n                        \"description\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.classTimingForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm._l(_vm.classTimingForm.sessions, function (session, index) {\n          return _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      \"\\n                            \" +\n                        _vm._s(\n                          _vm.trans(\"academic.class_timing_session_name\")\n                        ) +\n                        \"\\n                            \"\n                    ),\n                    _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"confirm\",\n                            rawName: \"v-confirm\",\n                            value: { ok: _vm.confirmDelete(index) },\n                            expression: \"{ok: confirmDelete(index)}\",\n                          },\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\n                              \"academic.delete_class_timing_session\"\n                            ),\n                            expression:\n                              \"trans('academic.delete_class_timing_session')\",\n                          },\n                        ],\n                        key: `${index}_delete_session`,\n                        staticClass: \"btn btn-xs btn-danger\",\n                        attrs: { type: \"button\" },\n                      },\n                      [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: session.name,\n                        expression: \"session.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: _vm.getSessionName(index),\n                      placeholder: _vm.trans(\n                        \"academic.class_timing_session_name\"\n                      ),\n                    },\n                    domProps: { value: session.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(session, \"name\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.classTimingForm,\n                      \"prop-name\": _vm.getSessionName,\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.start_time\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-6\" },\n                    [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: session.start_hour,\n                              expression: \"session.start_hour\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: _vm.getSessionStartHourName(index) },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  session,\n                                  \"start_hour\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                _vm.classTimingForm.errors.clear(\n                                  _vm.getSessionStartHourName(index)\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\n                            \"option\",\n                            { attrs: { value: \"null\", selected: \"\" } },\n                            [_vm._v(_vm._s(_vm.trans(\"academic.select_hour\")))]\n                          ),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.hours, function (hour) {\n                            return _c(\"option\", { domProps: { value: hour } }, [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.timePadding(hour)) +\n                                  \"\\n                                  \"\n                              ),\n                            ])\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.classTimingForm,\n                          \"prop-name\": _vm.getSessionStartHourName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-6\" },\n                    [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: session.start_min,\n                              expression: \"session.start_min\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: _vm.getSessionStartHourName(index) },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  session,\n                                  \"start_min\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                _vm.classTimingForm.errors.clear(\n                                  _vm.getSessionStartHourName(index)\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\n                            \"option\",\n                            { attrs: { value: \"null\", selected: \"\" } },\n                            [_vm._v(_vm._s(_vm.trans(\"academic.select_min\")))]\n                          ),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.mins, function (min) {\n                            return _c(\"option\", { domProps: { value: min } }, [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.timePadding(min)) +\n                                  \"\\n                                  \"\n                              ),\n                            ])\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.classTimingForm,\n                          \"prop-name\": _vm.getSessionStartMinName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.end_time\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-6\" },\n                    [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: session.end_hour,\n                              expression: \"session.end_hour\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: _vm.getSessionEndHourName(index) },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  session,\n                                  \"end_hour\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.setNextStartHour(session, index)\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\n                            \"option\",\n                            { attrs: { value: \"null\", selected: \"\" } },\n                            [_vm._v(_vm._s(_vm.trans(\"academic.select_hour\")))]\n                          ),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.hours, function (hour) {\n                            return _c(\"option\", { domProps: { value: hour } }, [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.timePadding(hour)) +\n                                  \"\\n                                  \"\n                              ),\n                            ])\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.classTimingForm,\n                          \"prop-name\": _vm.getSessionEndHourName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"col-6\" },\n                    [\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: session.end_min,\n                              expression: \"session.end_min\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: _vm.getSessionEndMinName(index) },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  session,\n                                  \"end_min\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.setNextStartMin(session, index)\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\n                            \"option\",\n                            { attrs: { value: \"null\", selected: \"\" } },\n                            [_vm._v(_vm._s(_vm.trans(\"academic.select_min\")))]\n                          ),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.mins, function (min) {\n                            return _c(\"option\", { domProps: { value: min } }, [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.timePadding(min)) +\n                                  \"\\n                                  \"\n                              ),\n                            ])\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.classTimingForm,\n                          \"prop-name\": _vm.getSessionEndMinName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [_vm._v(_vm._s(_vm.trans(\"academic.is_a_break\")))]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-20\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: session.is_a_break,\n                      callback: function ($$v) {\n                        _vm.$set(session, \"is_a_break\", $$v)\n                      },\n                      expression: \"session.is_a_break\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm._m(0, true),\n          ])\n        }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info btn-sm waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: { click: _vm.addRow },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"academic.add_class_timing_session\")))]\n              ),\n            ]),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-danger\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$router.push(\"/academic/class/timing\")\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\", disabled: _vm.is_disabled_editing },\n            },\n            [\n              _vm.is_disabled_editing\n                ? _c(\"i\", { staticClass: \"fas fa-lock\" })\n                : _vm._e(),\n              _vm._v(\" \" + _vm._s(_vm.trans(\"general.save\"))),\n            ]\n          ),\n        ]),\n      ],\n      2\n    ),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n      _c(\"div\", { staticClass: \"form-group\" }),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=b199c46a&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b199c46a')) {\n      api.createRecord('b199c46a', component.options)\n    } else {\n      api.reload('b199c46a', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=b199c46a&\", function () {\n      api.rerender('b199c46a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/class-timing/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=b199c46a&\""],"mappings":";;;;;;;;;;AA6GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjPA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAUA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;AChlBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
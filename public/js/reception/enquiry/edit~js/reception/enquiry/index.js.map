{"version":3,"file":"js/reception/enquiry/edit~js/reception/enquiry/index.js?id=80d471475a7db25ee557","sources":["webpack:///resources/js/views/reception/enquiry/form.vue","webpack:///./resources/js/views/reception/enquiry/form.vue","webpack:///./resources/js/views/reception/enquiry/form.vue?c2cc","webpack:///./resources/js/views/reception/enquiry/form.vue?caac","webpack:///./resources/js/views/reception/enquiry/form.vue?f60a"],"sourcesContent":["<template>\n\t<div>\n        <form @submit.prevent=\"proceed\" @keydown=\"enquiryForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('reception.date_of_enquiry')}}</label>\n                        <datepicker v-model=\"enquiryForm.date_of_enquiry\" :bootstrapStyling=\"true\" @selected=\"enquiryForm.errors.clear('date_of_enquiry')\" :placeholder=\"trans('reception.date_of_enquiry')\"></datepicker>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"date_of_enquiry\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('reception.enquiry_type')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_enquiry_type\" name=\"enquiry_type_id\" id=\"enquiry_type_id\" :options=\"enquiry_types\" :placeholder=\"trans('reception.select_enquiry_type')\" @select=\"onEnquiryTypeSelect\" @close=\"enquiryForm.errors.clear('enquiry_type_id')\" @remove=\"enquiryForm.enquiry_type_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!enquiry_types.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"enquiry_type_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('reception.enquiry_source')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_enquiry_source\" name=\"enquiry_source_id\" id=\"enquiry_source_id\" :options=\"enquiry_sources\" :placeholder=\"trans('reception.select_enquiry_source')\" @select=\"onEnquirySourceSelect\" @close=\"enquiryForm.errors.clear('enquiry_source_id')\" @remove=\"enquiryForm.enquiry_source_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!enquiry_sources.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"enquiry_source_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.email')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.email\" name=\"email\" :placeholder=\"trans('student.email')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"email\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.contact_number')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.contact_number\" name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"contact_number\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.alternate_contact_number')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.alternate_contact_number\" name=\"alternate_contact_number\" :placeholder=\"trans('student.alternate_contact_number')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"alternate_contact_number\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <h4 class=\"card-title\">{{trans('student.guardian')}}</h4>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.first_guardian_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.first_guardian_name\" name=\"first_guardian_name\" :placeholder=\"trans('student.first_guardian_name')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"first_guardian_name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('general.relation')}}</label>\n                        <select v-model=\"enquiryForm.first_guardian_relation\" class=\"custom-select col-12\" name=\"first_guardian_relation\" @change=\"enquiryForm.errors.clear('first_guardian_relation')\">\n                          <option value=\"\">{{trans('general.select_one')}}</option>\n                          <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                            {{ relation.name }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"first_guardian_relation\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.second_guardian_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.second_guardian_name\" name=\"second_guardian_name\" :placeholder=\"trans('student.second_guardian_name')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"second_guardian_name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('general.relation')}}</label>\n                        <select v-model=\"enquiryForm.second_guardian_relation\" class=\"custom-select col-12\" name=\"second_guardian_relation\" @change=\"enquiryForm.errors.clear('second_guardian_relation')\">\n                          <option value=\"\">{{trans('general.select_one')}}</option>\n                          <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                            {{ relation.name }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"second_guardian_relation\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.third_guardian_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"enquiryForm.third_guardian_name\" name=\"third_guardian_name\" :placeholder=\"trans('student.third_guardian_name')\">\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"third_guardian_name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('general.relation')}}</label>\n                        <select v-model=\"enquiryForm.third_guardian_relation\" class=\"custom-select col-12\" name=\"third_guardian_relation\" @change=\"enquiryForm.errors.clear('third_guardian_relation')\">\n                          <option value=\"\">{{trans('general.select_one')}}</option>\n                          <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                            {{ relation.name }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"third_guardian_relation\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-9\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('reception.enquiry_remarks')}}</label>\n                        <autosize-textarea v-model=\"enquiryForm.remarks\" rows=\"1\" name=\"remarks\" :placeholder=\"trans('reception.enquiry_remarks')\"></autosize-textarea>\n                        <show-error :form-name=\"enquiryForm\" prop-name=\"remarks\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"p-t-20 border-top\">\n                <div class=\"row\" v-for=\"(student, index) in enquiryForm.students\">\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">\n                                {{trans('student.name')}}\n                                <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_student`\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('student.delete_student')\"><i class=\"fas fa-times\"></i></button>\n                            </label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"student.student_name\" :name=\"getStudentName(index)\" :placeholder=\"trans('student.name')\">\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getStudentName(index)\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.gender')}}</label>\n                            <div class=\"radio radio-info p-l-0\">\n                                <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\n                                    <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"getGenderId(index,gender.id)\" v-model=\"student.gender\" :checked=\"student.gender == gender.id\" :name=\"getGenderName(index)\" @click=\"enquiryForm.errors.clear(getGenderName(index))\">\n                                    <label class=\"form-check-label\" :for=\"getGenderId(index,gender.id)\"> {{trans('list.'+gender.id)}}</label>\n                                </div>\n                            </div>\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getGenderName(index)\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.date_of_birth')}}</label>\n                            <datepicker v-model=\"student.date_of_birth\" :bootstrapStyling=\"true\" @selected=\"enquiryForm.errors.clear(getDateOfBirthName(index))\" :placeholder=\"trans('student.date_of_birth')\"></datepicker>\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getDateOfBirthName(index)\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('academic.course')+' '+getDefaultAcademicSession.name}}</label>\n                            <v-select label=\"name\" v-model=\"student.selected_course\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" :name=\"getCourseName(index)\" :id=\"getCourseName(index)\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" @close=\"enquiryForm.errors.clear(getCourseName(index))\" @remove=\"onCourseRemove\">\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                                    {{trans('general.no_option_found')}}\n                                </div>\n                            </v-select>\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getCourseName(index)\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('reception.current_institute')}}</label>\n                            <v-select label=\"name\" v-model=\"student.selected_institute\" :name=\"getCurrentInstituteName(index)\" :id=\"getCurrentInstituteName(index)\" :options=\"institutes\" :placeholder=\"trans('academic.select_institute')\" @select=\"onInstituteSelect\" @close=\"enquiryForm.errors.clear(getCurrentInstituteName(index))\" @remove=\"onInstituteRemove\">\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!institutes.length\">\n                                    {{trans('general.no_option_found')}}\n                                </div>\n                            </v-select>\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getCurrentInstituteName(index)\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-2\">\n                        <div class=\"form-group\">\n                            <label for=\"\">\n                                {{trans('student.remarks')}}\n                            </label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"student.remarks\" :name=\"getRemarkName(index)\" :placeholder=\"trans('student.remarks')\">\n                            <show-error :form-name=\"enquiryForm\" :prop-name=\"getRemarkName(index)\"></show-error>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12\">\n                        <div class=\"form-group\">\n                            <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('student.add_new_student')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer text-right\">\n                <button v-show=\"uuid\" type=\"button\" class=\"btn btn-danger \" @click=\"$router.push('/reception/enquiry')\">{{trans('general.cancel')}}</button>\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n            </div>\n        </form>\n    </div>\n</template>\n\n<script>\n\n    export default {\n        components: {},\n        props: ['uuid'],\n        data(){\n            return {\n                enquiryForm: new Form({\n                    first_guardian_name: '',\n                    first_guardian_relation: '',\n                    second_guardian_name: '',\n                    second_guardian_relation: '',\n                    third_guardian_name: '',\n                    third_guardian_relation: '',\n                    date_of_enquiry: '',\n                    enquiry_type_id: '',\n                    enquiry_source_id: '',\n                    contact_number: '',\n                    alternate_contact_number: '',\n                    email: '',\n                    remarks: '',\n                    students: []\n                }),\n                guardian_relations: [],\n                enquiry_types: [],\n                enquiry_sources: [],\n                courses: [],\n                institutes: [],\n                genders: [],\n                selected_enquiry_type: null,\n                selected_enquiry_source: null\n            }\n        },\n        mounted(){\n            if(!this.uuid)\n                this.addRow();\n\n            if(this.uuid)\n                this.get();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            }, \n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/enquiry/pre-requisite')\n                    .then(response => {\n                        this.enquiry_types = response.enquiry_types;\n                        this.enquiry_sources = response.enquiry_sources;\n                        this.courses = response.courses;\n                        this.institutes = response.institutes;\n                        this.genders = response.genders;\n                        this.guardian_relations = response.guardian_relations;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            addRow(){\n                let new_index = this.enquiryForm.students.push({\n                    uuid: this.$uuid.v4(),\n                    student_name: '',\n                    date_of_birth: '',\n                    gender: '',\n                    course_id: '',\n                    institute_id: '',\n                    remarks: '',\n                    selected_course: null,\n                    selected_institute: null\n                })\n            },\n            getStudentName(index){\n                return index+'_student_name';\n            },\n            getRemarkName(index){\n                return index+'_remarks';\n            },\n            getDateOfBirthName(index){\n                return index+'_date_of_birth';\n            },\n            getCourseName(index){\n                return index+'_course_id';\n            },\n            getCurrentInstituteName(index){\n                return index+'_institute_id';\n            },\n            getGenderName(index){\n                return index+'_gender';\n            },\n            getGenderId(index,id){\n                return index+'_'+id+'_gender';\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/enquiry/'+this.uuid)\n                    .then(response => {\n                        this.enquiryForm.date_of_enquiry = response.enquiry.date_of_enquiry;\n                        this.enquiryForm.first_guardian_name = response.enquiry.first_guardian_name;\n                        this.enquiryForm.second_guardian_name = response.enquiry.second_guardian_name;\n                        this.enquiryForm.third_guardian_name = response.enquiry.third_guardian_name;\n                        this.enquiryForm.first_guardian_relation = response.enquiry.first_guardian_relation;\n                        this.enquiryForm.second_guardian_relation = response.enquiry.second_guardian_relation;\n                        this.enquiryForm.third_guardian_relation = response.enquiry.third_guardian_relation;\n                        this.enquiryForm.contact_number = response.enquiry.contact_number;\n                        this.enquiryForm.alternate_contact_number = response.enquiry.alternate_contact_number;\n                        this.enquiryForm.email = response.enquiry.email;\n                        this.enquiryForm.remarks = response.enquiry.remarks;\n                        this.enquiryForm.enquiry_type_id = response.enquiry.enquiry_type_id;\n                        this.selected_enquiry_type = response.enquiry.enquiry_type_id ? {id: response.enquiry.enquiry_type_id, name: response.enquiry.enquiry_type.name} : null;\n                        this.enquiryForm.enquiry_source_id = response.enquiry.enquiry_source_id;\n                        this.selected_enquiry_source = response.enquiry.enquiry_source_id ? {id: response.enquiry.enquiry_source_id, name: response.enquiry.enquiry_source.name} : null;\n                        response.enquiry.enquiry_details.forEach(student => {\n                            this.enquiryForm.students.push({\n                                uuid: student.uuid,\n                                student_name: student.student_name,\n                                gender: student.gender,\n                                date_of_birth: student.date_of_birth,\n                                course_id: student.course_id,\n                                selected_course: (student.course_id) ? {id: student.course_id, name: student.course.name} : null,\n                                institute_id: student.institute_id,\n                                selected_institute: (student.institute_id) ? {id: student.institute_id, name: student.institute.name} : null,\n                                remarks: student.remarks\n                            });\n                        });\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.enquiryForm.post('/api/enquiry')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.enquiryForm.selected_enquiry_type = null;\n                        this.enquiryForm.selected_enquiry_source = null;\n                        this.enquiryForm.students = [];\n                        this.addRow();\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.enquiryForm.patch('/api/enquiry/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/reception/enquiry');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            onEnquiryTypeSelect(selectedOption){\n                this.enquiryForm.enquiry_type_id = selectedOption.id;\n            },\n            onEnquirySourceSelect(selectedOption){\n                this.enquiryForm.enquiry_source_id = selectedOption.id;\n            },\n            confirmDelete(index){\n                return dialog => this.deleteStudent(index);\n            },\n            deleteStudent(index){\n                this.enquiryForm.students.splice(index, 1);\n            },\n            onCourseSelect(selectedOption, id){\n                let index = id.split(\"_\")[0];\n                let student = this.enquiryForm.students[index];\n                student.course_id = selectedOption.id;\n            },\n            onCourseRemove(removedOption, id){\n                let index = id.split(\"_\")[0];\n                let student = this.enquiryForm.students[index];\n                student.course_id = '';\n            },\n            onInstituteSelect(selectedOption, id){\n                let index = id.split(\"_\")[0];\n                let student = this.enquiryForm.students[index];\n                student.institute_id = selectedOption.id;\n            },\n            onInstituteRemove(removedOption, id){\n                let index = id.split(\"_\")[0];\n                let student = this.enquiryForm.students[index];\n                student.institute_id = '';\n            }\n        },\n        computed:{\n            getDefaultAcademicSession(){\n                return helper.getDefaultAcademicSession();\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.enquiryForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.date_of_enquiry\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"reception.date_of_enquiry\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.enquiryForm.errors.clear(\"date_of_enquiry\")\n                    },\n                  },\n                  model: {\n                    value: _vm.enquiryForm.date_of_enquiry,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.enquiryForm, \"date_of_enquiry\", $$v)\n                    },\n                    expression: \"enquiryForm.date_of_enquiry\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"date_of_enquiry\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.enquiry_type\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"enquiry_type_id\",\n                      id: \"enquiry_type_id\",\n                      options: _vm.enquiry_types,\n                      placeholder: _vm.trans(\"reception.select_enquiry_type\"),\n                    },\n                    on: {\n                      select: _vm.onEnquiryTypeSelect,\n                      close: function ($event) {\n                        return _vm.enquiryForm.errors.clear(\"enquiry_type_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.enquiryForm.enquiry_type_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_enquiry_type,\n                      callback: function ($$v) {\n                        _vm.selected_enquiry_type = $$v\n                      },\n                      expression: \"selected_enquiry_type\",\n                    },\n                  },\n                  [\n                    !_vm.enquiry_types.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"enquiry_type_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.enquiry_source\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"enquiry_source_id\",\n                      id: \"enquiry_source_id\",\n                      options: _vm.enquiry_sources,\n                      placeholder: _vm.trans(\"reception.select_enquiry_source\"),\n                    },\n                    on: {\n                      select: _vm.onEnquirySourceSelect,\n                      close: function ($event) {\n                        return _vm.enquiryForm.errors.clear(\"enquiry_source_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.enquiryForm.enquiry_source_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_enquiry_source,\n                      callback: function ($$v) {\n                        _vm.selected_enquiry_source = $$v\n                      },\n                      expression: \"selected_enquiry_source\",\n                    },\n                  },\n                  [\n                    !_vm.enquiry_sources.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"enquiry_source_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.email\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.email,\n                      expression: \"enquiryForm.email\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"email\",\n                    placeholder: _vm.trans(\"student.email\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.email },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.enquiryForm, \"email\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.enquiryForm, \"prop-name\": \"email\" },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.contact_number,\n                      expression: \"enquiryForm.contact_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"contact_number\",\n                    placeholder: _vm.trans(\"student.contact_number\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.contact_number },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.enquiryForm,\n                        \"contact_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"contact_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.alternate_contact_number\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.alternate_contact_number,\n                      expression: \"enquiryForm.alternate_contact_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"alternate_contact_number\",\n                    placeholder: _vm.trans(\"student.alternate_contact_number\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.alternate_contact_number },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.enquiryForm,\n                        \"alternate_contact_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"alternate_contact_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"h4\", { staticClass: \"card-title\" }, [\n          _vm._v(_vm._s(_vm.trans(\"student.guardian\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.first_guardian_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.first_guardian_name,\n                      expression: \"enquiryForm.first_guardian_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"first_guardian_name\",\n                    placeholder: _vm.trans(\"student.first_guardian_name\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.first_guardian_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.enquiryForm,\n                        \"first_guardian_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"first_guardian_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"general.relation\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.enquiryForm.first_guardian_relation,\n                        expression: \"enquiryForm.first_guardian_relation\",\n                      },\n                    ],\n                    staticClass: \"custom-select col-12\",\n                    attrs: { name: \"first_guardian_relation\" },\n                    on: {\n                      change: [\n                        function ($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function (o) {\n                              return o.selected\n                            })\n                            .map(function (o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.enquiryForm,\n                            \"first_guardian_relation\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function ($event) {\n                          return _vm.enquiryForm.errors.clear(\n                            \"first_guardian_relation\"\n                          )\n                        },\n                      ],\n                    },\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.guardian_relations, function (relation) {\n                      return _c(\n                        \"option\",\n                        { domProps: { value: relation.id } },\n                        [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(relation.name) +\n                              \"\\n                          \"\n                          ),\n                        ]\n                      )\n                    }),\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"first_guardian_relation\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.second_guardian_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.second_guardian_name,\n                      expression: \"enquiryForm.second_guardian_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"second_guardian_name\",\n                    placeholder: _vm.trans(\"student.second_guardian_name\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.second_guardian_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.enquiryForm,\n                        \"second_guardian_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"second_guardian_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"general.relation\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.enquiryForm.second_guardian_relation,\n                        expression: \"enquiryForm.second_guardian_relation\",\n                      },\n                    ],\n                    staticClass: \"custom-select col-12\",\n                    attrs: { name: \"second_guardian_relation\" },\n                    on: {\n                      change: [\n                        function ($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function (o) {\n                              return o.selected\n                            })\n                            .map(function (o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.enquiryForm,\n                            \"second_guardian_relation\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function ($event) {\n                          return _vm.enquiryForm.errors.clear(\n                            \"second_guardian_relation\"\n                          )\n                        },\n                      ],\n                    },\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.guardian_relations, function (relation) {\n                      return _c(\n                        \"option\",\n                        { domProps: { value: relation.id } },\n                        [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(relation.name) +\n                              \"\\n                          \"\n                          ),\n                        ]\n                      )\n                    }),\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"second_guardian_relation\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.third_guardian_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.enquiryForm.third_guardian_name,\n                      expression: \"enquiryForm.third_guardian_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"third_guardian_name\",\n                    placeholder: _vm.trans(\"student.third_guardian_name\"),\n                  },\n                  domProps: { value: _vm.enquiryForm.third_guardian_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.enquiryForm,\n                        \"third_guardian_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"third_guardian_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"general.relation\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.enquiryForm.third_guardian_relation,\n                        expression: \"enquiryForm.third_guardian_relation\",\n                      },\n                    ],\n                    staticClass: \"custom-select col-12\",\n                    attrs: { name: \"third_guardian_relation\" },\n                    on: {\n                      change: [\n                        function ($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function (o) {\n                              return o.selected\n                            })\n                            .map(function (o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.enquiryForm,\n                            \"third_guardian_relation\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function ($event) {\n                          return _vm.enquiryForm.errors.clear(\n                            \"third_guardian_relation\"\n                          )\n                        },\n                      ],\n                    },\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.guardian_relations, function (relation) {\n                      return _c(\n                        \"option\",\n                        { domProps: { value: relation.id } },\n                        [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(relation.name) +\n                              \"\\n                          \"\n                          ),\n                        ]\n                      )\n                    }),\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"third_guardian_relation\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-9\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.enquiry_remarks\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"remarks\",\n                    placeholder: _vm.trans(\"reception.enquiry_remarks\"),\n                  },\n                  model: {\n                    value: _vm.enquiryForm.remarks,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.enquiryForm, \"remarks\", $$v)\n                    },\n                    expression: \"enquiryForm.remarks\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.enquiryForm,\n                    \"prop-name\": \"remarks\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"p-t-20 border-top\" },\n          [\n            _vm._l(_vm.enquiryForm.students, function (student, index) {\n              return _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.trans(\"student.name\")) +\n                            \"\\n                                \"\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDelete(index) },\n                                expression: \"{ok: confirmDelete(index)}\",\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"student.delete_student\"),\n                                expression: \"trans('student.delete_student')\",\n                              },\n                            ],\n                            key: `${index}_delete_student`,\n                            staticClass: \"btn btn-xs btn-danger\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: student.student_name,\n                            expression: \"student.student_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getStudentName(index),\n                          placeholder: _vm.trans(\"student.name\"),\n                        },\n                        domProps: { value: student.student_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              student,\n                              \"student_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getStudentName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"radio radio-info p-l-0\" },\n                        _vm._l(_vm.genders, function (gender) {\n                          return _c(\n                            \"div\",\n                            { staticClass: \"form-check form-check-inline\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: student.gender,\n                                    expression: \"student.gender\",\n                                  },\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  id: _vm.getGenderId(index, gender.id),\n                                  name: _vm.getGenderName(index),\n                                },\n                                domProps: {\n                                  value: gender.id,\n                                  checked: student.gender == gender.id,\n                                  checked: _vm._q(student.gender, gender.id),\n                                },\n                                on: {\n                                  click: function ($event) {\n                                    _vm.enquiryForm.errors.clear(\n                                      _vm.getGenderName(index)\n                                    )\n                                  },\n                                  change: function ($event) {\n                                    return _vm.$set(\n                                      student,\n                                      \"gender\",\n                                      gender.id\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: {\n                                    for: _vm.getGenderId(index, gender.id),\n                                  },\n                                },\n                                [\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"list.\" + gender.id))\n                                  ),\n                                ]\n                              ),\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getGenderName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"student.date_of_birth\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            _vm.enquiryForm.errors.clear(\n                              _vm.getDateOfBirthName(index)\n                            )\n                          },\n                        },\n                        model: {\n                          value: student.date_of_birth,\n                          callback: function ($$v) {\n                            _vm.$set(student, \"date_of_birth\", $$v)\n                          },\n                          expression: \"student.date_of_birth\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getDateOfBirthName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"academic.course\") +\n                              \" \" +\n                              _vm.getDefaultAcademicSession.name\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            \"group-values\": \"courses\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: _vm.getCourseName(index),\n                            id: _vm.getCourseName(index),\n                            options: _vm.courses,\n                            placeholder: _vm.trans(\"academic.select_course\"),\n                          },\n                          on: {\n                            select: _vm.onCourseSelect,\n                            close: function ($event) {\n                              _vm.enquiryForm.errors.clear(\n                                _vm.getCourseName(index)\n                              )\n                            },\n                            remove: _vm.onCourseRemove,\n                          },\n                          model: {\n                            value: student.selected_course,\n                            callback: function ($$v) {\n                              _vm.$set(student, \"selected_course\", $$v)\n                            },\n                            expression: \"student.selected_course\",\n                          },\n                        },\n                        [\n                          !_vm.courses.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getCourseName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.current_institute\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: _vm.getCurrentInstituteName(index),\n                            id: _vm.getCurrentInstituteName(index),\n                            options: _vm.institutes,\n                            placeholder: _vm.trans(\"academic.select_institute\"),\n                          },\n                          on: {\n                            select: _vm.onInstituteSelect,\n                            close: function ($event) {\n                              _vm.enquiryForm.errors.clear(\n                                _vm.getCurrentInstituteName(index)\n                              )\n                            },\n                            remove: _vm.onInstituteRemove,\n                          },\n                          model: {\n                            value: student.selected_institute,\n                            callback: function ($$v) {\n                              _vm.$set(student, \"selected_institute\", $$v)\n                            },\n                            expression: \"student.selected_institute\",\n                          },\n                        },\n                        [\n                          !_vm.institutes.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getCurrentInstituteName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.trans(\"student.remarks\")) +\n                            \"\\n                            \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: student.remarks,\n                            expression: \"student.remarks\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getRemarkName(index),\n                          placeholder: _vm.trans(\"student.remarks\"),\n                        },\n                        domProps: { value: student.remarks },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(student, \"remarks\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.enquiryForm,\n                          \"prop-name\": _vm.getRemarkName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ])\n            }),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-info btn-sm waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: { click: _vm.addRow },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"student.add_new_student\")))]\n                  ),\n                ]),\n              ]),\n            ]),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.uuid,\n                  expression: \"uuid\",\n                },\n              ],\n              staticClass: \"btn btn-danger\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$router.push(\"/reception/enquiry\")\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.uuid\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n          ),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=629b658f&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('629b658f')) {\n      api.createRecord('629b658f', component.options)\n    } else {\n      api.reload('629b658f', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=629b658f&\", function () {\n      api.rerender('629b658f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/reception/enquiry/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=629b658f&\""],"mappings":";;;;;;;;;;AAkNA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/ZA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AASA;AAKA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;ACjuCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
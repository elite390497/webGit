{"version":3,"file":"js/student/termination/edit.js?id=81d222faa60abeea95bc","sources":["webpack:///resources/js/views/student/termination/edit.vue","webpack:///./resources/js/views/student/termination/edit.vue","webpack:///./resources/js/views/student/termination/edit.vue?29ae","webpack:///./resources/js/views/student/termination/edit.vue?f154","webpack:///./resources/js/views/student/termination/edit.vue?303b"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('academic.edit_transfer_certificate')}}\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/student/termination')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.termination')}}</span></button>\n                    </h3>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"card card-form\">\n\t\t\t\t<form @submit.prevent=\"submit\" @keydown=\"transferCertificateForm.errors.clear($event.target.name)\">\n\t                <div class=\"card-body p-t-20\">\n\t\t\t\t\t\t<div class=\"row\" v-if=\"student_record.id\">\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\t\n\t\t\t\t            \t<p>{{trans('student.name')}}: <strong>{{getStudentName(student_record.student)}}</strong></p>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\t\n\t\t\t\t            \t<p>{{trans('student.admission_number')}}: <strong>{{getAdmissionNumber(student_record)}}</strong></p>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\t\n\t\t\t\t            \t<p>{{trans('academic.batch')}}: <strong>{{student_record.batch.course.name+' '+student_record.batch.name}}</strong></p>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\t\n\t\t\t\t            \t<p>{{trans('student.tc_props.total_working_days')}}: <strong>{{working_days}}</strong></p>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\t\n\t\t\t\t            \t<p>{{trans('student.tc_props.total_present_days')}}: <strong>{{attendance}}</strong></p>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('academic.transfer_certificate_format')}}</label>\n\t\t\t\t                    <v-select label=\"name\" v-model=\"selected_transfer_certificate_format\" name=\"transfer_certificate_format\" id=\"transfer_certificate_format\" :options=\"transfer_certificate_formats\" :placeholder=\"trans('academic.select_transfer_certificate_format')\" @select=\"onTransferCertificateFormatSelect\" @close=\"transferCertificateForm.errors.clear('transfer_certificate_format')\" @remove=\"onTransferCertificateFormatRemove\">\n\t\t\t\t                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transfer_certificate_formats.length\">\n\t\t\t\t                            {{trans('general.no_option_found')}}\n\t\t\t\t                        </div>\n\t\t\t\t                    </v-select>\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"transfer_certificate_format\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.date_of_application')}}</label>\n\t\t\t\t                    <datepicker v-model=\"transferCertificateForm.date_of_application\" name=\"date_of_application\" :bootstrapStyling=\"true\" @selected=\"transferCertificateForm.errors.clear('date_of_application')\" :placeholder=\"trans('student.date_of_application')\"></datepicker>\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"date_of_application\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.date_of_issue')}}</label>\n\t\t\t\t                    <datepicker v-model=\"transferCertificateForm.date_of_issue\" name=\"date_of_issue\" :bootstrapStyling=\"true\" @selected=\"transferCertificateForm.errors.clear('date_of_issue')\" :placeholder=\"trans('student.date_of_issue')\"></datepicker>\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"date_of_issue\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.transfer_certificate_book_number')}}</label>\n\t\t\t\t                    <input class=\"form-control\" type=\"text\" v-model=\"transferCertificateForm.book_number\" name=\"book_number\" :placeholder=\"trans('student.transfer_certificate_book_number')\">\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"book_number\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.transfer_certificate_number')}}</label>\n\t\t\t\t                    <div class=\"row\">\n\t\t\t\t                        <div class=\"col-12 col-sm-4\">\n\t\t\t\t                            <input class=\"form-control\" type=\"text\" v-model=\"transferCertificateForm.prefix\" name=\"prefix\" :placeholder=\"trans('student.transfer_certificate_prefix')\">\n\t\t\t\t                        </div>\n\t\t\t\t                        <div class=\"col-12 col-sm-8\">\n\t\t\t\t                            <input class=\"form-control\" type=\"text\" v-model=\"transferCertificateForm.number\" name=\"number\" :placeholder=\"trans('student.transfer_certificate_number')\">\n\t\t\t\t                        </div>\n\t\t\t\t                    </div>\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"number\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\t\t\t\t        <div class=\"row\">\n\t\t\t\t            <div class=\"col-12\" :key=\"variable.name\" v-for=\"variable in transferCertificateForm.variables\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.tc_props.'+variable.name)}}</label>\n\t\t\t\t                    <input class=\"form-control\" type=\"text\" v-model=\"variable.value\" :placeholder=\"trans('student.tc_props.'+variable.name)\">\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\t\t\t\t        <div class=\"row\">\n\t\t\t\t            <div class=\"col-12\">\n\t\t\t\t                <div class=\"form-group\">\n\t\t\t\t                    <label for=\"\">{{trans('student.transfer_certificate_memo')}}</label>\n\t\t\t\t                    <autosize-textarea v-model=\"transferCertificateForm.memo\" rows=\"2\" name=\"memo\" :placeholder=\"trans('student.transfer_certificate_memo')\"></autosize-textarea>\n\t\t\t\t                    <show-error :form-name=\"transferCertificateForm\" prop-name=\"memo\"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\t\t\t\t\t</div>\n\t\t            <div class=\"card-footer text-right\">\n\t\t                <router-link to=\"/student/termination\" class=\"btn btn-danger waves-effect waves-light\">{{trans('general.cancel')}}</router-link>\n\t\t                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n\t\t                    <span>{{trans('general.save')}}</span>\n\t\t                </button>\n\t\t            </div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tcomponents: {},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tstudent_record: {},\n\t\t\t\tuuid: this.$route.params.uuid,\n\t\t\t\trecord_id: this.$route.params.record_id,\n\t\t\t\ttransfer_certificate_formats: [],\n\t\t\t\ttransferCertificateForm: new Form({\n\t\t\t\t\ttransfer_certificate_format: '',\n\t\t\t\t\tdate_of_application: '',\n\t\t\t\t\tdate_of_issue: '',\n\t\t\t\t\tbook_number: '',\n\t\t\t\t\tnumber: '',\n\t\t\t\t\tprefix: '',\n\t\t\t\t\tvariables: [],\n\t\t\t\t\tmemo: ''\n\t\t\t\t},false),\n\t\t\t\tselected_transfer_certificate_format: null,\n                numbers: [],\n                working_days: 0,\n                attendance: 0\n\t\t\t}\n\t\t},\n\t\tmounted() {\n            if(!helper.hasPermission('terminate-student')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n\t\t},\n\t\tmethods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/student/'+this.uuid+'/transfer-certificate/'+this.record_id)\n                    .then(response => {\n                        this.student_record = response.student_record;\n                        this.transfer_certificate_formats = response.transfer_certificate_formats;\n                        this.numbers = response.numbers;\n                        this.working_days = response.working_days;\n                        this.attendance = response.attendance;\n                        this.transferCertificateForm.prefix = helper.getConfig('transfer_certificate_prefix');\n\n                        let transfer_certificate = response.student_record.transfer_certificate;\n\n                        if (transfer_certificate) {\n                        \tthis.transferCertificateForm.date_of_application = transfer_certificate.date_of_application;\n                        \tthis.transferCertificateForm.date_of_issue = transfer_certificate.date_of_issue;\n                        \tthis.transferCertificateForm.prefix = transfer_certificate.prefix;\n                        \tthis.transferCertificateForm.number = transfer_certificate.number;\n                        \tthis.transferCertificateForm.book_number = transfer_certificate.options.hasOwnProperty(\"book_number\") ? transfer_certificate.options.book_number : '';\n                        \tthis.transferCertificateForm.transfer_certificate_format = transfer_certificate.format;\n\n\t                        let transfer_certificate_format_id = transfer_certificate.format;\n\t                        let transfer_certificate_format = this.transfer_certificate_formats.find(o => o.id == transfer_certificate_format_id);\n\n\t                        this.selected_transfer_certificate_format = transfer_certificate_format || null; \n\t\t\t                this.transferCertificateForm.variables = [];\n\t\t\t                this.transferCertificateForm.variables = transfer_certificate.options.transfer_certificate;\n                        }\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.transferCertificateForm.post('/api/student/'+this.uuid+'/transfer-certificate/'+this.record_id)\n                    .then(response => {\n                    \ttoastr.success(response.message);\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            onTransferCertificateFormatSelect(selectedOption){\n                this.transferCertificateForm.transfer_certificate_format = selectedOption.id;\n                this.transferCertificateForm.variables = [];\n                selectedOption.variables.forEach(variable => {\n                \tthis.transferCertificateForm.variables.push({\n                \t\tname: variable,\n                \t\tvalue: ''\n                \t})\n                });\n            },\n            onTransferCertificateFormatRemove() {\n            \tthis.transferCertificateForm.transfer_certificate_format = '';\n            \tthis.transferCertificateForm.variables = [];\n            },\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            getAdmissionNumber(student_record){\n                return helper.getAdmissionNumber(student_record.admission);\n            }\n\t\t},\n        watch: {\n            'transferCertificateForm.prefix': function(val) {\n                let number = this.numbers.find(o => o.prefix == val);\n\n                if (typeof number == 'undefined')\n                    this.transferCertificateForm.number = helper.formatWithPadding(1,helper.getConfig('transfer_certificate_digit'));\n                else \n                    this.transferCertificateForm.number = helper.formatWithPadding((number.number + 1),helper.getConfig('transfer_certificate_digit'));\n            }\n        }\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(\n              _vm._s(_vm.trans(\"academic.edit_transfer_certificate\")) +\n                \"\\n                        \"\n            ),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/student/termination\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.termination\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"form\",\n          {\n            on: {\n              submit: function ($event) {\n                $event.preventDefault()\n                return _vm.submit.apply(null, arguments)\n              },\n              keydown: function ($event) {\n                return _vm.transferCertificateForm.errors.clear(\n                  $event.target.name\n                )\n              },\n            },\n          },\n          [\n            _c(\"div\", { staticClass: \"card-body p-t-20\" }, [\n              _vm.student_record.id\n                ? _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\"p\", [\n                        _vm._v(_vm._s(_vm.trans(\"student.name\")) + \": \"),\n                        _c(\"strong\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.getStudentName(_vm.student_record.student)\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.admission_number\")) + \": \"\n                        ),\n                        _c(\"strong\", [\n                          _vm._v(\n                            _vm._s(_vm.getAdmissionNumber(_vm.student_record))\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\"p\", [\n                        _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \": \"),\n                        _c(\"strong\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.student_record.batch.course.name +\n                                \" \" +\n                                _vm.student_record.batch.name\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.tc_props.total_working_days\")\n                          ) + \": \"\n                        ),\n                        _c(\"strong\", [_vm._v(_vm._s(_vm.working_days))]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\"p\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.tc_props.total_present_days\")\n                          ) + \": \"\n                        ),\n                        _c(\"strong\", [_vm._v(_vm._s(_vm.attendance))]),\n                      ]),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"academic.transfer_certificate_format\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: \"transfer_certificate_format\",\n                            id: \"transfer_certificate_format\",\n                            options: _vm.transfer_certificate_formats,\n                            placeholder: _vm.trans(\n                              \"academic.select_transfer_certificate_format\"\n                            ),\n                          },\n                          on: {\n                            select: _vm.onTransferCertificateFormatSelect,\n                            close: function ($event) {\n                              return _vm.transferCertificateForm.errors.clear(\n                                \"transfer_certificate_format\"\n                              )\n                            },\n                            remove: _vm.onTransferCertificateFormatRemove,\n                          },\n                          model: {\n                            value: _vm.selected_transfer_certificate_format,\n                            callback: function ($$v) {\n                              _vm.selected_transfer_certificate_format = $$v\n                            },\n                            expression: \"selected_transfer_certificate_format\",\n                          },\n                        },\n                        [\n                          !_vm.transfer_certificate_formats.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t                            \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n\\t\\t\\t\\t                        \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"transfer_certificate_format\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.date_of_application\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          name: \"date_of_application\",\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"student.date_of_application\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.transferCertificateForm.errors.clear(\n                              \"date_of_application\"\n                            )\n                          },\n                        },\n                        model: {\n                          value:\n                            _vm.transferCertificateForm.date_of_application,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.transferCertificateForm,\n                              \"date_of_application\",\n                              $$v\n                            )\n                          },\n                          expression:\n                            \"transferCertificateForm.date_of_application\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"date_of_application\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.date_of_issue\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          name: \"date_of_issue\",\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"student.date_of_issue\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.transferCertificateForm.errors.clear(\n                              \"date_of_issue\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.transferCertificateForm.date_of_issue,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.transferCertificateForm,\n                              \"date_of_issue\",\n                              $$v\n                            )\n                          },\n                          expression: \"transferCertificateForm.date_of_issue\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"date_of_issue\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\n                              \"student.transfer_certificate_book_number\"\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.transferCertificateForm.book_number,\n                            expression: \"transferCertificateForm.book_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"book_number\",\n                          placeholder: _vm.trans(\n                            \"student.transfer_certificate_book_number\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.transferCertificateForm.book_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.transferCertificateForm,\n                              \"book_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"book_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.transfer_certificate_number\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.transferCertificateForm.prefix,\n                                expression: \"transferCertificateForm.prefix\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"prefix\",\n                              placeholder: _vm.trans(\n                                \"student.transfer_certificate_prefix\"\n                              ),\n                            },\n                            domProps: {\n                              value: _vm.transferCertificateForm.prefix,\n                            },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.transferCertificateForm,\n                                  \"prefix\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.transferCertificateForm.number,\n                                expression: \"transferCertificateForm.number\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"number\",\n                              placeholder: _vm.trans(\n                                \"student.transfer_certificate_number\"\n                              ),\n                            },\n                            domProps: {\n                              value: _vm.transferCertificateForm.number,\n                            },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.transferCertificateForm,\n                                  \"number\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"row\" },\n                _vm._l(\n                  _vm.transferCertificateForm.variables,\n                  function (variable) {\n                    return _c(\n                      \"div\",\n                      { key: variable.name, staticClass: \"col-12\" },\n                      [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"student.tc_props.\" + variable.name)\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: variable.value,\n                                expression: \"variable.value\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: _vm.trans(\n                                \"student.tc_props.\" + variable.name\n                              ),\n                            },\n                            domProps: { value: variable.value },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(variable, \"value\", $event.target.value)\n                              },\n                            },\n                          }),\n                        ]),\n                      ]\n                    )\n                  }\n                ),\n                0\n              ),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.transfer_certificate_memo\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          name: \"memo\",\n                          placeholder: _vm.trans(\n                            \"student.transfer_certificate_memo\"\n                          ),\n                        },\n                        model: {\n                          value: _vm.transferCertificateForm.memo,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.transferCertificateForm, \"memo\", $$v)\n                          },\n                          expression: \"transferCertificateForm.memo\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.transferCertificateForm,\n                          \"prop-name\": \"memo\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"card-footer text-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { to: \"/student/termination\" },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [_c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))])]\n                ),\n              ],\n              1\n            ),\n          ]\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=7b776d08&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7b776d08')) {\n      api.createRecord('7b776d08', component.options)\n    } else {\n      api.reload('7b776d08', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=7b776d08&\", function () {\n      api.rerender('7b776d08', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/termination/edit.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=7b776d08&\""],"mappings":";;;;;;;;;;AA+GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;AC/NA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAaA;AAAA;AAaA;AAAA;AAeA;AAAA;AAWA;AAAA;AAaA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;AC3jBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
{"version":3,"file":"js/student/admission/index.js?id=5cf9b24f9c7d2a0b1628","sources":["webpack:///resources/js/views/student/admission/index.vue","webpack:///./resources/js/views/student/admission/index.vue","webpack:///./resources/js/views/student/admission/index.vue?12b3","webpack:///./resources/js/views/student/admission/index.vue?af63","webpack:///./resources/js/views/student/admission/index.vue?4f69"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('student.student_list')}}\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"student_records.total\">{{trans('general.total_result_found',{count : student_records.total, from: student_records.from, to: student_records.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <template v-if=\"hasNotAnyRole(['student','parent'])\">\n                            <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/student/card-view')\" v-tooltip=\"trans('general.card_view')\"><i class=\"fas fa-th\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.card_view')}}</span></button>\n                            <button class=\"btn btn-info btn-sm\" v-if=\"student_records.total && hasPermission('list-registration')\" @click=\"$router.push('/student/registration')\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.add_new_student')}}</span></button>\n                            <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                            <button class=\"btn btn-info btn-sm\" v-if=\"!showColumnPanel\" @click=\"showColumnPanel = !showColumnPanel\"><i class=\"fas fa-columns\"></i> {{trans('general.column')}}</button>\n                            <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                            <div class=\"btn-group\">\n                                <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                    <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                                </button>\n                                <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                    <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                    <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                                    <a class=\"dropdown-item custom-dropdown\" :href=\"exportExcel()\"><i class=\"fas fa-file-excel\"></i> {{trans('general.generate_excel')}}</a>\n                                    <button class=\"dropdown-item custom-dropdown\" @click=\"$router.go(-1)\"><i class=\"fas fa-undo\"></i> {{trans('general.back')}}</button>\n                                </div>\n                            </div>\n                            <help-button @clicked=\"help_topic = 'admission'\"></help-button>\n                        </template>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showColumnPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.column')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-2\" v-for=\"column in columns\">\n                                <label class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" :value=\"column.value\" v-model=\"filter.columns\">\n                                    <span class=\"custom-control-label\">{{column.text}}</span>\n                                </label>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showColumnPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}\n                        </h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.first_name')}}</label>\n                                    <input class=\"form-control\" name=\"first_name\" v-model=\"filter.first_name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.last_name')}}</label>\n                                    <input class=\"form-control\" name=\"last_name\" v-model=\"filter.last_name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.first_guardian_name')}}</label>\n                                    <input class=\"form-control\" name=\"first_guardian_name\" v-model=\"filter.first_guardian_name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.second_guardian_name')}}</label>\n                                    <input class=\"form-control\" name=\"second_guardian_name\" v-model=\"filter.second_guardian_name\">\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('academic.batch')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_batches\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <date-range-picker :start-date.sync=\"filter.date_of_birth_start_date\" :end-date.sync=\"filter.date_of_birth_end_date\" :label=\"trans('student.date_of_birth_between')\"></date-range-picker>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <date-range-picker :start-date.sync=\"filter.date_of_admission_start_date\" :end-date.sync=\"filter.date_of_admission_end_date\" :label=\"trans('student.date_of_admission_between')\"></date-range-picker>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.student_group')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_student_groups\" name=\"student_group_id\" id=\"student_group_id\" :options=\"student_groups\" :placeholder=\"trans('student.select_student_group')\" @select=\"onStudentGroupSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onStudentGroupRemove\" :selected=\"selected_student_groups\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!student_groups.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.gender')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_genders\" name=\"gender\" id=\"gender\" :options=\"genders\" @select=\"onGenderSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onGenderRemove\" :selected=\"selected_genders\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!genders.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('misc.blood_group')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_blood_groups\" name=\"blood_group_id\" id=\"blood_group_id\" :options=\"blood_groups\" :placeholder=\"trans('misc.select_blood_group')\" @select=\"onBloodGroupSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBloodGroupRemove\" :selected=\"selected_blood_groups\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!blood_groups.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('misc.religion')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_religions\" name=\"religion_id\" id=\"religion_id\" :options=\"religions\" :placeholder=\"trans('misc.select_religion')\" @select=\"onReligionSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onReligionRemove\" :selected=\"selected_religions\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!religions.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('misc.caste')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_castes\" name=\"caste_id\" id=\"caste_id\" :options=\"castes\" :placeholder=\"trans('misc.select_caste')\" @select=\"onCasteSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCasteRemove\" :selected=\"selected_castes\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!castes.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('misc.category')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_categories\" name=\"category_id\" id=\"category_id\" :options=\"categories\" :placeholder=\"trans('misc.select_category')\" @select=\"onCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCategoryRemove\" :selected=\"selected_categories\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!categories.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getStudents\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"student_records.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th class=\"select-all\" v-if=\"hasPermission('edit-student')\">\n                                        <label class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"selectAll\" @change=\"toggleSelectAll\">\n                                            <span class=\"custom-control-label\"></span>\n                                        </label>\n                                    </th>\n                                    <th v-if=\"isColumnVisible('admission_number')\">{{trans('student.admission_number_short')}}</th>\n                                    <th v-if=\"isColumnVisible('roll_number')\">{{trans('student.roll_number')}}</th>\n                                    <th>{{trans('student.first_name')}}</th>\n                                    <th v-if=\"isColumnVisible('middle_name')\">{{trans('student.middle_name')}}</th>\n                                    <th>{{trans('student.last_name')}}</th>\n                                    <th v-if=\"isColumnVisible('gender')\">{{trans('student.gender')}}</th>\n                                    <th v-if=\"isColumnVisible('first_guardian_name')\">{{trans('student.first_guardian_name')}}</th>\n                                    <th v-if=\"isColumnVisible('second_guardian_name')\">{{trans('student.second_guardian_name')}}</th>\n                                    <th v-if=\"isColumnVisible('date_of_birth')\">{{trans('student.date_of_birth')}}</th>\n                                    <th v-if=\"isColumnVisible('date_of_admission')\">{{trans('student.date_of_admission')}}</th>\n                                    <th v-if=\"isColumnVisible('date_of_promotion')\">{{trans('student.date_of_promotion')}}</th>\n                                    <th v-if=\"isColumnVisible('contact_number')\">{{trans('student.contact_number')}}</th>\n                                    <th>{{trans('academic.course')}}</th>\n                                    <th>{{trans('academic.batch')}}</th>\n                                    <th v-if=\"isColumnVisible('nationality')\">{{trans('student.nationality')}}</th>\n                                    <th v-if=\"isColumnVisible('blood_group')\">{{trans('misc.blood_group')}}</th>\n                                    <th v-if=\"isColumnVisible('religion')\">{{trans('misc.religion')}}</th>\n                                    <th v-if=\"isColumnVisible('caste')\">{{trans('misc.caste')}}</th>\n                                    <th v-if=\"isColumnVisible('category')\">{{trans('misc.category')}}</th>\n                                    <th v-if=\"isColumnVisible('unique_identification_number')\">{{trans('student.unique_identification_number')}}</th>\n                                    <th v-if=\"isColumnVisible('first_guardian_contact_number_1')\">{{trans('student.first_guardian_contact_number_1')}}</th>\n                                    <th v-if=\"isColumnVisible('second_guardian_contact_number_1')\">{{trans('student.second_guardian_contact_number_1')}}</th>\n                                    <th v-if=\"isColumnVisible('emergency_contact_name')\">{{trans('student.emergency_contact_name')}}</th>\n                                    <th v-if=\"isColumnVisible('emergency_contact_number')\">{{trans('student.emergency_contact_number')}}</th>\n                                    <th v-if=\"isColumnVisible('present_address')\">{{trans('student.present_address')}}</th>\n                                    <th v-if=\"isColumnVisible('permanent_address')\">{{trans('student.permanent_address')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"student_record in student_records.data\">\n                                    <td class=\"select-all\" v-if=\"hasPermission('edit-student')\">\n                                        <label class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" :value=\"student_record.student.id\" v-model=\"studentGroupForm.ids\">\n                                            <span class=\"custom-control-label\"></span>\n                                        </label>\n                                    </td>\n                                    <td v-if=\"isColumnVisible('admission_number')\" v-text=\"student_record.admission.admission_number\"></td>\n                                    <td v-if=\"isColumnVisible('roll_number')\" v-text=\"getRollNumber(student_record)\"></td>\n                                    <td v-text=\"student_record.student.first_name\"></td>\n                                    <td v-if=\"isColumnVisible('middle_name')\" v-text=\"student_record.student.middle_name\"></td>\n                                    <td>{{student_record.student.last_name || ''}}</td>\n                                    <td v-if=\"isColumnVisible('gender')\">{{trans('list.'+student_record.student.gender)}}</td>\n                                    <td v-if=\"isColumnVisible('first_guardian_name')\" v-text=\"student_record.student.parent ? student_record.student.parent.first_guardian_name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('second_guardian_name')\" v-text=\"student_record.student.parent ? student_record.student.parent.second_guardian_name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('date_of_birth')\">{{student_record.student.date_of_birth | moment}}</td>\n                                    <td v-if=\"isColumnVisible('date_of_admission')\">{{student_record.admission.date_of_admission | moment}}</td>\n                                    <td v-if=\"isColumnVisible('date_of_promotion')\">{{student_record.date_of_entry | moment}}</td>\n                                    <td v-if=\"isColumnVisible('contact_number')\" v-text=\"student_record.student.contact_number\"></td>\n                                    <td v-text=\"getCourse(student_record)\"></td>\n                                    <td v-text=\"getBatch(student_record)\"></td>\n                                    <td v-if=\"isColumnVisible('nationality')\" v-text=\"student_record.student.nationality\"></td>\n                                    <td v-if=\"isColumnVisible('blood_group')\" v-text=\"student_record.student.blood_group ? student_record.student.blood_group.name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('religion')\" v-text=\"student_record.student.religion ? student_record.student.religion.name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('caste')\" v-text=\"student_record.student.caste ? student_record.student.caste.name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('category')\" v-text=\"student_record.student.category ? student_record.student.category.name : ''\"></td>\n                                    <td v-if=\"isColumnVisible('unique_identification_number')\" v-text=\"student_record.student.unique_identification_number\"></td>\n                                    <td v-if=\"isColumnVisible('first_guardian_contact_number_1')\" v-text=\"student_record.student.parent.first_guardian_contact_number_1\"></td>\n                                    <td v-if=\"isColumnVisible('second_guardian_contact_number_1')\" v-text=\"student_record.student.parent.second_guardian_contact_number_1\"></td>\n                                    <td v-if=\"isColumnVisible('emergency_contact_name')\" v-text=\"student_record.student.emergency_contact_name\"></td>\n                                    <td v-if=\"isColumnVisible('emergency_contact_number')\" v-text=\"student_record.student.emergency_contact_number\"></td>\n                                    <td v-if=\"isColumnVisible('present_address')\">\n                                        {{student_record.student.present_address_line_1}}\n                                        <span v-if=\"student_record.student.present_address_line_2\">, {{student_record.student.present_address_line_2}}</span>\n                                        <span v-if=\"student_record.student.present_city\"><br /> {{student_record.student.present_city}}</span>\n                                        <span v-if=\"student_record.student.present_state\">, {{student_record.student.present_state}}</span>\n                                        <span v-if=\"student_record.student.present_zipcode\">, {{student_record.student.present_zipcode}}</span>\n                                        <span v-if=\"student_record.student.present_country\"><br /> {{student_record.student.present_country}}</span>\n                                    </td>\n                                    <td v-if=\"isColumnVisible('permanent_address')\">\n                                        <template v-if=\"student_record.student.same_as_present_address\">{{trans('student.same_as_present_address')}}</template>\n                                        <template v-else>\n                                            {{student_record.student.permanent_address_line_1}}\n                                            <span v-if=\"student_record.student.permanent_address_line_2\">, {{student_record.student.permanent_address_line_2}}</span>\n                                            <span v-if=\"student_record.student.permanent_city\"><br /> {{student_record.student.permanent_city}}</span>\n                                            <span v-if=\"student_record.student.permanent_state\">, {{student_record.student.permanent_state}}</span>\n                                            <span v-if=\"student_record.student.permanent_zipcode\">, {{student_record.student.permanent_zipcode}}</span>\n                                            <span v-if=\"student_record.student.permanent_country\"><br /> {{student_record.student.permanent_country}}</span>\n                                        </template>\n                                    </td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\" v-if=\"hasNotAnyRole(['student','parent'])\">\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('student.view_student_detail')\" @click=\"$router.push('/student/'+student_record.student.uuid)\">\n                                                <i class=\"fas fa-arrow-circle-right\"></i> {{trans('general.view')}}\n                                            </button>\n                                            <template v-if=\"hasPermission('list-student-fee')\">\n                                                <button type=\"button\" class=\"btn btn-sm btn-info dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                                    <span class=\"sr-only\">Toggle Dropdown</span>\n                                                </button>\n                                                <div class=\"dropdown-menu\">\n                                                    <button class=\"dropdown-item custom-dropdown-menu\" v-tooltip=\"trans('student.view_student_fee')\" @click=\"$router.push('/student/'+student_record.student.uuid+'/fee/'+student_record.id)\">\n                                                        <i class=\"fas fa-file\"></i> {{trans('finance.view_fee_allocation')}}\n                                                    </button>\n                                                </div>\n                                            </template>\n                                        </div>\n                                        <div v-else>\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('student.view_student_fee')\" @click=\"$router.push('/student/'+student_record.student.uuid+'/fee/'+student_record.id)\">\n                                                <i class=\"fas fa-arrow-circle-right\"></i> {{trans('finance.view_fee_allocation')}}\n                                            </button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!student_records.total\" module=\"student\" title=\"admission_module_title\" description=\"admission_module_description\" icon=\"list\">\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"student_records\" @updateRecords=\"getStudents\"></pagination-record>\n                </div>\n                <div class=\"m-t-10 card-body border-top p-4\" v-if=\"studentGroupForm.ids.length && hasPermission('edit-student')\">\n                    <h4 class=\"card-title\"></h4>\n                    <form @submit.prevent=\"submit\" @keydown=\"studentGroupForm.errors.clear($event.target.name)\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.student_group')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_group\" name=\"group_id\" id=\"group_id\" :options=\"student_groups\" :placeholder=\"trans('student.select_student_group')\" @select=\"onGroupSelect\" @remove=\"studentGroupForm.student_group_id = ''\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!student_groups.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                    <show-error :form-name=\"studentGroupForm\" prop-name=\"group_id\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-md-6\">\n                                <div class=\"form-group\">\n                                    <div class=\"radio radio-success m-t-20\">\n                                        <input type=\"radio\" value=\"attach\" id=\"type_attach\" v-model=\"studentGroupForm.action\" :checked=\"studentGroupForm.action == 'attach'\" name=\"action\" @click=\"studentGroupForm.errors.clear('action')\">\n                                        <label for=\"type_attach\">{{trans('general.add')}}</label>\n                                    </div>\n                                    <div class=\"radio radio-success\">\n                                        <input type=\"radio\" value=\"detach\" id=\"type_detach\" v-model=\"studentGroupForm.action\" :checked=\"studentGroupForm.action == 'detach'\" name=\"action\" @click=\"studentGroupForm.errors.clear('action')\">\n                                        <label for=\"type_detach\">{{trans('general.remove')}}</label>\n                                    </div>\n                                    <show-error :form-name=\"studentGroupForm\" prop-name=\"action\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" key=\"group-action\" v-confirm=\"{ok: confirmGroupAction()}\">{{trans('general.save')}}</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    export default {\n        components : {},\n        data() {\n            return {\n                student_records: {\n                    total: 0,\n                    data: []\n                },\n                selectAll: false,\n                studentGroupForm: new Form({\n                    ids: [],\n                    student_group_id: '',\n                    action: 'attach'\n                }),\n                student_groups: [],\n                selected_group: null,\n                filter: {\n                    sort_by : 'first_name',\n                    order: 'asc',\n                    batch_id: [],\n                    blood_group_id: [],\n                    religion_id: [],\n                    caste_id: [],\n                    gender: [],\n                    category_id: [],\n                    student_group_id: [],\n                    first_name: '',\n                    last_name: '',\n                    first_guardian_name: '',\n                    second_guardian_name: '',\n                    date_of_admission_start_date: '',\n                    date_of_birth_end_date: '',\n                    date_of_admission_end_date: '',\n                    date_of_birth_start_date: '',\n                    columns: [\n                        'first_guardian_name',\n                        'date_of_admission',\n                        'admission_number',\n                        'contact_number'\n                    ],\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'first_name',\n                        translation: i18n.student.first_name\n                    },\n                    {\n                        value: 'last_name',\n                        translation: i18n.student.last_name\n                    },\n                    {\n                        value: 'first_guardian_name',\n                        translation: i18n.student.first_guardian_name\n                    },\n                    {\n                        value: 'second_guardian_name',\n                        translation: i18n.student.second_guardian_name\n                    },\n                    {\n                        value: 'date_of_birth',\n                        translation: i18n.student.date_of_birth\n                    }\n                ],\n                columns: [\n                    {\n                        text: i18n.student.admission_number,\n                        value: 'admission_number'\n                    },\n                    {\n                        text: i18n.student.roll_number,\n                        value: 'roll_number'\n                    },\n                    {\n                        text: i18n.student.middle_name,\n                        value: 'middle_name'\n                    },\n                    {\n                        text: i18n.student.first_guardian_name,\n                        value: 'first_guardian_name'\n                    },\n                    {\n                        text: i18n.student.second_guardian_name,\n                        value: 'second_guardian_name'\n                    },\n                    {\n                        text: i18n.student.date_of_birth,\n                        value: 'date_of_birth'\n                    },\n                    {\n                        text: i18n.student.date_of_admission,\n                        value: 'date_of_admission'\n                    },\n                    {\n                        text: i18n.student.date_of_promotion,\n                        value: 'date_of_promotion'\n                    },\n                    {\n                        text: i18n.student.contact_number,\n                        value: 'contact_number'\n                    },\n                    {\n                        text: i18n.student.gender,\n                        value: 'gender'\n                    },\n                    {\n                        text: i18n.student.nationality,\n                        value: 'nationality'\n                    },\n                    {\n                        text: i18n.misc.blood_group,\n                        value: 'blood_group'\n                    },\n                    {\n                        text: i18n.misc.religion,\n                        value: 'religion'\n                    },\n                    {\n                        text: i18n.misc.caste,\n                        value: 'caste'\n                    },\n                    {\n                        text: i18n.misc.category,\n                        value: 'category'\n                    },\n                    {\n                        text: i18n.student.unique_identification_number,\n                        value: 'unique_identification_number'\n                    },\n                    {\n                        text: i18n.student.first_guardian_contact_number_1,\n                        value: 'first_guardian_contact_number_1'\n                    },\n                    {\n                        text: i18n.student.second_guardian_contact_number_1,\n                        value: 'second_guardian_contact_number_1'\n                    },\n                    {\n                        text: i18n.student.emergency_contact_name,\n                        value: 'emergency_contact_name'\n                    },\n                    {\n                        text: i18n.student.emergency_contact_number,\n                        value: 'emergency_contact_number'\n                    },\n                    {\n                        text: i18n.student.present_address,\n                        value: 'present_address'\n                    },\n                    {\n                        text: i18n.student.permanent_address,\n                        value: 'permanent_address'\n                    }\n                ],\n                batches: [],\n                selected_batches: null,\n                blood_groups: [],\n                selected_blood_groups: null,\n                castes: [],\n                genders: [],\n                selected_genders: null,\n                selected_castes: null,\n                religions: [],\n                selected_religions: null,\n                categories: [],\n                selected_categories: null,\n                showFilterPanel: false,\n                showColumnPanel: false,\n                selected_student_groups: null,\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-student') && !helper.hasPermission('list-class-teacher-wise-student')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getStudents();\n            helper.showDemoNotification(['student_admission']);\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            hasNotAnyRole(roles){\n                return helper.hasNotAnyRole(roles);\n            },\n            getConfig(config){\n                return helper.getConfig(config);\n            },\n            getStudents(page){\n                let loader = this.$loading.show();\n\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                this.selectAll = false;\n                this.filter.date_of_admission_start_date = helper.toDate(this.filter.date_of_admission_start_date);\n                this.filter.date_of_admission_end_date = helper.toDate(this.filter.date_of_admission_end_date);\n                this.filter.date_of_birth_start_date = helper.toDate(this.filter.date_of_birth_start_date);\n                this.filter.date_of_birth_end_date = helper.toDate(this.filter.date_of_birth_end_date);\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/student?page=' + page + url)\n                    .then(response => {\n                        this.student_records = response.student_records;\n                        this.batches = response.filters.batches;\n                        this.blood_groups = response.filters.blood_groups;\n                        this.religions = response.filters.religions;\n                        this.castes = response.filters.castes;\n                        this.genders = response.filters.genders;\n                        this.categories = response.filters.categories;\n                        this.student_groups = response.filters.student_groups;\n                        let ids = [];\n                        this.student_records.data.forEach(student_record => {\n                            ids.push(student_record.student.id);\n                        })\n                        this.selectAll = ids.every(elem => this.studentGroupForm.ids.indexOf(elem) > -1) ? 1 : 0;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            toggleSelectAll(){\n                if(this.selectAll) {\n                    this.student_records.data.forEach(student_record => {\n                        if (this.studentGroupForm.ids.indexOf(student_record.student.id) < 0)\n                            this.studentGroupForm.ids.push(student_record.student.id);\n                    });\n                } else {\n                    this.student_records.data.forEach(student_record => {\n                        let index = this.studentGroupForm.ids.indexOf(student_record.student.id);\n                        if (index >= 0) {\n                            this.studentGroupForm.ids.splice(index, 1);\n                        }\n                    });\n                }\n            },\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            print(){\n                let loader = this.$loading.show();\n                if (this.filter.columns.length > 6) {\n                    toastr.error(i18n.student.print_max_column);\n                    loader.hide();\n                    return;\n                }\n\n                axios.post('/api/student/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        print.document.write(response);\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                if (this.filter.columns.length > 6) {\n                    toastr.error(i18n.student.print_max_column);\n                    loader.hide();\n                    return;\n                }\n\n                axios.post('/api/student/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            exportExcel(){\n\n                let url = helper.getFilterURL(this.filter);\n                return '/api/student?action=excel' + url + '&token=' + this.authToken;\n            },\n            onBatchSelect(selectedOption){\n                this.filter.batch_id.push(selectedOption.id);\n            },\n            onBatchRemove(removedOption){\n                this.filter.batch_id.splice(this.filter.batch_id.indexOf(removedOption.id), 1);\n            },\n            onBloodGroupSelect(selectedOption){\n                this.filter.blood_group_id.push(selectedOption.id);\n            },\n            onBloodGroupRemove(removedOption){\n                this.filter.blood_group_id.splice(this.filter.blood_group_id.indexOf(removedOption.id), 1);\n            },\n            onReligionSelect(selectedOption){\n                this.filter.religion_id.push(selectedOption.id);\n            },\n            onReligionRemove(removedOption){\n                this.filter.religion_id.splice(this.filter.religion_id.indexOf(removedOption.id), 1);\n            },\n            onCasteSelect(selectedOption){\n                this.filter.caste_id.push(selectedOption.id);\n            },\n            onCasteRemove(removedOption){\n                this.filter.caste_id.splice(this.filter.caste_id.indexOf(removedOption.id), 1);\n            },\n            onGenderSelect(selectedOption){\n                this.filter.gender.push(selectedOption.id);\n            },\n            onGenderRemove(removedOption){\n                this.filter.gender.splice(this.filter.gender.indexOf(removedOption.id), 1);\n            },\n            onCategorySelect(selectedOption){\n                this.filter.category_id.push(selectedOption.id);\n            },\n            onCategoryRemove(removedOption){\n                this.filter.category_id.splice(this.filter.category_id.indexOf(removedOption.id), 1);\n            },\n            isColumnVisible(column){\n                return (this.filter.columns.indexOf(column) > -1) ? true : false;\n            },\n            getRollNumber(student_record){\n                return helper.getRollNumber(student_record);\n            },\n            getCourse(student_record){\n                return student_record.batch.course.name;\n            },\n            getBatch(student_record){\n                return student_record.batch.name;\n            },\n            onStudentGroupSelect(selectedOption){\n                this.filter.student_group_id.push(selectedOption.id);\n            },\n            onStudentGroupRemove(removedOption){\n                this.filter.student_group_id.splice(this.filter.student_group_id.indexOf(removedOption.id), 1);\n            },\n            onGroupSelect(selectedOption){\n                this.studentGroupForm.student_group_id = selectedOption.id;\n            },\n            confirmGroupAction(){\n                return dialog => this.groupAction();\n            },\n            groupAction(){\n                let loader = this.$loading.show();\n                this.studentGroupForm.post('/api/student/action/group')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getStudents();\n                        this.studentGroupForm.action = 'attach';\n                        this.selected_group = null;\n                        this.studentGroupForm.ids = [];\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            }\n        },\n        computed:{\n            authToken(){\n                return helper.getAuthToken();\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getStudents();\n            },\n            'filter.order': function(val){\n                this.getStudents();\n            },\n            'filter.page_length': function(val){\n                this.getStudents();\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"student.student_list\")) +\n                  \"\\n                    \"\n              ),\n              _vm.student_records.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.student_records.total,\n                            from: _vm.student_records.from,\n                            to: _vm.student_records.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.hasNotAnyRole([\"student\", \"parent\"])\n                  ? [\n                      _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"tooltip\",\n                              rawName: \"v-tooltip\",\n                              value: _vm.trans(\"general.card_view\"),\n                              expression: \"trans('general.card_view')\",\n                            },\n                          ],\n                          staticClass: \"btn btn-info btn-sm\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.$router.push(\"/student/card-view\")\n                            },\n                          },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-th\" }),\n                          _vm._v(\" \"),\n                          _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.card_view\"))),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.student_records.total &&\n                      _vm.hasPermission(\"list-registration\")\n                        ? _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.trans(\"general.add_new\"),\n                                  expression: \"trans('general.add_new')\",\n                                },\n                              ],\n                              staticClass: \"btn btn-info btn-sm\",\n                              on: {\n                                click: function ($event) {\n                                  return _vm.$router.push(\n                                    \"/student/registration\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                { staticClass: \"d-none d-sm-inline\" },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.add_new_student\"))\n                                  ),\n                                ]\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      !_vm.showFilterPanel\n                        ? _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info btn-sm\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showFilterPanel = !_vm.showFilterPanel\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                { staticClass: \"d-none d-sm-inline\" },\n                                [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      !_vm.showColumnPanel\n                        ? _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info btn-sm\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showColumnPanel = !_vm.showColumnPanel\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-columns\" }),\n                              _vm._v(\" \" + _vm._s(_vm.trans(\"general.column\"))),\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"sort-by\", {\n                        attrs: {\n                          \"order-by-options\": _vm.orderByOptions,\n                          \"sort-by\": _vm.filter.sort_by,\n                          order: _vm.filter.order,\n                        },\n                        on: {\n                          updateSortBy: (value) => {\n                            _vm.filter.sort_by = value\n                          },\n                          updateOrder: (value) => {\n                            _vm.filter.order = value\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.more_option\"),\n                                expression: \"trans('general.more_option')\",\n                              },\n                            ],\n                            staticClass:\n                              \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                            attrs: {\n                              type: \"button\",\n                              role: \"menu\",\n                              id: \"moreOption\",\n                              \"data-toggle\": \"dropdown\",\n                              \"aria-haspopup\": \"true\",\n                              \"aria-expanded\": \"false\",\n                            },\n                          },\n                          [\n                            _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                            _vm._v(\" \"),\n                            _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            class: [\n                              \"dropdown-menu\",\n                              _vm.getConfig(\"direction\") == \"ltr\"\n                                ? \"dropdown-menu-right\"\n                                : \"\",\n                            ],\n                            attrs: { \"aria-labelledby\": \"moreOption\" },\n                          },\n                          [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item custom-dropdown\",\n                                on: { click: _vm.print },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-print\" }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.trans(\"general.print\"))\n                                ),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item custom-dropdown\",\n                                on: { click: _vm.pdf },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.trans(\"general.generate_pdf\"))\n                                ),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"a\",\n                              {\n                                staticClass: \"dropdown-item custom-dropdown\",\n                                attrs: { href: _vm.exportExcel() },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-file-excel\" }),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.trans(\"general.generate_excel\"))\n                                ),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"dropdown-item custom-dropdown\",\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.$router.go(-1)\n                                  },\n                                },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-undo\" }),\n                                _vm._v(\" \" + _vm._s(_vm.trans(\"general.back\"))),\n                              ]\n                            ),\n                          ]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"help-button\", {\n                        on: {\n                          clicked: function ($event) {\n                            _vm.help_topic = \"admission\"\n                          },\n                        },\n                      }),\n                    ]\n                  : _vm._e(),\n              ],\n              2\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showColumnPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.column\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"row\" },\n                      _vm._l(_vm.columns, function (column) {\n                        return _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                          _c(\n                            \"label\",\n                            { staticClass: \"custom-control custom-checkbox\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.filter.columns,\n                                    expression: \"filter.columns\",\n                                  },\n                                ],\n                                staticClass: \"custom-control-input\",\n                                attrs: { type: \"checkbox\" },\n                                domProps: {\n                                  value: column.value,\n                                  checked: Array.isArray(_vm.filter.columns)\n                                    ? _vm._i(_vm.filter.columns, column.value) >\n                                      -1\n                                    : _vm.filter.columns,\n                                },\n                                on: {\n                                  change: function ($event) {\n                                    var $$a = _vm.filter.columns,\n                                      $$el = $event.target,\n                                      $$c = $$el.checked ? true : false\n                                    if (Array.isArray($$a)) {\n                                      var $$v = column.value,\n                                        $$i = _vm._i($$a, $$v)\n                                      if ($$el.checked) {\n                                        $$i < 0 &&\n                                          _vm.$set(\n                                            _vm.filter,\n                                            \"columns\",\n                                            $$a.concat([$$v])\n                                          )\n                                      } else {\n                                        $$i > -1 &&\n                                          _vm.$set(\n                                            _vm.filter,\n                                            \"columns\",\n                                            $$a\n                                              .slice(0, $$i)\n                                              .concat($$a.slice($$i + 1))\n                                          )\n                                      }\n                                    } else {\n                                      _vm.$set(_vm.filter, \"columns\", $$c)\n                                    }\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                { staticClass: \"custom-control-label\" },\n                                [_vm._v(_vm._s(column.text))]\n                              ),\n                            ]\n                          ),\n                        ])\n                      }),\n                      0\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showColumnPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"general.filter\")) +\n                          \"\\n                    \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.first_name,\n                                expression: \"filter.first_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"first_name\" },\n                            domProps: { value: _vm.filter.first_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"first_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.last_name,\n                                expression: \"filter.last_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"last_name\" },\n                            domProps: { value: _vm.filter.last_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"last_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.first_guardian_name\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.first_guardian_name,\n                                expression: \"filter.first_guardian_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"first_guardian_name\" },\n                            domProps: { value: _vm.filter.first_guardian_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"first_guardian_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.second_guardian_name\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.second_guardian_name,\n                                expression: \"filter.second_guardian_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"second_guardian_name\" },\n                            domProps: {\n                              value: _vm.filter.second_guardian_name,\n                            },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"second_guardian_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"batches\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"batch_id\",\n                                  id: \"batch_id\",\n                                  options: _vm.batches,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_batch\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_batches,\n                                },\n                                on: {\n                                  select: _vm.onBatchSelect,\n                                  remove: _vm.onBatchRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_batches,\n                                  callback: function ($$v) {\n                                    _vm.selected_batches = $$v\n                                  },\n                                  expression: \"selected_batches\",\n                                },\n                              },\n                              [\n                                !_vm.batches.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\": _vm.filter.date_of_birth_start_date,\n                              \"end-date\": _vm.filter.date_of_birth_end_date,\n                              label: _vm.trans(\"student.date_of_birth_between\"),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_birth_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_birth_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_birth_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_birth_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\":\n                                _vm.filter.date_of_admission_start_date,\n                              \"end-date\": _vm.filter.date_of_admission_end_date,\n                              label: _vm.trans(\n                                \"student.date_of_admission_between\"\n                              ),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_admission_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_admission_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_admission_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_admission_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"student.student_group\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"student_group_id\",\n                                  id: \"student_group_id\",\n                                  options: _vm.student_groups,\n                                  placeholder: _vm.trans(\n                                    \"student.select_student_group\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_student_groups,\n                                },\n                                on: {\n                                  select: _vm.onStudentGroupSelect,\n                                  remove: _vm.onStudentGroupRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_student_groups,\n                                  callback: function ($$v) {\n                                    _vm.selected_student_groups = $$v\n                                  },\n                                  expression: \"selected_student_groups\",\n                                },\n                              },\n                              [\n                                !_vm.student_groups.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"gender\",\n                                  id: \"gender\",\n                                  options: _vm.genders,\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_genders,\n                                },\n                                on: {\n                                  select: _vm.onGenderSelect,\n                                  remove: _vm.onGenderRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_genders,\n                                  callback: function ($$v) {\n                                    _vm.selected_genders = $$v\n                                  },\n                                  expression: \"selected_genders\",\n                                },\n                              },\n                              [\n                                !_vm.genders.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"misc.blood_group\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"blood_group_id\",\n                                  id: \"blood_group_id\",\n                                  options: _vm.blood_groups,\n                                  placeholder: _vm.trans(\n                                    \"misc.select_blood_group\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_blood_groups,\n                                },\n                                on: {\n                                  select: _vm.onBloodGroupSelect,\n                                  remove: _vm.onBloodGroupRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_blood_groups,\n                                  callback: function ($$v) {\n                                    _vm.selected_blood_groups = $$v\n                                  },\n                                  expression: \"selected_blood_groups\",\n                                },\n                              },\n                              [\n                                !_vm.blood_groups.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"misc.religion\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"religion_id\",\n                                  id: \"religion_id\",\n                                  options: _vm.religions,\n                                  placeholder: _vm.trans(\n                                    \"misc.select_religion\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_religions,\n                                },\n                                on: {\n                                  select: _vm.onReligionSelect,\n                                  remove: _vm.onReligionRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_religions,\n                                  callback: function ($$v) {\n                                    _vm.selected_religions = $$v\n                                  },\n                                  expression: \"selected_religions\",\n                                },\n                              },\n                              [\n                                !_vm.religions.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"misc.caste\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"caste_id\",\n                                  id: \"caste_id\",\n                                  options: _vm.castes,\n                                  placeholder: _vm.trans(\"misc.select_caste\"),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_castes,\n                                },\n                                on: {\n                                  select: _vm.onCasteSelect,\n                                  remove: _vm.onCasteRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_castes,\n                                  callback: function ($$v) {\n                                    _vm.selected_castes = $$v\n                                  },\n                                  expression: \"selected_castes\",\n                                },\n                              },\n                              [\n                                !_vm.castes.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"misc.category\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"category_id\",\n                                  id: \"category_id\",\n                                  options: _vm.categories,\n                                  placeholder: _vm.trans(\n                                    \"misc.select_category\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_categories,\n                                },\n                                on: {\n                                  select: _vm.onCategorySelect,\n                                  remove: _vm.onCategoryRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_categories,\n                                  callback: function ($$v) {\n                                    _vm.selected_categories = $$v\n                                  },\n                                  expression: \"selected_categories\",\n                                },\n                              },\n                              [\n                                !_vm.categories.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getStudents },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.student_records.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _vm.hasPermission(\"edit-student\")\n                              ? _c(\"th\", { staticClass: \"select-all\" }, [\n                                  _c(\n                                    \"label\",\n                                    {\n                                      staticClass:\n                                        \"custom-control custom-checkbox\",\n                                    },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.selectAll,\n                                            expression: \"selectAll\",\n                                          },\n                                        ],\n                                        staticClass: \"custom-control-input\",\n                                        attrs: { type: \"checkbox\", value: \"1\" },\n                                        domProps: {\n                                          checked: Array.isArray(_vm.selectAll)\n                                            ? _vm._i(_vm.selectAll, \"1\") > -1\n                                            : _vm.selectAll,\n                                        },\n                                        on: {\n                                          change: [\n                                            function ($event) {\n                                              var $$a = _vm.selectAll,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = \"1\",\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.selectAll = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.selectAll = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.selectAll = $$c\n                                              }\n                                            },\n                                            _vm.toggleSelectAll,\n                                          ],\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", {\n                                        staticClass: \"custom-control-label\",\n                                      }),\n                                    ]\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"admission_number\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.admission_number_short\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"roll_number\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.roll_number\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"middle_name\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.middle_name\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"gender\")\n                              ? _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"first_guardian_name\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.first_guardian_name\")\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"second_guardian_name\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.second_guardian_name\")\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"date_of_birth\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.date_of_birth\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"date_of_admission\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.date_of_admission\")\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"date_of_promotion\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.date_of_promotion\")\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"contact_number\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.contact_number\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"nationality\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.nationality\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"blood_group\")\n                              ? _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"misc.blood_group\"))),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"religion\")\n                              ? _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"misc.religion\"))),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"caste\")\n                              ? _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"misc.caste\"))),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"category\")\n                              ? _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"misc.category\"))),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"unique_identification_number\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.unique_identification_number\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\n                              \"first_guardian_contact_number_1\"\n                            )\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.first_guardian_contact_number_1\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\n                              \"second_guardian_contact_number_1\"\n                            )\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.second_guardian_contact_number_1\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"emergency_contact_name\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.emergency_contact_name\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"emergency_contact_number\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.emergency_contact_number\"\n                                      )\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"present_address\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.present_address\"))\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.isColumnVisible(\"permanent_address\")\n                              ? _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.permanent_address\")\n                                    )\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.student_records.data,\n                            function (student_record) {\n                              return _c(\"tr\", [\n                                _vm.hasPermission(\"edit-student\")\n                                  ? _c(\"td\", { staticClass: \"select-all\" }, [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass:\n                                            \"custom-control custom-checkbox\",\n                                        },\n                                        [\n                                          _c(\"input\", {\n                                            directives: [\n                                              {\n                                                name: \"model\",\n                                                rawName: \"v-model\",\n                                                value: _vm.studentGroupForm.ids,\n                                                expression:\n                                                  \"studentGroupForm.ids\",\n                                              },\n                                            ],\n                                            staticClass: \"custom-control-input\",\n                                            attrs: { type: \"checkbox\" },\n                                            domProps: {\n                                              value: student_record.student.id,\n                                              checked: Array.isArray(\n                                                _vm.studentGroupForm.ids\n                                              )\n                                                ? _vm._i(\n                                                    _vm.studentGroupForm.ids,\n                                                    student_record.student.id\n                                                  ) > -1\n                                                : _vm.studentGroupForm.ids,\n                                            },\n                                            on: {\n                                              change: function ($event) {\n                                                var $$a =\n                                                    _vm.studentGroupForm.ids,\n                                                  $$el = $event.target,\n                                                  $$c = $$el.checked\n                                                    ? true\n                                                    : false\n                                                if (Array.isArray($$a)) {\n                                                  var $$v =\n                                                      student_record.student.id,\n                                                    $$i = _vm._i($$a, $$v)\n                                                  if ($$el.checked) {\n                                                    $$i < 0 &&\n                                                      _vm.$set(\n                                                        _vm.studentGroupForm,\n                                                        \"ids\",\n                                                        $$a.concat([$$v])\n                                                      )\n                                                  } else {\n                                                    $$i > -1 &&\n                                                      _vm.$set(\n                                                        _vm.studentGroupForm,\n                                                        \"ids\",\n                                                        $$a\n                                                          .slice(0, $$i)\n                                                          .concat(\n                                                            $$a.slice($$i + 1)\n                                                          )\n                                                      )\n                                                  }\n                                                } else {\n                                                  _vm.$set(\n                                                    _vm.studentGroupForm,\n                                                    \"ids\",\n                                                    $$c\n                                                  )\n                                                }\n                                              },\n                                            },\n                                          }),\n                                          _vm._v(\" \"),\n                                          _c(\"span\", {\n                                            staticClass: \"custom-control-label\",\n                                          }),\n                                        ]\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"admission_number\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.admission\n                                            .admission_number\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"roll_number\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.getRollNumber(student_record)\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      student_record.student.first_name\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"middle_name\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.middle_name\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      student_record.student.last_name || \"\"\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"gender\")\n                                  ? _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\n                                            \"list.\" +\n                                              student_record.student.gender\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"first_guardian_name\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.parent\n                                            ? student_record.student.parent\n                                                .first_guardian_name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"second_guardian_name\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.parent\n                                            ? student_record.student.parent\n                                                .second_guardian_name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"date_of_birth\")\n                                  ? _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            student_record.student.date_of_birth\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"date_of_admission\")\n                                  ? _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            student_record.admission\n                                              .date_of_admission\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"date_of_promotion\")\n                                  ? _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            student_record.date_of_entry\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"contact_number\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.contact_number\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      _vm.getCourse(student_record)\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      _vm.getBatch(student_record)\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"nationality\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.nationality\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"blood_group\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.blood_group\n                                            ? student_record.student.blood_group\n                                                .name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"religion\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.religion\n                                            ? student_record.student.religion\n                                                .name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"caste\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.caste\n                                            ? student_record.student.caste.name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"category\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.category\n                                            ? student_record.student.category\n                                                .name\n                                            : \"\"\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\n                                  \"unique_identification_number\"\n                                )\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student\n                                            .unique_identification_number\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\n                                  \"first_guardian_contact_number_1\"\n                                )\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.parent\n                                            .first_guardian_contact_number_1\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\n                                  \"second_guardian_contact_number_1\"\n                                )\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student.parent\n                                            .second_guardian_contact_number_1\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"emergency_contact_name\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student\n                                            .emergency_contact_name\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"emergency_contact_number\")\n                                  ? _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student_record.student\n                                            .emergency_contact_number\n                                        ),\n                                      },\n                                    })\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"present_address\")\n                                  ? _c(\"td\", [\n                                      _vm._v(\n                                        \"\\n                                    \" +\n                                          _vm._s(\n                                            student_record.student\n                                              .present_address_line_1\n                                          ) +\n                                          \"\\n                                    \"\n                                      ),\n                                      student_record.student\n                                        .present_address_line_2\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \", \" +\n                                                _vm._s(\n                                                  student_record.student\n                                                    .present_address_line_2\n                                                )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      student_record.student.present_city\n                                        ? _c(\"span\", [\n                                            _c(\"br\"),\n                                            _vm._v(\n                                              \" \" +\n                                                _vm._s(\n                                                  student_record.student\n                                                    .present_city\n                                                )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      student_record.student.present_state\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \", \" +\n                                                _vm._s(\n                                                  student_record.student\n                                                    .present_state\n                                                )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      student_record.student.present_zipcode\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \", \" +\n                                                _vm._s(\n                                                  student_record.student\n                                                    .present_zipcode\n                                                )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      student_record.student.present_country\n                                        ? _c(\"span\", [\n                                            _c(\"br\"),\n                                            _vm._v(\n                                              \" \" +\n                                                _vm._s(\n                                                  student_record.student\n                                                    .present_country\n                                                )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.isColumnVisible(\"permanent_address\")\n                                  ? _c(\n                                      \"td\",\n                                      [\n                                        student_record.student\n                                          .same_as_present_address\n                                          ? [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"student.same_as_present_address\"\n                                                  )\n                                                )\n                                              ),\n                                            ]\n                                          : [\n                                              _vm._v(\n                                                \"\\n                                        \" +\n                                                  _vm._s(\n                                                    student_record.student\n                                                      .permanent_address_line_1\n                                                  ) +\n                                                  \"\\n                                        \"\n                                              ),\n                                              student_record.student\n                                                .permanent_address_line_2\n                                                ? _c(\"span\", [\n                                                    _vm._v(\n                                                      \", \" +\n                                                        _vm._s(\n                                                          student_record.student\n                                                            .permanent_address_line_2\n                                                        )\n                                                    ),\n                                                  ])\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              student_record.student\n                                                .permanent_city\n                                                ? _c(\"span\", [\n                                                    _c(\"br\"),\n                                                    _vm._v(\n                                                      \" \" +\n                                                        _vm._s(\n                                                          student_record.student\n                                                            .permanent_city\n                                                        )\n                                                    ),\n                                                  ])\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              student_record.student\n                                                .permanent_state\n                                                ? _c(\"span\", [\n                                                    _vm._v(\n                                                      \", \" +\n                                                        _vm._s(\n                                                          student_record.student\n                                                            .permanent_state\n                                                        )\n                                                    ),\n                                                  ])\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              student_record.student\n                                                .permanent_zipcode\n                                                ? _c(\"span\", [\n                                                    _vm._v(\n                                                      \", \" +\n                                                        _vm._s(\n                                                          student_record.student\n                                                            .permanent_zipcode\n                                                        )\n                                                    ),\n                                                  ])\n                                                : _vm._e(),\n                                              _vm._v(\" \"),\n                                              student_record.student\n                                                .permanent_country\n                                                ? _c(\"span\", [\n                                                    _c(\"br\"),\n                                                    _vm._v(\n                                                      \" \" +\n                                                        _vm._s(\n                                                          student_record.student\n                                                            .permanent_country\n                                                        )\n                                                    ),\n                                                  ])\n                                                : _vm._e(),\n                                            ],\n                                      ],\n                                      2\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _vm.hasNotAnyRole([\"student\", \"parent\"])\n                                    ? _c(\n                                        \"div\",\n                                        { staticClass: \"btn-group\" },\n                                        [\n                                          _c(\n                                            \"button\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"tooltip\",\n                                                  rawName: \"v-tooltip\",\n                                                  value: _vm.trans(\n                                                    \"student.view_student_detail\"\n                                                  ),\n                                                  expression:\n                                                    \"trans('student.view_student_detail')\",\n                                                },\n                                              ],\n                                              staticClass:\n                                                \"btn btn-info btn-sm\",\n                                              on: {\n                                                click: function ($event) {\n                                                  return _vm.$router.push(\n                                                    \"/student/\" +\n                                                      student_record.student\n                                                        .uuid\n                                                  )\n                                                },\n                                              },\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-arrow-circle-right\",\n                                              }),\n                                              _vm._v(\n                                                \" \" +\n                                                  _vm._s(\n                                                    _vm.trans(\"general.view\")\n                                                  ) +\n                                                  \"\\n                                        \"\n                                              ),\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\"list-student-fee\")\n                                            ? [\n                                                _vm._m(0, true),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"div\",\n                                                  {\n                                                    staticClass:\n                                                      \"dropdown-menu\",\n                                                  },\n                                                  [\n                                                    _c(\n                                                      \"button\",\n                                                      {\n                                                        directives: [\n                                                          {\n                                                            name: \"tooltip\",\n                                                            rawName:\n                                                              \"v-tooltip\",\n                                                            value: _vm.trans(\n                                                              \"student.view_student_fee\"\n                                                            ),\n                                                            expression:\n                                                              \"trans('student.view_student_fee')\",\n                                                          },\n                                                        ],\n                                                        staticClass:\n                                                          \"dropdown-item custom-dropdown-menu\",\n                                                        on: {\n                                                          click: function (\n                                                            $event\n                                                          ) {\n                                                            return _vm.$router.push(\n                                                              \"/student/\" +\n                                                                student_record\n                                                                  .student\n                                                                  .uuid +\n                                                                \"/fee/\" +\n                                                                student_record.id\n                                                            )\n                                                          },\n                                                        },\n                                                      },\n                                                      [\n                                                        _c(\"i\", {\n                                                          staticClass:\n                                                            \"fas fa-file\",\n                                                        }),\n                                                        _vm._v(\n                                                          \" \" +\n                                                            _vm._s(\n                                                              _vm.trans(\n                                                                \"finance.view_fee_allocation\"\n                                                              )\n                                                            ) +\n                                                            \"\\n                                                \"\n                                                        ),\n                                                      ]\n                                                    ),\n                                                  ]\n                                                ),\n                                              ]\n                                            : _vm._e(),\n                                        ],\n                                        2\n                                      )\n                                    : _c(\"div\", [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"student.view_student_fee\"\n                                                ),\n                                                expression:\n                                                  \"trans('student.view_student_fee')\",\n                                              },\n                                            ],\n                                            staticClass: \"btn btn-info btn-sm\",\n                                            on: {\n                                              click: function ($event) {\n                                                return _vm.$router.push(\n                                                  \"/student/\" +\n                                                    student_record.student\n                                                      .uuid +\n                                                    \"/fee/\" +\n                                                    student_record.id\n                                                )\n                                              },\n                                            },\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass:\n                                                \"fas fa-arrow-circle-right\",\n                                            }),\n                                            _vm._v(\n                                              \" \" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"finance.view_fee_allocation\"\n                                                  )\n                                                ) +\n                                                \"\\n                                        \"\n                                            ),\n                                          ]\n                                        ),\n                                      ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.student_records.total\n                  ? _c(\"module-info\", {\n                      attrs: {\n                        module: \"student\",\n                        title: \"admission_module_title\",\n                        description: \"admission_module_description\",\n                        icon: \"list\",\n                      },\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.student_records,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getStudents,\n                  },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _vm.studentGroupForm.ids.length && _vm.hasPermission(\"edit-student\")\n              ? _c(\"div\", { staticClass: \"m-t-10 card-body border-top p-4\" }, [\n                  _c(\"h4\", { staticClass: \"card-title\" }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"form\",\n                    {\n                      on: {\n                        submit: function ($event) {\n                          $event.preventDefault()\n                          return _vm.submit.apply(null, arguments)\n                        },\n                        keydown: function ($event) {\n                          return _vm.studentGroupForm.errors.clear(\n                            $event.target.name\n                          )\n                        },\n                      },\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.student_group\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"v-select\",\n                                {\n                                  attrs: {\n                                    label: \"name\",\n                                    \"track-by\": \"id\",\n                                    name: \"group_id\",\n                                    id: \"group_id\",\n                                    options: _vm.student_groups,\n                                    placeholder: _vm.trans(\n                                      \"student.select_student_group\"\n                                    ),\n                                  },\n                                  on: {\n                                    select: _vm.onGroupSelect,\n                                    remove: function ($event) {\n                                      _vm.studentGroupForm.student_group_id = \"\"\n                                    },\n                                  },\n                                  model: {\n                                    value: _vm.selected_group,\n                                    callback: function ($$v) {\n                                      _vm.selected_group = $$v\n                                    },\n                                    expression: \"selected_group\",\n                                  },\n                                },\n                                [\n                                  !_vm.student_groups.length\n                                    ? _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"multiselect__option\",\n                                          attrs: { slot: \"afterList\" },\n                                          slot: \"afterList\",\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"general.no_option_found\"\n                                                )\n                                              ) +\n                                              \"\\n                                    \"\n                                          ),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.studentGroupForm,\n                                  \"prop-name\": \"group_id\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-md-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\n                                \"div\",\n                                { staticClass: \"radio radio-success m-t-20\" },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.studentGroupForm.action,\n                                        expression: \"studentGroupForm.action\",\n                                      },\n                                    ],\n                                    attrs: {\n                                      type: \"radio\",\n                                      value: \"attach\",\n                                      id: \"type_attach\",\n                                      name: \"action\",\n                                    },\n                                    domProps: {\n                                      checked:\n                                        _vm.studentGroupForm.action == \"attach\",\n                                      checked: _vm._q(\n                                        _vm.studentGroupForm.action,\n                                        \"attach\"\n                                      ),\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.studentGroupForm.errors.clear(\n                                          \"action\"\n                                        )\n                                      },\n                                      change: function ($event) {\n                                        return _vm.$set(\n                                          _vm.studentGroupForm,\n                                          \"action\",\n                                          \"attach\"\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"label\",\n                                    { attrs: { for: \"type_attach\" } },\n                                    [_vm._v(_vm._s(_vm.trans(\"general.add\")))]\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"radio radio-success\" },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.studentGroupForm.action,\n                                        expression: \"studentGroupForm.action\",\n                                      },\n                                    ],\n                                    attrs: {\n                                      type: \"radio\",\n                                      value: \"detach\",\n                                      id: \"type_detach\",\n                                      name: \"action\",\n                                    },\n                                    domProps: {\n                                      checked:\n                                        _vm.studentGroupForm.action == \"detach\",\n                                      checked: _vm._q(\n                                        _vm.studentGroupForm.action,\n                                        \"detach\"\n                                      ),\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.studentGroupForm.errors.clear(\n                                          \"action\"\n                                        )\n                                      },\n                                      change: function ($event) {\n                                        return _vm.$set(\n                                          _vm.studentGroupForm,\n                                          \"action\",\n                                          \"detach\"\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"label\",\n                                    { attrs: { for: \"type_detach\" } },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"general.remove\"))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.studentGroupForm,\n                                  \"prop-name\": \"action\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"confirm\",\n                              rawName: \"v-confirm\",\n                              value: { ok: _vm.confirmGroupAction() },\n                              expression: \"{ok: confirmGroupAction()}\",\n                            },\n                          ],\n                          key: \"group-action\",\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                      ),\n                    ]\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\n      \"button\",\n      {\n        staticClass:\n          \"btn btn-sm btn-info dropdown-toggle dropdown-toggle-split\",\n        attrs: {\n          type: \"button\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\",\n        },\n      },\n      [_c(\"span\", { staticClass: \"sr-only\" }, [_vm._v(\"Toggle Dropdown\")])]\n    )\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=17d061c9&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('17d061c9')) {\n      api.createRecord('17d061c9', component.options)\n    } else {\n      api.reload('17d061c9', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=17d061c9&\", function () {\n      api.rerender('17d061c9', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/admission/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=17d061c9&\""],"mappings":";;;;;;;;;;AAysBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAIA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AAEA;AAAA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAMA;AAIA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAuBA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAOA;AAAA;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAsBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAkOA;AAAA;AAWA;AAEA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAUA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAQA;AACA;AAIA;AACA;AAKA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AA0BA;AACA;AAMA;AACA;AAKA;AACA;AAMA;AACA;AA0CA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAKA;AACA;AAMA;AACA;AAKA;AACA;AAMA;AACA;AAKA;AACA;AAKA;AACA;AAKA;AACA;AAMA;AACA;AAOA;AACA;AAIA;AACA;AAOA;AACA;AAIA;AACA;AAOA;AACA;AAIA;AACA;AAKA;AACA;AAIA;AACA;AAKA;AACA;AAIA;AACA;AA8KA;AAAA;AAIA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAGA;AAEA;AAkBA;AAEA;AAKA;AAEA;AACA;AAEA;AAGA;AAEA;AAEA;AAEA;AACA;AAGA;AAQA;AACA;AACA;AAGA;AAEA;AAuBA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAGA;AAEA;AAeA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAIA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAUA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAIA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;ACp4EA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
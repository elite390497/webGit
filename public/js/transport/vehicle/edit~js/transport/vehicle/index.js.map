{"version":3,"file":"js/transport/vehicle/edit~js/transport/vehicle/index.js?id=953e1e9bdf5340eb8631","sources":["webpack:///resources/js/views/transport/vehicle/form.vue","webpack:///./resources/js/views/transport/vehicle/form.vue","webpack:///./resources/js/views/transport/vehicle/form.vue?5435","webpack:///./resources/js/views/transport/vehicle/form.vue?0626","webpack:///./resources/js/views/transport/vehicle/form.vue?7a4d"],"sourcesContent":["<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"vehicleForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-6\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_name')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.name\" name=\"name\" :placeholder=\"trans('transport.vehicle_name')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"name\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_registration_number')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.registration_number\" name=\"registration_number\" :placeholder=\"trans('transport.vehicle_registration_number')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"registration_number\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_max_seating_capacity')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.max_seating_capacity\" name=\"max_seating_capacity\" :placeholder=\"trans('transport.vehicle_max_seating_capacity')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"max_seating_capacity\"></show-error>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_max_allowed')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.max_allowed\" name=\"max_allowed\" :placeholder=\"trans('transport.vehicle_max_allowed')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"max_allowed\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_make')}}</label>\n                            <vue-monthly-picker v-model=\"vehicleForm.make\" name=\"make\" :placeHolder=\"trans('transport.vehicle_make')\" dateFormat=\"YYYY-MM \"></vue-monthly-picker>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_model')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.model\" name=\"model\" :placeholder=\"trans('transport.vehicle_model')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"model\"></show-error>\n                        </div>  \n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <div>{{trans('transport.vehicle_is_active')}}</div>\n                            <switches class=\"m-t-10\" v-model=\"vehicleForm.is_active\" theme=\"bootstrap\" color=\"success\"></switches>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-md-6\">\n                        <div class=\"form-group\">\n                            <div class=\"radio radio-success\">\n                                <input type=\"radio\" value=\"1\" id=\"owned\" v-model=\"vehicleForm.is_owned\" :checked=\"vehicleForm.is_owned\" name=\"is_owned\" @click=\"vehicleForm.errors.clear('is_owned')\">\n                                <label for=\"owned\">{{trans('transport.vehicle_owned')}}</label>\n                            </div>\n                            <div class=\"radio radio-success\">\n                                <input type=\"radio\" value=\"0\" id=\"contract\" v-model=\"vehicleForm.is_owned\" :checked=\"!vehicleForm.is_owned\" name=\"is_owned\" @click=\"vehicleForm.errors.clear('is_owned')\">\n                                <label for=\"contract\">{{trans('transport.vehicle_contract')}}</label>\n                            </div>\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"is_owned\"></show-error>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-6\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_owner_name')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.owner_name\" name=\"owner_name\" :placeholder=\"trans('transport.vehicle_owner_name')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"owner_name\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_owner_company_name')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.owner_company_name\" name=\"owner_company_name\" :placeholder=\"trans('transport.vehicle_owner_company_name')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"owner_company_name\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_owner_phone')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.owner_phone\" name=\"owner_phone\" :placeholder=\"trans('transport.vehicle_owner_phone')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"owner_phone\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_owner_email')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.owner_email\" name=\"owner_email\" :placeholder=\"trans('transport.vehicle_owner_email')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"owner_email\"></show-error>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.vehicle_fuel_type')}}</label>\n                            <v-select label=\"name\" v-model=\"selected_vehicle_fuel_type\" name=\"vehicle_fuel_type_id\" id=\"vehicle_fuel_type_id\" :options=\"vehicle_fuel_types\" :placeholder=\"trans('general.select_one')\" @select=\"onFuelTypeSelect\" @close=\"vehicleForm.errors.clear('vehicle_fuel_type_id')\" @remove=\"vehicleForm.vehicle_fuel_type_id = ''\">\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!vehicle_fuel_types.length\">\n                                    {{trans('general.no_option_found')}}\n                                </div>\n                            </v-select>\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"vehicle_fuel_type_id\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('transport.max_fuel_capacity')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.max_fuel_capacity\" name=\"max_fuel_capacity\" :placeholder=\"trans('transport.max_fuel_capacity')\">\n                            <show-error :form-name=\"vehicleForm\" prop-name=\"max_fuel_capacity\"></show-error>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <div>{{trans('transport.vehicle_advance_info')}}</div>\n                    <switches class=\"m-t-10\" v-model=\"vehicleForm.advance_info\" theme=\"bootstrap\" color=\"success\"></switches>\n                </div>\n            </div>\n            <template v-if=\"vehicleForm.advance_info\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_chasis_number')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.chasis_number\" name=\"chasis_number\" :placeholder=\"trans('transport.vehicle_chasis_number')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"chasis_number\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_engine_number')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.engine_number\" name=\"engine_number\" :placeholder=\"trans('transport.vehicle_engine_number')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"engine_number\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_cubic_capacity')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.cubic_capacity\" name=\"cubic_capacity\" :placeholder=\"trans('transport.vehicle_cubic_capacity')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"cubic_capacity\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_class')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.class\" name=\"class\" :placeholder=\"trans('transport.vehicle_class')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"class\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_registration_place')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.registration_place\" name=\"registration_place\" :placeholder=\"trans('transport.vehicle_registration_place')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"registration_place\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_registration_date')}}</label>\n                        <datepicker v-model=\"vehicleForm.registration_date\" :bootstrapStyling=\"true\" @selected=\"vehicleForm.errors.clear('registration_date')\" :placeholder=\"trans('transport.vehicle_registration_date')\"></datepicker>\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"registration_date\"></show-error>\n                    </div>\n                </div>\n            </template>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <div>{{trans('transport.vehicle_disposal_info')}}</div>\n                    <switches class=\"m-t-10\" v-model=\"vehicleForm.disposal_info\" theme=\"bootstrap\" color=\"success\"></switches>\n                </div>\n            </div>\n            <template v-if=\"vehicleForm.disposal_info\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_sale_date')}}</label>\n                        <datepicker v-model=\"vehicleForm.sale_date\" :bootstrapStyling=\"true\" @selected=\"vehicleForm.errors.clear('sale_date')\" :placeholder=\"trans('transport.vehicle_sale_date')\"></datepicker>\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"sale_date\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_selling_price')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.selling_price\" name=\"selling_price\" :placeholder=\"trans('transport.vehicle_selling_price')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"selling_price\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_buyer_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.buyer_name\" name=\"buyer_name\" :placeholder=\"trans('transport.vehicle_buyer_name')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"buyer_name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_buyer_contact_number')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.buyer_contact_number\" name=\"buyer_contact_number\" :placeholder=\"trans('transport.vehicle_buyer_contact_number')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"buyer_contact_number\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.vehicle_buyer_address')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleForm.buyer_address\" name=\"buyer_address\" :placeholder=\"trans('transport.vehicle_buyer_address')\">\n                        <show-error :form-name=\"vehicleForm\" prop-name=\"buyer_address\"></show-error>\n                    </div>\n                </div>\n            </template>\n        </div>\n\n        <div class=\"card-footer text-right\">\n            <router-link to=\"/transport/vehicle\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                <span v-if=\"id\">{{trans('general.update')}}</span>\n                <span v-else>{{trans('general.save')}}</span>\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        components: {},\n        data() {\n            return {\n                vehicleForm: new Form({\n                    name : '',\n                    registration_number : '',\n                    make: '',\n                    model: '',\n                    max_seating_capacity: '',\n                    max_allowed: '',\n                    is_owned: '',\n                    owner_name: '',\n                    owner_company_name: '',\n                    owner_phone: '',\n                    owner_email: '',\n                    vehicle_fuel_type_id: '',\n                    max_fuel_capacity: '',\n                    is_active: false,\n                    advance_info: false,\n                    disposal_info: false,\n                    chasis_number: '',\n                    engine_number: '',\n                    cubic_capacity: '',\n                    class: '',\n                    registration_date: '',\n                    registration_place: '',\n                    sale_date: '',\n                    selling_price: '',\n                    buyer_name: '',\n                    buyer_contact_number: '',\n                    buyer_address: ''\n                }),\n                vehicle_fuel_types: [],\n                selected_vehicle_fuel_type: null\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(this.id)\n                this.getVehicle();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/vehicle/pre-requisite')\n                    .then(response => {\n                        this.vehicle_fuel_types = response.vehicle_fuel_types;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            proceed(){\n                if(this.id)\n                    this.updateVehicle();\n                else\n                    this.storeVehicle();\n            },\n            storeVehicle(){\n                let loader = this.$loading.show();\n                this.vehicleForm.make = moment(this.vehicleForm.make).format('YYYY-MM');\n                this.vehicleForm.post('/api/vehicle')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getVehicle(){\n                let loader = this.$loading.show();\n                axios.get('/api/vehicle/'+this.id)\n                    .then(response => {\n                        this.vehicleForm.name = response.name;\n                        this.vehicleForm.registration_number = response.registration_number;\n                        this.vehicleForm.make = response.make;\n                        this.vehicleForm.model = response.model;\n                        this.vehicleForm.is_owned = response.is_owned;\n                        this.vehicleForm.max_seating_capacity = response.max_seating_capacity;\n                        this.vehicleForm.max_allowed = response.max_allowed;\n                        this.vehicleForm.owner_name = response.owner_name;\n                        this.vehicleForm.owner_company_name = response.owner_company_name;\n                        this.vehicleForm.owner_phone = response.owner_phone;\n                        this.vehicleForm.owner_email = response.owner_email;\n                        this.vehicleForm.vehicle_fuel_type_id = response.vehicle_fuel_type_id;\n                        this.selected_vehicle_fuel_type = response.vehicle_fuel_type_id ? {id: response.vehicle_fuel_type_id, name: response.vehicle_fuel_type.name} : null;\n                        this.vehicleForm.max_fuel_capacity = response.max_fuel_capacity;\n                        this.vehicleForm.is_active = response.is_active;\n\n                        let advance_info = response.options && response.options.hasOwnProperty(\"advance\") ? response.options.advance : {\n                            chasis_number: '',\n                            engine_number: '',\n                            cubic_capacity: '',\n                            class: '',\n                            registration_date: '',\n                            registration_place: ''\n                        };\n                        let disposal_info = response.options && response.options.hasOwnProperty(\"disposal\") ? response.options.disposal : {\n                            sale_date: '',\n                            selling_price: '',\n                            buyer_name: '',\n                            buyer_contact_number: '',\n                            buyer_address: ''\n                        };\n                        this.vehicleForm.chasis_number = advance_info.chasis_number; \n                        this.vehicleForm.engine_number = advance_info.engine_number; \n                        this.vehicleForm.cubic_capacity = advance_info.cubic_capacity; \n                        this.vehicleForm.class = advance_info.class; \n                        this.vehicleForm.registration_date = advance_info.registration_date; \n                        this.vehicleForm.registration_place = advance_info.registration_place; \n                        this.vehicleForm.sale_date = disposal_info.sale_date; \n                        this.vehicleForm.selling_price = disposal_info.selling_price; \n                        this.vehicleForm.buyer_name = disposal_info.buyer_name; \n                        this.vehicleForm.buyer_contact_number = disposal_info.buyer_contact_number; \n                        this.vehicleForm.buyer_address = disposal_info.buyer_address; \n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        this.$router.push('/transport/vehicle');\n                    });\n            },\n            updateVehicle(){\n                let loader = this.$loading.show();\n                this.vehicleForm.make = moment(this.vehicleForm.make).format('YYYY-MM');\n                this.vehicleForm.patch('/api/vehicle/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/transport/vehicle');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onFuelTypeSelect(selectedOption){\n                this.vehicleForm.vehicle_fuel_type_id = selectedOption.id;\n            },\n            onVehicleSelect(selectedOption){\n                this.vehicleForm.vehicle_id = selectedOption.id;\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.vehicleForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_name\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.name,\n                        expression: \"vehicleForm.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: _vm.trans(\"transport.vehicle_name\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(_vm.vehicleForm, \"name\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"transport.vehicle_registration_number\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.registration_number,\n                        expression: \"vehicleForm.registration_number\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"registration_number\",\n                      placeholder: _vm.trans(\n                        \"transport.vehicle_registration_number\"\n                      ),\n                    },\n                    domProps: { value: _vm.vehicleForm.registration_number },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"registration_number\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"registration_number\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.trans(\"transport.vehicle_max_seating_capacity\")\n                      )\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.max_seating_capacity,\n                        expression: \"vehicleForm.max_seating_capacity\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"max_seating_capacity\",\n                      placeholder: _vm.trans(\n                        \"transport.vehicle_max_seating_capacity\"\n                      ),\n                    },\n                    domProps: { value: _vm.vehicleForm.max_seating_capacity },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"max_seating_capacity\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"max_seating_capacity\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_max_allowed\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.max_allowed,\n                        expression: \"vehicleForm.max_allowed\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"max_allowed\",\n                      placeholder: _vm.trans(\"transport.vehicle_max_allowed\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.max_allowed },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"max_allowed\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"max_allowed\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_make\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"vue-monthly-picker\", {\n                    attrs: {\n                      name: \"make\",\n                      placeHolder: _vm.trans(\"transport.vehicle_make\"),\n                      dateFormat: \"YYYY-MM \",\n                    },\n                    model: {\n                      value: _vm.vehicleForm.make,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.vehicleForm, \"make\", $$v)\n                      },\n                      expression: \"vehicleForm.make\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_model\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.model,\n                        expression: \"vehicleForm.model\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"model\",\n                      placeholder: _vm.trans(\"transport.vehicle_model\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.model },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(_vm.vehicleForm, \"model\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"model\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_is_active\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-10\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: _vm.vehicleForm.is_active,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.vehicleForm, \"is_active\", $$v)\n                      },\n                      expression: \"vehicleForm.is_active\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-md-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.vehicleForm.is_owned,\n                          expression: \"vehicleForm.is_owned\",\n                        },\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        value: \"1\",\n                        id: \"owned\",\n                        name: \"is_owned\",\n                      },\n                      domProps: {\n                        checked: _vm.vehicleForm.is_owned,\n                        checked: _vm._q(_vm.vehicleForm.is_owned, \"1\"),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.vehicleForm.errors.clear(\"is_owned\")\n                        },\n                        change: function ($event) {\n                          return _vm.$set(_vm.vehicleForm, \"is_owned\", \"1\")\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { attrs: { for: \"owned\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"transport.vehicle_owned\"))),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.vehicleForm.is_owned,\n                          expression: \"vehicleForm.is_owned\",\n                        },\n                      ],\n                      attrs: {\n                        type: \"radio\",\n                        value: \"0\",\n                        id: \"contract\",\n                        name: \"is_owned\",\n                      },\n                      domProps: {\n                        checked: !_vm.vehicleForm.is_owned,\n                        checked: _vm._q(_vm.vehicleForm.is_owned, \"0\"),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.vehicleForm.errors.clear(\"is_owned\")\n                        },\n                        change: function ($event) {\n                          return _vm.$set(_vm.vehicleForm, \"is_owned\", \"0\")\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { attrs: { for: \"contract\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"transport.vehicle_contract\"))),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"is_owned\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_owner_name\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.owner_name,\n                        expression: \"vehicleForm.owner_name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"owner_name\",\n                      placeholder: _vm.trans(\"transport.vehicle_owner_name\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.owner_name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"owner_name\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"owner_name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"transport.vehicle_owner_company_name\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.owner_company_name,\n                        expression: \"vehicleForm.owner_company_name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"owner_company_name\",\n                      placeholder: _vm.trans(\n                        \"transport.vehicle_owner_company_name\"\n                      ),\n                    },\n                    domProps: { value: _vm.vehicleForm.owner_company_name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"owner_company_name\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"owner_company_name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_owner_phone\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.owner_phone,\n                        expression: \"vehicleForm.owner_phone\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"owner_phone\",\n                      placeholder: _vm.trans(\"transport.vehicle_owner_phone\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.owner_phone },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"owner_phone\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"owner_phone\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_owner_email\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.owner_email,\n                        expression: \"vehicleForm.owner_email\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"owner_email\",\n                      placeholder: _vm.trans(\"transport.vehicle_owner_email\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.owner_email },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"owner_email\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"owner_email\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle_fuel_type\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"vehicle_fuel_type_id\",\n                        id: \"vehicle_fuel_type_id\",\n                        options: _vm.vehicle_fuel_types,\n                        placeholder: _vm.trans(\"general.select_one\"),\n                      },\n                      on: {\n                        select: _vm.onFuelTypeSelect,\n                        close: function ($event) {\n                          return _vm.vehicleForm.errors.clear(\n                            \"vehicle_fuel_type_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.vehicleForm.vehicle_fuel_type_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_vehicle_fuel_type,\n                        callback: function ($$v) {\n                          _vm.selected_vehicle_fuel_type = $$v\n                        },\n                        expression: \"selected_vehicle_fuel_type\",\n                      },\n                    },\n                    [\n                      !_vm.vehicle_fuel_types.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"vehicle_fuel_type_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.max_fuel_capacity\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleForm.max_fuel_capacity,\n                        expression: \"vehicleForm.max_fuel_capacity\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"max_fuel_capacity\",\n                      placeholder: _vm.trans(\"transport.max_fuel_capacity\"),\n                    },\n                    domProps: { value: _vm.vehicleForm.max_fuel_capacity },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleForm,\n                          \"max_fuel_capacity\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleForm,\n                      \"prop-name\": \"max_fuel_capacity\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"row\" },\n        [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"div\", [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_advance_info\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"switches\", {\n                  staticClass: \"m-t-10\",\n                  attrs: { theme: \"bootstrap\", color: \"success\" },\n                  model: {\n                    value: _vm.vehicleForm.advance_info,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.vehicleForm, \"advance_info\", $$v)\n                    },\n                    expression: \"vehicleForm.advance_info\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _vm.vehicleForm.advance_info\n            ? [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_chasis_number\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.chasis_number,\n                            expression: \"vehicleForm.chasis_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"chasis_number\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_chasis_number\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.chasis_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"chasis_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"chasis_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_engine_number\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.engine_number,\n                            expression: \"vehicleForm.engine_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"engine_number\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_engine_number\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.engine_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"engine_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"engine_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_cubic_capacity\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.cubic_capacity,\n                            expression: \"vehicleForm.cubic_capacity\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"cubic_capacity\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_cubic_capacity\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.cubic_capacity },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"cubic_capacity\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"cubic_capacity\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"transport.vehicle_class\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.class,\n                            expression: \"vehicleForm.class\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"class\",\n                          placeholder: _vm.trans(\"transport.vehicle_class\"),\n                        },\n                        domProps: { value: _vm.vehicleForm.class },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"class\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"class\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"transport.vehicle_registration_place\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.registration_place,\n                            expression: \"vehicleForm.registration_place\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"registration_place\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_registration_place\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.registration_place },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"registration_place\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"registration_place\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"transport.vehicle_registration_date\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_registration_date\"\n                          ),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.vehicleForm.errors.clear(\n                              \"registration_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.vehicleForm.registration_date,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.vehicleForm, \"registration_date\", $$v)\n                          },\n                          expression: \"vehicleForm.registration_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"registration_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"row\" },\n        [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"div\", [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_disposal_info\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"switches\", {\n                  staticClass: \"m-t-10\",\n                  attrs: { theme: \"bootstrap\", color: \"success\" },\n                  model: {\n                    value: _vm.vehicleForm.disposal_info,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.vehicleForm, \"disposal_info\", $$v)\n                    },\n                    expression: \"vehicleForm.disposal_info\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _vm.vehicleForm.disposal_info\n            ? [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_sale_date\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"transport.vehicle_sale_date\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.vehicleForm.errors.clear(\"sale_date\")\n                          },\n                        },\n                        model: {\n                          value: _vm.vehicleForm.sale_date,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.vehicleForm, \"sale_date\", $$v)\n                          },\n                          expression: \"vehicleForm.sale_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"sale_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_selling_price\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.selling_price,\n                            expression: \"vehicleForm.selling_price\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"selling_price\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_selling_price\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.selling_price },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"selling_price\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"selling_price\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_buyer_name\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.buyer_name,\n                            expression: \"vehicleForm.buyer_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"buyer_name\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_buyer_name\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.buyer_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"buyer_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"buyer_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"transport.vehicle_buyer_contact_number\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.buyer_contact_number,\n                            expression: \"vehicleForm.buyer_contact_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"buyer_contact_number\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_buyer_contact_number\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.vehicleForm.buyer_contact_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"buyer_contact_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"buyer_contact_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"transport.vehicle_buyer_address\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.vehicleForm.buyer_address,\n                            expression: \"vehicleForm.buyer_address\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"buyer_address\",\n                          placeholder: _vm.trans(\n                            \"transport.vehicle_buyer_address\"\n                          ),\n                        },\n                        domProps: { value: _vm.vehicleForm.buyer_address },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.vehicleForm,\n                              \"buyer_address\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleForm,\n                          \"prop-name\": \"buyer_address\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]\n            : _vm._e(),\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/transport/vehicle\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=f4b47fa8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('f4b47fa8')) {\n      api.createRecord('f4b47fa8', component.options)\n    } else {\n      api.reload('f4b47fa8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=f4b47fa8&\", function () {\n      api.rerender('f4b47fa8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/vehicle/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=f4b47fa8&\""],"mappings":";;;;;;;;;;AAmOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC1XA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAEA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAaA;AAAA;AAEA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAaA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;AC93CA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
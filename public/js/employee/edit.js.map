{"version":3,"file":"js/employee/edit.js?id=9a994275b3063ede5866","sources":["webpack:///resources/js/views/employee/basic/form.vue","webpack:///resources/js/views/employee/contact/form.vue","webpack:///resources/js/views/employee/edit.vue","webpack:///resources/js/views/employee/login/index.vue","webpack:///./resources/js/views/employee/basic/form.vue","webpack:///./resources/js/views/employee/contact/form.vue","webpack:///./resources/js/views/employee/edit.vue","webpack:///./resources/js/views/employee/login/index.vue","webpack:///./resources/js/views/employee/basic/form.vue?19ce","webpack:///./resources/js/views/employee/basic/form.vue?e7f3","webpack:///./resources/js/views/employee/basic/form.vue?f0bc","webpack:///./resources/js/views/employee/contact/form.vue?bce2","webpack:///./resources/js/views/employee/contact/form.vue?5717","webpack:///./resources/js/views/employee/contact/form.vue?08af","webpack:///./resources/js/views/employee/edit.vue?4652","webpack:///./resources/js/views/employee/edit.vue?99a7","webpack:///./resources/js/views/employee/edit.vue?68c1","webpack:///./resources/js/views/employee/login/index.vue?4002","webpack:///./resources/js/views/employee/login/index.vue?e3f3","webpack:///./resources/js/views/employee/login/index.vue?d433"],"sourcesContent":["<template>\n\t<div>\n\t    <form @submit.prevent=\"submit\" @keydown=\"basicForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.first_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.first_name\" name=\"first_name\" :placeholder=\"trans('employee.first_name')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"first_name\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.middle_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.middle_name\" name=\"middle_name\" :placeholder=\"trans('employee.middle_name')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"middle_name\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.last_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.last_name\" name=\"last_name\" :placeholder=\"trans('employee.last_name')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"last_name\"></show-error>\n                    </div>\n    \t\t\t</div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.gender')}}</label>\n                        <div class=\"radio radio-info p-l-0\">\n                            <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\n                                <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\" v-model=\"basicForm.gender\" :checked=\"basicForm.gender == gender.id\" name=\"gender\" @click=\"basicForm.errors.clear('gender')\">\n                                <label class=\"form-check-label\" :for=\"gender.id\"> {{trans('list.'+gender.id)}}</label>\n                            </div>\n                        </div>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"gender\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.marital_status')}}</label>\n                        <select v-model=\"basicForm.marital_status\" class=\"custom-select col-12\" name=\"marital_status\" @change=\"basicForm.errors.clear('marital_status')\" required>\n                          <option value=null disabled selected>{{trans('general.select_one')}}</option>\n                          <option v-for=\"marital_status in marital_statuses\" v-bind:value=\"marital_status.id\">\n                            {{trans('list.'+marital_status.id)}}\n                          </option>\n                        </select>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"marital_status\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.date_of_birth')}}</label>\n\t                    <datepicker v-model=\"basicForm.date_of_birth\" :bootstrapStyling=\"true\" @selected=\"basicForm.errors.clear('date_of_birth')\" :placeholder=\"trans('employee.date_of_birth')\"></datepicker>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"date_of_birth\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.date_of_anniversary')}}</label>\n\t                    <datepicker v-model=\"basicForm.date_of_anniversary\" :bootstrapStyling=\"true\" @selected=\"basicForm.errors.clear('date_of_anniversary')\" :placeholder=\"trans('employee.date_of_anniversary')\"></datepicker>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"date_of_anniversary\"></show-error>\n\t                </div>\n\t            </div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.unique_identification_number')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.unique_identification_number\" name=\"unique_identification_number\" :placeholder=\"trans('employee.unique_identification_number')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"unique_identification_number\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.father_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.father_name\" name=\"father_name\" :placeholder=\"trans('employee.father_name')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"father_name\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.mother_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.mother_name\" name=\"mother_name\" :placeholder=\"trans('employee.mother_name')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"mother_name\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.nationality')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.nationality\" name=\"nationality\" :placeholder=\"trans('employee.nationality')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"nationality\"></show-error>\n                    </div>\n    \t\t\t</div>\n    \t\t\t<div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n            \t\t\t<label for=\"\">{{trans('employee.mother_tongue')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"basicForm.mother_tongue\" name=\"mother_tongue\" :placeholder=\"trans('employee.mother_tongue')\">\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"mother_tongue\"></show-error>\n                    </div>\n    \t\t\t</div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('misc.caste')}}</label>\n\t                    <v-select label=\"name\" v-model=\"selected_caste\" name=\"caste_id\" id=\"caste_id\" :options=\"castes\" :placeholder=\"trans('misc.select_caste')\" @select=\"onCasteSelect\" @close=\"basicForm.errors.clear('caste_id')\" @remove=\"basicForm.caste_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!castes.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"caste_id\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('misc.category')}}</label>\n\t                    <v-select label=\"name\" v-model=\"selected_category\" name=\"category_id\" id=\"category_id\" :options=\"categories\" :placeholder=\"trans('misc.select_category')\" @select=\"onCategorySelect\" @close=\"basicForm.errors.clear('category_id')\" @remove=\"basicForm.category_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!categories.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"category_id\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('misc.religion')}}</label>\n\t                    <v-select label=\"name\" v-model=\"selected_religion\" name=\"religion_id\" id=\"religion_id\" :options=\"religions\" :placeholder=\"trans('misc.select_religion')\" @select=\"onReligionSelect\" @close=\"basicForm.errors.clear('religion_id')\" @remove=\"basicForm.religion_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!religions.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"religion_id\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('misc.blood_group')}}</label>\n\t                    <v-select label=\"name\" v-model=\"selected_blood_group\" name=\"blood_group_id\" id=\"blood_group_id\" :options=\"blood_groups\" :placeholder=\"trans('misc.select_blood_group')\" @select=\"onBloodGroupSelect\" @close=\"basicForm.errors.clear('blood_group_id')\" @remove=\"basicForm.blood_group_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!blood_groups.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n\t                    <show-error :form-name=\"basicForm\" prop-name=\"blood_group_id\"></show-error>\n\t                </div>\n\t            </div>\n    \t\t</div>\n    \t\t<custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\n            <div class=\"card-footer text-right\">\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n            </div>\n\t   \t</form>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tcomponents: {},\n\t\tprops: ['employee'],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tbasicForm: new Form({\n\t\t\t\t\tfirst_name: '',\n\t\t\t\t\tmiddle_name: '',\n\t\t\t\t\tlast_name: '',\n\t\t\t\t\tdate_of_birth: '',\n\t\t\t\t\tdate_of_anniversary: '',\n\t\t\t\t\tfather_name: '',\n\t\t\t\t\tmother_name: '',\n\t\t\t\t\tmarital_status: '',\n\t\t\t\t\tgender: '',\n\t\t\t\t\tmother_tongue: '',\n\t\t\t\t\tunique_identification_number: '',\n\t\t\t\t\tnationality: '',\n\t\t\t\t\tcaste_id: '',\n\t\t\t\t\tcategory_id: '',\n\t\t\t\t\treligion_id: '',\n\t\t\t\t\tblood_group_id: '',\n\t\t\t\t\tcustom_values: [],\n\t\t\t\t\ttype: 'basic'\n\t\t\t\t},false),\n\t\t\t\tcustom_fields: [],\n\t\t\t\tcustom_values: [],\n\t\t\t\tcastes: [],\n                selected_caste: null,\n\t\t\t\treligions: [],\n                selected_religion: null,\n\t\t\t\tblood_groups: [],\n                selected_blood_group: null,\n\t\t\t\tcategories: [],\n                selected_category: null,\n\t\t\t\tgenders: [],\n\t\t\t\tmarital_statuses: [],\n\t\t\t\tcustomFieldFormErrors: {}\n\t\t\t}\n\t\t},\n\t\tmounted(){\n            if(!helper.hasPermission('edit-employee')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n\t        this.get(this.employee);\n\t\t},\n\t\tmethods: {\n\t\t\tgetPreRequisite(){\n\t            let loader = this.$loading.show();\n\t            axios.get('/api/employee/basic/pre-requisite?form_type=employee_basic')\n\t            \t.then(response => {\n\t            \t\tthis.castes = response.castes;\n\t            \t\tthis.religions = response.religions;\n\t            \t\tthis.blood_groups = response.blood_groups;\n\t            \t\tthis.categories = response.categories;\n\t            \t\tthis.genders = response.genders;\n\t            \t\tthis.marital_statuses = response.marital_statuses;\n\t            \t\tthis.custom_fields = response.custom_fields;\n\t            \t\tloader.hide();\n\t            \t})\n\t            \t.catch(error => {\n\t            \t\tloader.hide();\n\t            \t\thelper.showErrorMsg(error);\n\t            \t});\t\n\t\t\t},\n\t\t\tupdateCustomValues(value) {\n\t\t\t\tthis.basicForm.custom_values = value;\n\t\t\t},\n\t\t\tget(employee){\n\t          \tthis.basicForm.first_name = employee.first_name;\n\t          \tthis.basicForm.middle_name = employee.middle_name;\n\t          \tthis.basicForm.last_name = employee.last_name;\n\t          \tthis.basicForm.date_of_birth = employee.date_of_birth;\n\t          \tthis.basicForm.date_of_anniversary = employee.date_of_anniversary;\n\t          \tthis.basicForm.father_name = employee.father_name;\n\t          \tthis.basicForm.mother_name = employee.mother_name;\n\t          \tthis.basicForm.nationality = employee.nationality;\n\t          \tthis.basicForm.gender = employee.gender;\n\t          \tthis.basicForm.marital_status = employee.marital_status;\n\t          \tthis.basicForm.unique_identification_number = employee.unique_identification_number;\n\t          \tthis.basicForm.mother_tongue = employee.mother_tongue;\n\t          \tthis.basicForm.caste_id = employee.caste_id;\n\t          \tthis.basicForm.category_id = employee.category_id;\n\t          \tthis.basicForm.religion_id = employee.religion_id;\n\t          \tthis.basicForm.blood_group_id = employee.blood_group_id;\n\t          \tthis.selected_caste = employee.caste_id ? {id: employee.caste_id, name: employee.caste.name} : null;\n\t          \tthis.selected_category = employee.category_id ? {id: employee.category_id, name: employee.category.name} : null;\n\t          \tthis.selected_religion = employee.religion_id ? {id: employee.religion_id, name: employee.religion.name} : null;\n\t          \tthis.selected_blood_group = employee.blood_group_id ? {id: employee.blood_group_id, name: employee.blood_group.name} : null;\n\t          \tthis.custom_values = employee.options && employee.options.hasOwnProperty('custom_values') ? employee.options.custom_values : [];\n\t        },\n\t\t\tsubmit(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.basicForm.patch('/api/employee/'+this.employee.uuid)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.$emit('complete');\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\tthis.customFieldFormErrors = error;\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tonCasteSelect(selectedOption){\n\t\t\t\tthis.basicForm.caste_id = selectedOption.id;\n\t\t\t},\n\t\t\tonCategorySelect(selectedOption){\n\t\t\t\tthis.basicForm.category_id = selectedOption.id;\n\t\t\t},\n\t\t\tonReligionSelect(selectedOption){\n\t\t\t\tthis.basicForm.religion_id = selectedOption.id;\n\t\t\t},\n\t\t\tonBloodGroupSelect(selectedOption){\n\t\t\t\tthis.basicForm.blood_group_id = selectedOption.id;\n\t\t\t}\n\t\t},\n\t\twatch: { \n      \t\temployee(employee) {\n      \t\t\tthis.get(employee);\n\t        }\n\t    }\n\t}\n</script>","<template>\n\t<div>\n\t    <form @submit.prevent=\"submit\" @keydown=\"contactForm.errors.clear($event.target.name)\">\n\t        <div class=\"row\">\n\t            <div class=\"col-12 col-sm-3\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.contact_number')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.contact_number\" name=\"contact_number\" :placeholder=\"trans('employee.contact_number')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"contact_number\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\"><small>{{trans('employee.alternate_contact_number')}}</small></label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.alternate_contact_number\" name=\"alternate_contact_number\" :placeholder=\"trans('employee.alternate_contact_number')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"alternate_contact_number\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.email')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.email\" name=\"email\" :placeholder=\"trans('employee.email')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"email\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\"><small>{{trans('employee.alternate_email')}}</small></label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.alternate_email\" name=\"alternate_email\" :placeholder=\"trans('employee.alternate_email')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"alternate_email\"></show-error>\n\t                </div>\n\t            </div>\n\t        </div>\n\t        <hr />\n\t        <h5 class=\"card-title m-t-30\">{{trans('employee.emergency_contact')}}</h5>\n\t        <div class=\"row\">\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.emergency_contact_name')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.emergency_contact_name\" name=\"emergency_contact_name\" :placeholder=\"trans('employee.emergency_contact_name')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"emergency_contact_name\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.emergency_contact_number')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.emergency_contact_number\" name=\"emergency_contact_number\" :placeholder=\"trans('employee.emergency_contact_number')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"emergency_contact_number\"></show-error>\n\t                </div>\n\t            </div>\n\t        </div>\n\t        <hr />\n\t        <h5 class=\"card-title m-t-30\">{{trans('employee.present_address')}}</h5>\n\t        <div class=\"row\">\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.address_line_1')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_address_line_1\" name=\"present_address_line_1\" :placeholder=\"trans('employee.address_line_1')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_address_line_1\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.address_line_2')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_address_line_2\" name=\"present_address_line_2\" :placeholder=\"trans('employee.address_line_2')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_address_line_2\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.city')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_city\" name=\"present_city\" :placeholder=\"trans('employee.city')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_city\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.state')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_state\" name=\"present_state\" :placeholder=\"trans('employee.state')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_state\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.zipcode')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_zipcode\" name=\"present_zipcode\" :placeholder=\"trans('employee.zipcode')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_zipcode\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.country')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.present_country\" name=\"present_country\" :placeholder=\"trans('employee.country')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"present_country\"></show-error>\n\t                </div>\n\t            </div>\n\t        </div>\n\t        <hr />\n\t        <h5 class=\"card-title m-t-30\">{{trans('employee.permanent_address')}}</h5>\n\t        <div class=\"form-group\">\n\t            <switches class=\"m-l-20\" v-model=\"contactForm.same_as_present_address\" theme=\"bootstrap\" color=\"success\" @change.native=\"updatePermanentAddress\"></switches> {{trans('employee.same_as_present_address')}}\n\t        </div>\n\t        <div class=\"row\" v-if=\"!contactForm.same_as_present_address\">\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.address_line_1')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_address_line_1\" name=\"permanent_address_line_1\" :placeholder=\"trans('employee.address_line_1')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_address_line_1\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.address_line_2')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_address_line_2\" name=\"permanent_address_line_2\" :placeholder=\"trans('employee.address_line_2')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_address_line_2\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.city')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_city\" name=\"permanent_city\" :placeholder=\"trans('employee.city')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_city\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.state')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_state\" name=\"permanent_state\" :placeholder=\"trans('employee.state')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_state\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.zipcode')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_zipcode\" name=\"permanent_zipcode\" :placeholder=\"trans('employee.zipcode')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_zipcode\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-4\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.country')}}</label>\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"contactForm.permanent_country\" name=\"permanent_country\" :placeholder=\"trans('employee.country')\">\n\t                    <show-error :form-name=\"contactForm\" prop-name=\"permanent_country\"></show-error>\n\t                </div>\n\t            </div>\n\t        </div>\n\t        <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\n            <div class=\"card-footer text-right\">\n        \t\t<button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n            </div>\n\t   \t</form>\n\t</div>\n</template>\n\n<script>\n\texport default {\n        components: {},\n\t\tprops: ['employee'],\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcontactForm: new Form({\n\t\t\t\t\tcontact_number: '',\n\t\t\t\t\temail: '',\n\t\t\t\t\tpresent_address_line_1: '',\n\t\t\t\t\tpresent_address_line_2: '',\n\t\t\t\t\tpresent_city: '',\n\t\t\t\t\tpresent_state: '',\n\t\t\t\t\tpresent_zipcode: '',\n\t\t\t\t\tpresent_country: '',\n\t\t\t\t\tsame_as_present_address: false,\n\t\t\t\t\tpermanent_address_line_1: '',\n\t\t\t\t\tpermanent_address_line_2: '',\n\t\t\t\t\tpermanent_city: '',\n\t\t\t\t\tpermanent_state: '',\n\t\t\t\t\tpermanent_zipcode: '',\n\t\t\t\t\tpermanent_country: '',\n\t\t\t\t\temergency_contact_name: '',\n\t\t\t\t\temergency_contact_number: '',\n\t\t\t\t\tcustom_values: [],\n\t\t\t\t\ttype: 'contact'\n\t\t\t\t},false),\n\t\t\t\tcustom_fields: [],\n\t\t\t\tcustom_values: [],\n\t\t\t\tcustomFieldFormErrors: {}\n\t\t\t}\n\t\t},\n\t\tmounted(){\n            if(!helper.hasPermission('edit-employee')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n\t\t},\n\t\tmethods: {\n\t\t\tgetPreRequisite(){\n\t            let loader = this.$loading.show();\n\t            axios.get('/api/employee/basic/pre-requisite?form_type=employee_contact')\n\t            \t.then(response => {\n\t            \t\tthis.custom_fields = response.custom_fields;\n\t            \t\tthis.get(this.employee);\n\t            \t\tloader.hide();\n\t            \t})\n\t            \t.catch(error => {\n\t            \t\tloader.hide();\n\t            \t\thelper.showErrorMsg(error);\n\t            \t});\t\n\t\t\t},\n\t\t\tupdateCustomValues(value) {\n\t\t\t\tthis.contactForm.custom_values = value;\n\t\t\t},\n\t\t\tupdatePermanentAddress(){\n\t          \tthis.contactForm.permanent_address_line_1 = this.contactForm.present_address_line_1;\n\t          \tthis.contactForm.permanent_address_line_2 = this.contactForm.present_address_line_2;\n\t          \tthis.contactForm.permanent_city = this.contactForm.present_city;\n\t          \tthis.contactForm.permanent_state = this.contactForm.present_state;\n\t          \tthis.contactForm.permanent_zipcode = this.contactForm.present_zipcode;\n\t          \tthis.contactForm.permanent_country = this.contactForm.present_country;\n\t\t\t},\n\t\t\tget(employee){\n\t          \tthis.contactForm.contact_number = employee.contact_number;\n\t          \tthis.contactForm.email = employee.email;\n\t          \tthis.contactForm.present_address_line_1 = employee.present_address_line_1;\n\t          \tthis.contactForm.present_address_line_2 = employee.present_address_line_2;\n\t          \tthis.contactForm.present_city = employee.present_city;\n\t          \tthis.contactForm.present_state = employee.present_state;\n\t          \tthis.contactForm.present_zipcode = employee.present_zipcode;\n\t          \tthis.contactForm.present_country = employee.present_country;\n\t          \tthis.contactForm.same_as_present_address = employee.same_as_present_address;\n\t          \tthis.contactForm.permanent_address_line_1 = employee.permanent_address_line_1;\n\t          \tthis.contactForm.permanent_address_line_2 = employee.permanent_address_line_2;\n\t          \tthis.contactForm.permanent_city = employee.permanent_city;\n\t          \tthis.contactForm.permanent_state = employee.permanent_state;\n\t          \tthis.contactForm.permanent_zipcode = employee.permanent_zipcode;\n\t          \tthis.contactForm.permanent_country = employee.permanent_country;\n\t          \tthis.contactForm.emergency_contact_name = employee.emergency_contact_name;\n\t          \tthis.contactForm.emergency_contact_number = employee.emergency_contact_number;\n\t          \tthis.custom_values = employee.options && employee.options.hasOwnProperty('custom_values') ? employee.options.custom_values : [];\n\t\t\t},\n\t\t\tsubmit(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.contactForm.patch('/api/employee/'+this.employee.uuid)\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.$emit('complete');\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\tthis.customFieldFormErrors = error;\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\twatch: { \n      \t\temployee: function(employee) {\n      \t\t\tthis.get(employee);\n\t        }\n\t    }\n\t}\n</script>","<template>\n    <div>\n        <div class=\"page-titles\" v-if=\"employee.id\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('employee.employee_detail')}}\n                        <span class=\"card-subtitle\">{{getEmployeeName(employee)}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <router-link to=\"/employee/card-view\" class=\"btn btn-info btn-sm\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.employee')}}</span></router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-8 p-0\">\n                    <div id=\"accordion\" class=\"accordion\" v-if=\"employee.id\">\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"basic\" @click=\"tab = 'basic'\" data-toggle=\"collapse\" data-target=\"#collapseBasic\" aria-expanded=\"false\" aria-controls=\"collapseBasic\">\n                                <h5><i class=\"fas fa-lg fa-graduation-cap fa-fix-w-32\"></i> {{trans('employee.basic_information')}}</h5>\n                            </div>\n\n                            <div id=\"collapseBasic\" class=\"collapse\" aria-labelledby=\"basic\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <basic-form :employee=\"employee\" @complete=\"getEmployee\" v-if=\"tab == 'basic'\"></basic-form>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"contact\" @click=\"tab = 'contact'\" data-toggle=\"collapse\" data-target=\"#collapseContact\" aria-expanded=\"false\" aria-controls=\"collapseContact\">\n                                <h5><i class=\"fas fa-lg fa-address-book fa-fix-w-32\"></i> {{trans('employee.contact_information')}}</h5>\n                            </div>\n\n                            <div id=\"collapseContact\" class=\"collapse\" aria-labelledby=\"contact\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <contact-form :employee=\"employee\" @complete=\"getEmployee\" v-if=\"tab == 'contact'\"></contact-form>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"document\" @click=\"tab = 'document'\" data-toggle=\"collapse\" data-target=\"#collapseDocument\" aria-expanded=\"false\" aria-controls=\"collapseDocument\">\n                                <h5><i class=\"fas fa-lg fa-folder fa-fix-w-32\"></i> {{trans('employee.document_information')}}</h5>\n                            </div>\n\n                            <div id=\"collapseDocument\" class=\"collapse\" aria-labelledby=\"document\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <document-detail :employee=\"employee\" v-if=\"tab == 'document'\"></document-detail>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"qualification\" @click=\"tab = 'qualification'\" data-toggle=\"collapse\" data-target=\"#collapseQualification\" aria-expanded=\"false\" aria-controls=\"collapseQualification\">\n                                <h5><i class=\"fas fa-lg fa-book fa-fix-w-32\"></i> {{trans('employee.qualification_information')}}</h5>\n                            </div>\n\n                            <div id=\"collapseQualification\" class=\"collapse\" aria-labelledby=\"qualification\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <qualification-detail :employee=\"employee\" v-if=\"tab == 'qualification'\"></qualification-detail>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"account\" @click=\"tab = 'account'\" data-toggle=\"collapse\" data-target=\"#collapseAccount\" aria-expanded=\"false\" aria-controls=\"collapseAccount\">\n                                <h5><i class=\"fas fa-lg fa-university fa-fix-w-32\"></i> {{trans('employee.account_information')}}</h5>\n                            </div>\n\n                            <div id=\"collapseAccount\" class=\"collapse\" aria-labelledby=\"account\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <account-detail :employee=\"employee\" v-if=\"tab == 'account'\"></account-detail>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"login\" @click=\"tab = 'login'\" data-toggle=\"collapse\" data-target=\"#collapseUserLogin\" aria-expanded=\"false\" aria-controls=\"collapseUserLogin\">\n                                <h5><i class=\"fas fa-lg fa-sign-in-alt fa-fix-w-32\"></i> {{trans('auth.user_login')}}</h5>\n                            </div>\n\n                            <div id=\"collapseUserLogin\" class=\"collapse\" aria-labelledby=\"login\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <login-detail :employee=\"employee\" v-if=\"tab == 'login'\" @completed=\"getEmployee\"></login-detail>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"designation\" @click=\"tab = 'designation'\" data-toggle=\"collapse\" data-target=\"#collapseDesignation\" aria-expanded=\"false\" aria-controls=\"collapseDesignation\">\n                                <h5><i class=\"fas fa-lg fa-user-plus fa-fix-w-32\"></i> {{trans('employee.designation_history')}}</h5>\n                            </div>\n\n                            <div id=\"collapseDesignation\" class=\"collapse\" aria-labelledby=\"designation\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <designation-detail :employee=\"employee\" @completed=\"getEmployee\" v-if=\"tab == 'designation'\"></designation-detail>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card\" style=\"overflow: visible;\">\n                            <div class=\"card-header collapsed\" id=\"term\" @click=\"tab = 'term'\" data-toggle=\"collapse\" data-target=\"#collapseTerm\" aria-expanded=\"false\" aria-controls=\"collapseTerm\">\n                                <h5><i class=\"fas fa-lg fa-user-times fa-fix-w-32\"></i> {{trans('employee.term_history')}}</h5>\n                            </div>\n\n                            <div id=\"collapseTerm\" class=\"collapse\" aria-labelledby=\"term\" data-parent=\"#accordion\">\n                                <div class=\"card-body\">\n                                    <term-detail :employee=\"employee\" @completed=\"getEmployee\" v-if=\"tab == 'term'\"></term-detail>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-4 hidden-sm-down p-0 border-left\">\n                    <div class=\"card\">\n                        <div class=\"card-body p-r-20\">\n                            <div class=\"m-2\">\n                                <upload-image id=\"photo\" :upload-path=\"`/employee/${employee.uuid}/photo`\" :remove-path=\"`/employee/${employee.uuid}/photo/remove`\" :image-source=\"photo\" @uploaded=\"updatePhoto\" @removed=\"updatePhoto\"></upload-image>\n                            </div>\n                            <div class=\"table-responsive\" v-if=\"employee.id\">\n                                <table class=\"table table-sm custom-show-table\">\n                                    <tbody>\n                                        <tr>\n                                            <td>{{trans('employee.name')}}</td>\n                                            <td>{{getEmployeeName(employee)}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.father_name')}}</td>\n                                            <td>{{employee.father_name}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.status')}}</td>\n                                            <td v-html=\"getStatus(employee)\"></td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.date_of_joining')}}</td>\n                                            <td>\n                                                <span v-if=\"employee.employee_terms[0]\">{{employee.employee_terms[0].date_of_joining | moment}}</span>\n                                                <span v-else>-</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.designation')}}</td>\n                                            <td>\n                                                <span v-if=\"employee.employee_designations.length\">\n                                                    {{employee.employee_designations[0].designation.name+' ('+employee.employee_designations[0].designation.employee_category.name+')'}}\n                                                </span>\n                                                <span v-else>-</span>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.mother_name')}}</td>\n                                            <td>{{employee.mother_name}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.contact_number')}}</td>\n                                            <td>{{employee.contact_number}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.gender')}}</td>\n                                            <td>{{employee.gender}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('employee.date_of_birth')}}</td>\n                                            <td>{{employee.date_of_birth | moment}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('general.created_at')}}</td>\n                                            <td>{{employee.created_at | momentDateTime}}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>{{trans('general.updated_at')}}</td>\n                                            <td>{{employee.updated_at | momentDateTime}}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import basicForm from './basic/form'\n    import contactForm from './contact/form'\n    import documentDetail from './document/index'\n    import accountDetail from './account/index'\n    import designationDetail from './designation/index'\n    import termDetail from './term/index'\n    import qualificationDetail from './qualification/index'\n    import loginDetail from './login/index'\n\n\texport default {\n        components : { basicForm,contactForm,documentDetail,accountDetail,qualificationDetail,designationDetail,termDetail,loginDetail },\n        data() {\n            return {\n                uuid:this.$route.params.uuid,\n                employee: {},\n                photo: '',\n                tab: ''\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('edit-employee')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getEmployee();\n            helper.showDemoNotification(['employee']);\n        },\n        methods: {\n        \tgetEmployee(){\n                let loader = this.$loading.show();\n        \t\taxios.get('/api/employee/'+this.uuid)\n        \t\t\t.then(response => {\n        \t\t\t\tthis.employee = response;\n                        this.photo = this.employee.photo;\n                        loader.hide();\n        \t\t\t})\n        \t\t\t.catch(error => {\n                        loader.hide();\n        \t\t\t\thelper.showErrorMsg(error);\n        \t\t\t\tthis.$router.push('/dashboard');\n        \t\t\t})\n        \t},\n        \tgetEmployeeName(){\n                return helper.getEmployeeName(this.employee);\n        \t},\n            updatePhoto(val){\n            },\n            getStatus(employee){\n                let term = employee.employee_terms;\n                if (term.length && term[0].date_of_joining <= helper.today() && (!term[0].date_of_leaving || term[0].date_of_leaving >= helper.today()))\n                    return '<span class=\"label label-success\">'+i18n.employee.status_active+'</span>';\n                else\n                    return '<span class=\"label label-danger\">'+i18n.employee.status_inactive+'</span>';\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            '$route.params.uuid': function (uuid) {\n                this.uuid = uuid;\n                this.getEmployee()\n            }\n        }\n\t}\n</script>","<template>\n\t<div v-if=\"employee.id\">\n\t    <form @submit.prevent=\"submit\" @keydown=\"userForm.errors.clear($event.target.name)\">\n\t        <div class=\"row\">\n\t            <div class=\"col-12 col-sm-6\">\n\t                <div class=\"form-group\">\n\t                    <label class=\"custom-control custom-checkbox\">\n\t                        <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"userForm.enable_employee_login\">\n\t                        <span class=\"custom-control-label\">{{trans('employee.enable_employee_login')}}</span>\n\t                    </label>\n\t                </div>\n\t                <template v-if=\"userForm.enable_employee_login\">\n\t\t                <div class=\"form-group\">\n\t\t                    <label for=\"\">{{trans('configuration.role')}}</label>\n\t\t                    <v-select label=\"name\" v-model=\"selected_role\"name=\"role\" id=\"role\" :options=\"roles\" :placeholder=\"trans('configuration.select_role')\" @select=\"onRoleSelect\" @close=\"userForm.errors.clear('role')\" @remove=\"userForm.role = ''\">\n\t\t                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!roles.length\">\n\t\t                            {{trans('general.no_option_found')}}\n\t\t                        </div>\n\t\t                    </v-select>\n\t\t                    <show-error :form-name=\"userForm\" prop-name=\"role\"></show-error>\n\t\t                </div>\n\t\t                <div class=\"form-group\">\n\t\t                \t<label for=\"\">{{trans('auth.email')}}</label>\n\t\t                    <input class=\"form-control\" type=\"text\" v-model=\"userForm.employee_email\" name=\"employee_email\" :placeholder=\"trans('employee.employee_email')\">\n\t\t                    <show-error :form-name=\"userForm\" prop-name=\"employee_email\"></show-error>\n\t\t                </div>\n\t\t                <div class=\"form-group\">\n\t\t                \t<label for=\"\">{{trans('auth.username')}}</label>\n\t\t                    <input class=\"form-control\" type=\"text\" v-model=\"userForm.employee_username\" name=\"employee_username\" :placeholder=\"trans('employee.employee_username')\">\n\t\t                    <show-error :form-name=\"userForm\" prop-name=\"employee_username\"></show-error>\n\t\t                </div>\n\t\t                <div class=\"form-group\" v-if=\"employee.user_id\">\n\t\t                    <label class=\"custom-control custom-checkbox\">\n\t\t                        <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"userForm.change_employee_password\">\n\t\t                        <span class=\"custom-control-label\">{{trans('auth.change_password')}}</span>\n\t\t                    </label>\n\t\t                </div>\n\t\t                <template v-if=\"userForm.change_employee_password\">\n\t\t\t                <div class=\"form-group\">\n\t\t\t                \t<label for=\"\">{{trans('auth.password')}}</label>\n\t\t\t                    <input class=\"form-control\" type=\"password\" v-model=\"userForm.employee_password\" name=\"employee_password\" :placeholder=\"trans('employee.employee_password')\">\n\t\t\t                    <show-error :form-name=\"userForm\" prop-name=\"employee_password\"></show-error>\n\t\t\t                </div>\n\t\t\t                <div class=\"form-group\">\n\t\t\t                \t<label for=\"\">{{trans('auth.confirm_password')}}</label>\n\t\t\t                    <input class=\"form-control\" type=\"password\" v-model=\"userForm.employee_password_confirmation\" name=\"employee_password_confirmation\" :placeholder=\"trans('auth.confirm_password')\">\n\t\t\t                    <show-error :form-name=\"userForm\" prop-name=\"employee_password_confirmation\"></show-error>\n\t\t\t                </div>\n\t\t\t            </template>\n\t\t            </template>\n\t            </div>\n\t        </div>\n            <div class=\"card-footer text-right\">\n\t        \t<button type=\"submit\" class=\"btn btn-info\">{{trans('general.save')}}</button>\n            </div>\n\t    </form>\n\t</div>\t\n</template>\n\n<script>\n\texport default {\n\t\tcomponents: {},\n\t\tprops: ['employee'],\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tuserForm: new Form({\n\t\t\t\t\tenable_employee_login: false,\n\t\t\t\t\tchange_employee_password: true,\n\t\t\t\t\temployee_email: '',\n\t\t\t\t\temployee_username: '',\n\t\t\t\t\temployee_password: '',\n\t\t\t\t\temployee_password_confirmation: '',\n\t\t\t\t\trole: ''\n\t\t\t\t}),\n\t\t\t\troles: [],\n\t\t\t\tselected_role: null\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tthis.updateLoginForm(this.employee);\n\n\t\t\tthis.getPreRequisite();\n\t\t},\n\t\tmethods: {\n\t\t\tgetPreRequisite(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\taxios.get('/api/role/employee/list')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.roles = response;\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tsubmit(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.userForm.patch('/api/employee/'+this.employee.uuid+'/user/login')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tthis.userForm.change_employee_password = true;\n\t\t\t\t\t\tthis.$emit('completed');\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tupdateLoginForm(employee){\n\t\t\t\tlet role = employee.user_id ? employee.user.roles[0].name : null;\n\t\t\t\tthis.userForm.enable_employee_login = (employee.user_id && employee.user.status == 'activated') ? true : false;\n\t\t\t\tthis.userForm.employee_email = employee.user_id ? employee.user.email : ''; \n\t\t\t\tthis.userForm.employee_username = employee.user_id ? employee.user.username : ''; \n\t\t\t\tthis.userForm.role = role && employee.user_id ? helper.ucword(role) : '';\n\t\t\t\tthis.selected_role = role && employee.user_id ? {id: employee.user.roles[0].id, name: helper.ucword(role)} : null;\n\t\t\t},\n\t\t\tonRoleSelect(selectedOption){\n\t\t\t\tthis.userForm.role = selectedOption.name;\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\temployee(employee){\n\t\t\t\tthis.updateLoginForm(employee);\n\t\t\t}\n\t\t}\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.submit.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.basicForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.first_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.first_name,\n                      expression: \"basicForm.first_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"first_name\",\n                    placeholder: _vm.trans(\"employee.first_name\"),\n                  },\n                  domProps: { value: _vm.basicForm.first_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.basicForm, \"first_name\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"first_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.middle_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.middle_name,\n                      expression: \"basicForm.middle_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"middle_name\",\n                    placeholder: _vm.trans(\"employee.middle_name\"),\n                  },\n                  domProps: { value: _vm.basicForm.middle_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"middle_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"middle_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.last_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.last_name,\n                      expression: \"basicForm.last_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"last_name\",\n                    placeholder: _vm.trans(\"employee.last_name\"),\n                  },\n                  domProps: { value: _vm.basicForm.last_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.basicForm, \"last_name\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"last_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.gender\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"radio radio-info p-l-0\" },\n                  _vm._l(_vm.genders, function (gender) {\n                    return _c(\n                      \"div\",\n                      { staticClass: \"form-check form-check-inline\" },\n                      [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.basicForm.gender,\n                              expression: \"basicForm.gender\",\n                            },\n                          ],\n                          staticClass: \"form-check-input\",\n                          attrs: {\n                            type: \"radio\",\n                            id: gender.id,\n                            name: \"gender\",\n                          },\n                          domProps: {\n                            value: gender.id,\n                            checked: _vm.basicForm.gender == gender.id,\n                            checked: _vm._q(_vm.basicForm.gender, gender.id),\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.basicForm.errors.clear(\"gender\")\n                            },\n                            change: function ($event) {\n                              return _vm.$set(\n                                _vm.basicForm,\n                                \"gender\",\n                                gender.id\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-check-label\",\n                            attrs: { for: gender.id },\n                          },\n                          [_vm._v(\" \" + _vm._s(_vm.trans(\"list.\" + gender.id)))]\n                        ),\n                      ]\n                    )\n                  }),\n                  0\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.basicForm, \"prop-name\": \"gender\" },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.marital_status\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.basicForm.marital_status,\n                        expression: \"basicForm.marital_status\",\n                      },\n                    ],\n                    staticClass: \"custom-select col-12\",\n                    attrs: { name: \"marital_status\", required: \"\" },\n                    on: {\n                      change: [\n                        function ($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function (o) {\n                              return o.selected\n                            })\n                            .map(function (o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.basicForm,\n                            \"marital_status\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function ($event) {\n                          return _vm.basicForm.errors.clear(\"marital_status\")\n                        },\n                      ],\n                    },\n                  },\n                  [\n                    _c(\n                      \"option\",\n                      { attrs: { value: \"null\", disabled: \"\", selected: \"\" } },\n                      [_vm._v(_vm._s(_vm.trans(\"general.select_one\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.marital_statuses, function (marital_status) {\n                      return _c(\n                        \"option\",\n                        { domProps: { value: marital_status.id } },\n                        [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"list.\" + marital_status.id)) +\n                              \"\\n                          \"\n                          ),\n                        ]\n                      )\n                    }),\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"marital_status\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.date_of_birth\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"employee.date_of_birth\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.basicForm.errors.clear(\"date_of_birth\")\n                    },\n                  },\n                  model: {\n                    value: _vm.basicForm.date_of_birth,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.basicForm, \"date_of_birth\", $$v)\n                    },\n                    expression: \"basicForm.date_of_birth\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"date_of_birth\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.date_of_anniversary\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"employee.date_of_anniversary\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.basicForm.errors.clear(\"date_of_anniversary\")\n                    },\n                  },\n                  model: {\n                    value: _vm.basicForm.date_of_anniversary,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.basicForm, \"date_of_anniversary\", $$v)\n                    },\n                    expression: \"basicForm.date_of_anniversary\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"date_of_anniversary\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.unique_identification_number\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.unique_identification_number,\n                      expression: \"basicForm.unique_identification_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"unique_identification_number\",\n                    placeholder: _vm.trans(\n                      \"employee.unique_identification_number\"\n                    ),\n                  },\n                  domProps: {\n                    value: _vm.basicForm.unique_identification_number,\n                  },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"unique_identification_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"unique_identification_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.father_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.father_name,\n                      expression: \"basicForm.father_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"father_name\",\n                    placeholder: _vm.trans(\"employee.father_name\"),\n                  },\n                  domProps: { value: _vm.basicForm.father_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"father_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"father_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.mother_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.mother_name,\n                      expression: \"basicForm.mother_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"mother_name\",\n                    placeholder: _vm.trans(\"employee.mother_name\"),\n                  },\n                  domProps: { value: _vm.basicForm.mother_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"mother_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"mother_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.nationality\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.nationality,\n                      expression: \"basicForm.nationality\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"nationality\",\n                    placeholder: _vm.trans(\"employee.nationality\"),\n                  },\n                  domProps: { value: _vm.basicForm.nationality },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"nationality\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"nationality\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.mother_tongue\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.basicForm.mother_tongue,\n                      expression: \"basicForm.mother_tongue\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"mother_tongue\",\n                    placeholder: _vm.trans(\"employee.mother_tongue\"),\n                  },\n                  domProps: { value: _vm.basicForm.mother_tongue },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.basicForm,\n                        \"mother_tongue\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"mother_tongue\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"misc.caste\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"caste_id\",\n                      id: \"caste_id\",\n                      options: _vm.castes,\n                      placeholder: _vm.trans(\"misc.select_caste\"),\n                    },\n                    on: {\n                      select: _vm.onCasteSelect,\n                      close: function ($event) {\n                        return _vm.basicForm.errors.clear(\"caste_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.basicForm.caste_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_caste,\n                      callback: function ($$v) {\n                        _vm.selected_caste = $$v\n                      },\n                      expression: \"selected_caste\",\n                    },\n                  },\n                  [\n                    !_vm.castes.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"caste_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"misc.category\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"category_id\",\n                      id: \"category_id\",\n                      options: _vm.categories,\n                      placeholder: _vm.trans(\"misc.select_category\"),\n                    },\n                    on: {\n                      select: _vm.onCategorySelect,\n                      close: function ($event) {\n                        return _vm.basicForm.errors.clear(\"category_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.basicForm.category_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_category,\n                      callback: function ($$v) {\n                        _vm.selected_category = $$v\n                      },\n                      expression: \"selected_category\",\n                    },\n                  },\n                  [\n                    !_vm.categories.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"category_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"misc.religion\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"religion_id\",\n                      id: \"religion_id\",\n                      options: _vm.religions,\n                      placeholder: _vm.trans(\"misc.select_religion\"),\n                    },\n                    on: {\n                      select: _vm.onReligionSelect,\n                      close: function ($event) {\n                        return _vm.basicForm.errors.clear(\"religion_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.basicForm.religion_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_religion,\n                      callback: function ($$v) {\n                        _vm.selected_religion = $$v\n                      },\n                      expression: \"selected_religion\",\n                    },\n                  },\n                  [\n                    !_vm.religions.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"religion_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"misc.blood_group\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"blood_group_id\",\n                      id: \"blood_group_id\",\n                      options: _vm.blood_groups,\n                      placeholder: _vm.trans(\"misc.select_blood_group\"),\n                    },\n                    on: {\n                      select: _vm.onBloodGroupSelect,\n                      close: function ($event) {\n                        return _vm.basicForm.errors.clear(\"blood_group_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.basicForm.blood_group_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_blood_group,\n                      callback: function ($$v) {\n                        _vm.selected_blood_group = $$v\n                      },\n                      expression: \"selected_blood_group\",\n                    },\n                  },\n                  [\n                    !_vm.blood_groups.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.basicForm,\n                    \"prop-name\": \"blood_group_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"custom-field\", {\n          attrs: {\n            fields: _vm.custom_fields,\n            customValues: _vm.custom_values,\n            formErrors: _vm.customFieldFormErrors,\n          },\n          on: { updateCustomValues: _vm.updateCustomValues },\n        }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n          ),\n        ]),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.submit.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.contactForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.contact_number\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.contact_number,\n                      expression: \"contactForm.contact_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"contact_number\",\n                    placeholder: _vm.trans(\"employee.contact_number\"),\n                  },\n                  domProps: { value: _vm.contactForm.contact_number },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"contact_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"contact_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _c(\"small\", [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"employee.alternate_contact_number\"))\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.alternate_contact_number,\n                      expression: \"contactForm.alternate_contact_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"alternate_contact_number\",\n                    placeholder: _vm.trans(\"employee.alternate_contact_number\"),\n                  },\n                  domProps: { value: _vm.contactForm.alternate_contact_number },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"alternate_contact_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"alternate_contact_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.email\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.email,\n                      expression: \"contactForm.email\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"email\",\n                    placeholder: _vm.trans(\"employee.email\"),\n                  },\n                  domProps: { value: _vm.contactForm.email },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.contactForm, \"email\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.contactForm, \"prop-name\": \"email\" },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _c(\"small\", [\n                    _vm._v(_vm._s(_vm.trans(\"employee.alternate_email\"))),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.alternate_email,\n                      expression: \"contactForm.alternate_email\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"alternate_email\",\n                    placeholder: _vm.trans(\"employee.alternate_email\"),\n                  },\n                  domProps: { value: _vm.contactForm.alternate_email },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"alternate_email\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"alternate_email\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"hr\"),\n        _vm._v(\" \"),\n        _c(\"h5\", { staticClass: \"card-title m-t-30\" }, [\n          _vm._v(_vm._s(_vm.trans(\"employee.emergency_contact\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.emergency_contact_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.emergency_contact_name,\n                      expression: \"contactForm.emergency_contact_name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"emergency_contact_name\",\n                    placeholder: _vm.trans(\"employee.emergency_contact_name\"),\n                  },\n                  domProps: { value: _vm.contactForm.emergency_contact_name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"emergency_contact_name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"emergency_contact_name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.emergency_contact_number\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.emergency_contact_number,\n                      expression: \"contactForm.emergency_contact_number\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"emergency_contact_number\",\n                    placeholder: _vm.trans(\"employee.emergency_contact_number\"),\n                  },\n                  domProps: { value: _vm.contactForm.emergency_contact_number },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"emergency_contact_number\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"emergency_contact_number\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"hr\"),\n        _vm._v(\" \"),\n        _c(\"h5\", { staticClass: \"card-title m-t-30\" }, [\n          _vm._v(_vm._s(_vm.trans(\"employee.present_address\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.address_line_1\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_address_line_1,\n                      expression: \"contactForm.present_address_line_1\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_address_line_1\",\n                    placeholder: _vm.trans(\"employee.address_line_1\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_address_line_1 },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_address_line_1\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_address_line_1\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.address_line_2\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_address_line_2,\n                      expression: \"contactForm.present_address_line_2\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_address_line_2\",\n                    placeholder: _vm.trans(\"employee.address_line_2\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_address_line_2 },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_address_line_2\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_address_line_2\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.city\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_city,\n                      expression: \"contactForm.present_city\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_city\",\n                    placeholder: _vm.trans(\"employee.city\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_city },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_city\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_city\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.state\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_state,\n                      expression: \"contactForm.present_state\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_state\",\n                    placeholder: _vm.trans(\"employee.state\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_state },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_state\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_state\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.zipcode\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_zipcode,\n                      expression: \"contactForm.present_zipcode\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_zipcode\",\n                    placeholder: _vm.trans(\"employee.zipcode\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_zipcode },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_zipcode\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_zipcode\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.country\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.contactForm.present_country,\n                      expression: \"contactForm.present_country\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"present_country\",\n                    placeholder: _vm.trans(\"employee.country\"),\n                  },\n                  domProps: { value: _vm.contactForm.present_country },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.contactForm,\n                        \"present_country\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.contactForm,\n                    \"prop-name\": \"present_country\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"hr\"),\n        _vm._v(\" \"),\n        _c(\"h5\", { staticClass: \"card-title m-t-30\" }, [\n          _vm._v(_vm._s(_vm.trans(\"employee.permanent_address\"))),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"form-group\" },\n          [\n            _c(\"switches\", {\n              staticClass: \"m-l-20\",\n              attrs: { theme: \"bootstrap\", color: \"success\" },\n              nativeOn: {\n                change: function ($event) {\n                  return _vm.updatePermanentAddress.apply(null, arguments)\n                },\n              },\n              model: {\n                value: _vm.contactForm.same_as_present_address,\n                callback: function ($$v) {\n                  _vm.$set(_vm.contactForm, \"same_as_present_address\", $$v)\n                },\n                expression: \"contactForm.same_as_present_address\",\n              },\n            }),\n            _vm._v(\n              \" \" +\n                _vm._s(_vm.trans(\"employee.same_as_present_address\")) +\n                \"\\n\\t        \"\n            ),\n          ],\n          1\n        ),\n        _vm._v(\" \"),\n        !_vm.contactForm.same_as_present_address\n          ? _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.address_line_1\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_address_line_1,\n                          expression: \"contactForm.permanent_address_line_1\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_address_line_1\",\n                        placeholder: _vm.trans(\"employee.address_line_1\"),\n                      },\n                      domProps: {\n                        value: _vm.contactForm.permanent_address_line_1,\n                      },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_address_line_1\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_address_line_1\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.address_line_2\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_address_line_2,\n                          expression: \"contactForm.permanent_address_line_2\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_address_line_2\",\n                        placeholder: _vm.trans(\"employee.address_line_2\"),\n                      },\n                      domProps: {\n                        value: _vm.contactForm.permanent_address_line_2,\n                      },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_address_line_2\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_address_line_2\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.city\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_city,\n                          expression: \"contactForm.permanent_city\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_city\",\n                        placeholder: _vm.trans(\"employee.city\"),\n                      },\n                      domProps: { value: _vm.contactForm.permanent_city },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_city\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_city\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.state\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_state,\n                          expression: \"contactForm.permanent_state\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_state\",\n                        placeholder: _vm.trans(\"employee.state\"),\n                      },\n                      domProps: { value: _vm.contactForm.permanent_state },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_state\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_state\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.zipcode\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_zipcode,\n                          expression: \"contactForm.permanent_zipcode\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_zipcode\",\n                        placeholder: _vm.trans(\"employee.zipcode\"),\n                      },\n                      domProps: { value: _vm.contactForm.permanent_zipcode },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_zipcode\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_zipcode\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.country\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.contactForm.permanent_country,\n                          expression: \"contactForm.permanent_country\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"permanent_country\",\n                        placeholder: _vm.trans(\"employee.country\"),\n                      },\n                      domProps: { value: _vm.contactForm.permanent_country },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(\n                            _vm.contactForm,\n                            \"permanent_country\",\n                            $event.target.value\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.contactForm,\n                        \"prop-name\": \"permanent_country\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"custom-field\", {\n          attrs: {\n            fields: _vm.custom_fields,\n            customValues: _vm.custom_values,\n            formErrors: _vm.customFieldFormErrors,\n          },\n          on: { updateCustomValues: _vm.updateCustomValues },\n        }),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n          ),\n        ]),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _vm.employee.id\n      ? _c(\"div\", { staticClass: \"page-titles\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"employee.employee_detail\")) +\n                    \"\\n                    \"\n                ),\n                _c(\"span\", { staticClass: \"card-subtitle\" }, [\n                  _vm._v(_vm._s(_vm.getEmployeeName(_vm.employee))),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"action-buttons pull-right\" },\n                [\n                  _c(\n                    \"router-link\",\n                    {\n                      staticClass: \"btn btn-info btn-sm\",\n                      attrs: { to: \"/employee/card-view\" },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-list\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                        _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                      ]),\n                    ]\n                  ),\n                ],\n                1\n              ),\n            ]),\n          ]),\n        ])\n      : _vm._e(),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-8 p-0\" }, [\n          _vm.employee.id\n            ? _c(\n                \"div\",\n                { staticClass: \"accordion\", attrs: { id: \"accordion\" } },\n                [\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"basic\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseBasic\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseBasic\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"basic\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass:\n                                \"fas fa-lg fa-graduation-cap fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(_vm.trans(\"employee.basic_information\"))\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseBasic\",\n                            \"aria-labelledby\": \"basic\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"basic\"\n                                ? _c(\"basic-form\", {\n                                    attrs: { employee: _vm.employee },\n                                    on: { complete: _vm.getEmployee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"contact\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseContact\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseContact\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"contact\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass:\n                                \"fas fa-lg fa-address-book fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.trans(\"employee.contact_information\")\n                                )\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseContact\",\n                            \"aria-labelledby\": \"contact\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"contact\"\n                                ? _c(\"contact-form\", {\n                                    attrs: { employee: _vm.employee },\n                                    on: { complete: _vm.getEmployee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"document\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseDocument\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseDocument\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"document\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass: \"fas fa-lg fa-folder fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.trans(\"employee.document_information\")\n                                )\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseDocument\",\n                            \"aria-labelledby\": \"document\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"document\"\n                                ? _c(\"document-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"qualification\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseQualification\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseQualification\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"qualification\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass: \"fas fa-lg fa-book fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.trans(\n                                    \"employee.qualification_information\"\n                                  )\n                                )\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseQualification\",\n                            \"aria-labelledby\": \"qualification\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"qualification\"\n                                ? _c(\"qualification-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"account\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseAccount\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseAccount\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"account\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass:\n                                \"fas fa-lg fa-university fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.trans(\"employee.account_information\")\n                                )\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseAccount\",\n                            \"aria-labelledby\": \"account\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"account\"\n                                ? _c(\"account-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"login\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseUserLogin\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseUserLogin\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"login\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass:\n                                \"fas fa-lg fa-sign-in-alt fa-fix-w-32\",\n                            }),\n                            _vm._v(\" \" + _vm._s(_vm.trans(\"auth.user_login\"))),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseUserLogin\",\n                            \"aria-labelledby\": \"login\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"login\"\n                                ? _c(\"login-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                    on: { completed: _vm.getEmployee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"designation\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseDesignation\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseDesignation\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"designation\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass: \"fas fa-lg fa-user-plus fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.trans(\"employee.designation_history\")\n                                )\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseDesignation\",\n                            \"aria-labelledby\": \"designation\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"designation\"\n                                ? _c(\"designation-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                    on: { completed: _vm.getEmployee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"card\",\n                      staticStyle: { overflow: \"visible\" },\n                    },\n                    [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"card-header collapsed\",\n                          attrs: {\n                            id: \"term\",\n                            \"data-toggle\": \"collapse\",\n                            \"data-target\": \"#collapseTerm\",\n                            \"aria-expanded\": \"false\",\n                            \"aria-controls\": \"collapseTerm\",\n                          },\n                          on: {\n                            click: function ($event) {\n                              _vm.tab = \"term\"\n                            },\n                          },\n                        },\n                        [\n                          _c(\"h5\", [\n                            _c(\"i\", {\n                              staticClass:\n                                \"fas fa-lg fa-user-times fa-fix-w-32\",\n                            }),\n                            _vm._v(\n                              \" \" + _vm._s(_vm.trans(\"employee.term_history\"))\n                            ),\n                          ]),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"collapse\",\n                          attrs: {\n                            id: \"collapseTerm\",\n                            \"aria-labelledby\": \"term\",\n                            \"data-parent\": \"#accordion\",\n                          },\n                        },\n                        [\n                          _c(\n                            \"div\",\n                            { staticClass: \"card-body\" },\n                            [\n                              _vm.tab == \"term\"\n                                ? _c(\"term-detail\", {\n                                    attrs: { employee: _vm.employee },\n                                    on: { completed: _vm.getEmployee },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]\n              )\n            : _vm._e(),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"col-12 col-sm-4 hidden-sm-down p-0 border-left\" },\n          [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _c(\"div\", { staticClass: \"card-body p-r-20\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"m-2\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: \"photo\",\n                        \"upload-path\": `/employee/${_vm.employee.uuid}/photo`,\n                        \"remove-path\": `/employee/${_vm.employee.uuid}/photo/remove`,\n                        \"image-source\": _vm.photo,\n                      },\n                      on: {\n                        uploaded: _vm.updatePhoto,\n                        removed: _vm.updatePhoto,\n                      },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _vm.employee.id\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\n                        \"table\",\n                        { staticClass: \"table table-sm custom-show-table\" },\n                        [\n                          _c(\"tbody\", [\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.trans(\"employee.name\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.getEmployeeName(_vm.employee))\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.father_name\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.employee.father_name)),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.trans(\"employee.status\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  innerHTML: _vm._s(\n                                    _vm.getStatus(_vm.employee)\n                                  ),\n                                },\n                              }),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.date_of_joining\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm.employee.employee_terms[0]\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            _vm.employee.employee_terms[0]\n                                              .date_of_joining\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _c(\"span\", [_vm._v(\"-\")]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.designation\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm.employee.employee_designations.length\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n                                                \" +\n                                          _vm._s(\n                                            _vm.employee\n                                              .employee_designations[0]\n                                              .designation.name +\n                                              \" (\" +\n                                              _vm.employee\n                                                .employee_designations[0]\n                                                .designation.employee_category\n                                                .name +\n                                              \")\"\n                                          ) +\n                                          \"\\n                                            \"\n                                      ),\n                                    ])\n                                  : _c(\"span\", [_vm._v(\"-\")]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.mother_name\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.employee.mother_name)),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.contact_number\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.employee.contact_number)),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.trans(\"employee.gender\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [_vm._v(_vm._s(_vm.employee.gender))]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"employee.date_of_birth\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"moment\")(_vm.employee.date_of_birth)\n                                  )\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(\n                                      _vm.employee.created_at\n                                    )\n                                  )\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(_vm._s(_vm.trans(\"general.updated_at\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(\n                                      _vm.employee.updated_at\n                                    )\n                                  )\n                                ),\n                              ]),\n                            ]),\n                          ]),\n                        ]\n                      ),\n                    ])\n                  : _vm._e(),\n              ]),\n            ]),\n          ]\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _vm.employee.id\n    ? _c(\"div\", [\n        _c(\n          \"form\",\n          {\n            on: {\n              submit: function ($event) {\n                $event.preventDefault()\n                return _vm.submit.apply(null, arguments)\n              },\n              keydown: function ($event) {\n                return _vm.userForm.errors.clear($event.target.name)\n              },\n            },\n          },\n          [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-sm-6\" },\n                [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"label\",\n                      { staticClass: \"custom-control custom-checkbox\" },\n                      [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.userForm.enable_employee_login,\n                              expression: \"userForm.enable_employee_login\",\n                            },\n                          ],\n                          staticClass: \"custom-control-input\",\n                          attrs: { type: \"checkbox\" },\n                          domProps: {\n                            checked: Array.isArray(\n                              _vm.userForm.enable_employee_login\n                            )\n                              ? _vm._i(\n                                  _vm.userForm.enable_employee_login,\n                                  null\n                                ) > -1\n                              : _vm.userForm.enable_employee_login,\n                          },\n                          on: {\n                            change: function ($event) {\n                              var $$a = _vm.userForm.enable_employee_login,\n                                $$el = $event.target,\n                                $$c = $$el.checked ? true : false\n                              if (Array.isArray($$a)) {\n                                var $$v = null,\n                                  $$i = _vm._i($$a, $$v)\n                                if ($$el.checked) {\n                                  $$i < 0 &&\n                                    _vm.$set(\n                                      _vm.userForm,\n                                      \"enable_employee_login\",\n                                      $$a.concat([$$v])\n                                    )\n                                } else {\n                                  $$i > -1 &&\n                                    _vm.$set(\n                                      _vm.userForm,\n                                      \"enable_employee_login\",\n                                      $$a\n                                        .slice(0, $$i)\n                                        .concat($$a.slice($$i + 1))\n                                    )\n                                }\n                              } else {\n                                _vm.$set(\n                                  _vm.userForm,\n                                  \"enable_employee_login\",\n                                  $$c\n                                )\n                              }\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"employee.enable_employee_login\"))\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.userForm.enable_employee_login\n                    ? [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"configuration.role\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  name: \"role\",\n                                  id: \"role\",\n                                  options: _vm.roles,\n                                  placeholder: _vm.trans(\n                                    \"configuration.select_role\"\n                                  ),\n                                },\n                                on: {\n                                  select: _vm.onRoleSelect,\n                                  close: function ($event) {\n                                    return _vm.userForm.errors.clear(\"role\")\n                                  },\n                                  remove: function ($event) {\n                                    _vm.userForm.role = \"\"\n                                  },\n                                },\n                                model: {\n                                  value: _vm.selected_role,\n                                  callback: function ($$v) {\n                                    _vm.selected_role = $$v\n                                  },\n                                  expression: \"selected_role\",\n                                },\n                              },\n                              [\n                                !_vm.roles.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n\\t\\t                            \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n\\t\\t                        \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"show-error\", {\n                              attrs: {\n                                \"form-name\": _vm.userForm,\n                                \"prop-name\": \"role\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"auth.email\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.userForm.employee_email,\n                                  expression: \"userForm.employee_email\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"employee_email\",\n                                placeholder: _vm.trans(\n                                  \"employee.employee_email\"\n                                ),\n                              },\n                              domProps: { value: _vm.userForm.employee_email },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.userForm,\n                                    \"employee_email\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"show-error\", {\n                              attrs: {\n                                \"form-name\": _vm.userForm,\n                                \"prop-name\": \"employee_email\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"auth.username\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.userForm.employee_username,\n                                  expression: \"userForm.employee_username\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"employee_username\",\n                                placeholder: _vm.trans(\n                                  \"employee.employee_username\"\n                                ),\n                              },\n                              domProps: {\n                                value: _vm.userForm.employee_username,\n                              },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.userForm,\n                                    \"employee_username\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"show-error\", {\n                              attrs: {\n                                \"form-name\": _vm.userForm,\n                                \"prop-name\": \"employee_username\",\n                              },\n                            }),\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _vm.employee.user_id\n                          ? _c(\"div\", { staticClass: \"form-group\" }, [\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"custom-control custom-checkbox\",\n                                },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.userForm.change_employee_password,\n                                        expression:\n                                          \"userForm.change_employee_password\",\n                                      },\n                                    ],\n                                    staticClass: \"custom-control-input\",\n                                    attrs: { type: \"checkbox\" },\n                                    domProps: {\n                                      checked: Array.isArray(\n                                        _vm.userForm.change_employee_password\n                                      )\n                                        ? _vm._i(\n                                            _vm.userForm\n                                              .change_employee_password,\n                                            null\n                                          ) > -1\n                                        : _vm.userForm.change_employee_password,\n                                    },\n                                    on: {\n                                      change: function ($event) {\n                                        var $$a =\n                                            _vm.userForm\n                                              .change_employee_password,\n                                          $$el = $event.target,\n                                          $$c = $$el.checked ? true : false\n                                        if (Array.isArray($$a)) {\n                                          var $$v = null,\n                                            $$i = _vm._i($$a, $$v)\n                                          if ($$el.checked) {\n                                            $$i < 0 &&\n                                              _vm.$set(\n                                                _vm.userForm,\n                                                \"change_employee_password\",\n                                                $$a.concat([$$v])\n                                              )\n                                          } else {\n                                            $$i > -1 &&\n                                              _vm.$set(\n                                                _vm.userForm,\n                                                \"change_employee_password\",\n                                                $$a\n                                                  .slice(0, $$i)\n                                                  .concat($$a.slice($$i + 1))\n                                              )\n                                          }\n                                        } else {\n                                          _vm.$set(\n                                            _vm.userForm,\n                                            \"change_employee_password\",\n                                            $$c\n                                          )\n                                        }\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    { staticClass: \"custom-control-label\" },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\"auth.change_password\")\n                                        )\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              ),\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.userForm.change_employee_password\n                          ? [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(_vm._s(_vm.trans(\"auth.password\"))),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.userForm.employee_password,\n                                        expression:\n                                          \"userForm.employee_password\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"password\",\n                                      name: \"employee_password\",\n                                      placeholder: _vm.trans(\n                                        \"employee.employee_password\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value: _vm.userForm.employee_password,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.userForm,\n                                          \"employee_password\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.userForm,\n                                      \"prop-name\": \"employee_password\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"auth.confirm_password\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.userForm\n                                            .employee_password_confirmation,\n                                        expression:\n                                          \"userForm.employee_password_confirmation\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"password\",\n                                      name: \"employee_password_confirmation\",\n                                      placeholder: _vm.trans(\n                                        \"auth.confirm_password\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.userForm\n                                          .employee_password_confirmation,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.userForm,\n                                          \"employee_password_confirmation\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.userForm,\n                                      \"prop-name\":\n                                        \"employee_password_confirmation\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]\n                          : _vm._e(),\n                      ]\n                    : _vm._e(),\n                ],\n                2\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n              _c(\n                \"button\",\n                { staticClass: \"btn btn-info\", attrs: { type: \"submit\" } },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              ),\n            ]),\n          ]\n        ),\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=341633d7&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('341633d7')) {\n      api.createRecord('341633d7', component.options)\n    } else {\n      api.reload('341633d7', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=341633d7&\", function () {\n      api.rerender('341633d7', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/basic/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=341633d7&\"","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=bc4da4b6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('bc4da4b6')) {\n      api.createRecord('bc4da4b6', component.options)\n    } else {\n      api.reload('bc4da4b6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=bc4da4b6&\", function () {\n      api.rerender('bc4da4b6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/contact/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=bc4da4b6&\"","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=917b1648&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('917b1648')) {\n      api.createRecord('917b1648', component.options)\n    } else {\n      api.reload('917b1648', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=917b1648&\", function () {\n      api.rerender('917b1648', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/edit.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=917b1648&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6c99ee6c&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6c99ee6c')) {\n      api.createRecord('6c99ee6c', component.options)\n    } else {\n      api.reload('6c99ee6c', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=6c99ee6c&\", function () {\n      api.rerender('6c99ee6c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/login/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=6c99ee6c&\""],"mappings":";;;;;;;;;;AAwrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxMA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/HA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAKA;AAKA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;ACp6BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAMA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;ACz8BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAMA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAgBA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAiCA;AACA;AAGA;AACA;AAmJA;AACA;AACA;;;;;;;;;;;;;AC7yBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAkBA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAaA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;ACreA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
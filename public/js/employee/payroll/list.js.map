{"version":3,"file":"js/employee/payroll/list.js?id=07995b5d0a1f43ff8a6f","sources":["webpack:///resources/js/views/employee/payroll/list.vue","webpack:///./resources/js/views/employee/payroll/list.vue","webpack:///./resources/js/views/employee/payroll/list.vue?0404","webpack:///./resources/js/views/employee/payroll/list.vue?de4d","webpack:///./resources/js/views/employee/payroll/list.vue?e5ce"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('employee.payroll')}} \n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"payrolls.total\">{{trans('general.total_result_found',{count : payrolls.total, from: payrolls.from, to: payrolls.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" v-if=\"payrolls.total && hasPermission('generate-payroll')\" @click=\"$router.push('/employee/payroll/generate')\" v-tooltip=\"trans('employee.generate_new_payroll')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.generate_new_payroll')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div>\n                        <help-button @clicked=\"help_topic = 'employee.payroll'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('employee.employee')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employees\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeRemove\" :selected=\"selected_employees\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getPayrolls\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"payrolls.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('employee.payroll')}}</th>\n                                    <th>{{trans('employee.employee')}}</th>\n                                    <th>{{trans('employee.payroll_period')}}</th>\n                                    <th>{{trans('employee.net_salary')}}</th>\n                                    <th>{{trans('employee.payroll_status')}}</th>\n                                    <th>{{trans('general.created_at')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"payroll in payrolls.data\">\n                                    <td>{{'#'+getPayrollNumber(payroll)}}</td>\n                                    <td>\n                                        {{getEmployeeNameWithCode(payroll.employee)}} <br />\n                                        <span class=\"font-90pc\">{{getEmployeeDesignationOnDate(payroll.employee, payroll.start_date)}}</span>\n                                    </td>\n                                    <td>{{payroll.start_date | moment}} {{trans('general.to')}} {{payroll.end_date | moment}}</td>\n                                    <td>{{formatCurrency(payroll.total)}}</td>\n                                    <td>\n                                        <span v-for=\"status in getPayrollStatus(payroll)\" :class=\"['label','label-'+status.color,'m-r-5']\">{{status.label}}</span>\n                                    </td>\n                                    <td>{{payroll.created_at | momentDateTime}}</td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.view')\" @click=\"$router.push('/employee/payroll/'+payroll.uuid)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\n                                            <a :href=\"`/employee/payroll/${payroll.uuid}/print?token=${authToken}`\" target=\"_blank\" class=\"btn btn-secondary btn-sm\" v-tooltip=\"trans('general.print')\" ><i class=\"fas fa-print\"></i></a>\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-payroll')\" v-tooltip=\"trans('employee.edit_payroll')\" @click.prevent=\"editPayroll(payroll)\"><i class=\"fas fa-edit\"></i></button>\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-payroll')\" :key=\"payroll.id\" v-confirm=\"{ok: confirmDelete(payroll)}\" v-tooltip=\"trans('employee.delete_payroll')\"><i class=\"fas fa-trash\"></i></button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!payrolls.total\" module=\"employee\" title=\"payroll_module_title\" description=\"payroll_module_description\" icon=\"list\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"hasPermission('generate-payroll')\" @click=\"$router.push('/employee/payroll/generate')\"><i class=\"fas fa-plus\"></i> {{trans('employee.generate_new_payroll')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"payrolls\" @updateRecords=\"getPayrolls\"></pagination-record>\n                </div>\n            </div>\n        </div>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    export default {\n        components : {},\n        data() {\n            return {\n                payrolls: {\n                    total: 0,\n                    data: []\n                },\n                filter: {\n                    sort_by : 'start_date',\n                    order: 'desc',\n                    employee_id: [],\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'start_date',\n                        translation: i18n.employee.payroll_start_date\n                    },\n                    {\n                        value: 'end_date',\n                        translation: i18n.employee.payroll_end_date\n                    },\n                    {\n                        value: 'created_at',\n                        translation: i18n.general.created_at\n                    }\n                ],\n                employees: [],\n                selected_employees: null,\n                showFilterPanel: false,\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-payroll')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPayrolls();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getEmployeeNameWithCode(employee){\n                return helper.getEmployeeNameWithCode(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            getPayrollStatus(payroll){\n                return helper.getPayrollStatus(payroll);\n            },\n            getPayrollNumber(payroll){\n                return helper.getPayrollNumber(payroll);\n            },\n            getPayrolls(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/employee/payroll/list?page=' + page + url)\n                    .then(response => {\n                        this.payrolls = response.payrolls;\n                        this.employees = response.filters.employees;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            editPayroll(payroll){\n                this.$router.push('/employee/payroll/'+payroll.uuid+'/edit');\n            },\n            confirmDelete(payroll){\n                return dialog => this.deletePayroll(payroll);\n            },\n            deletePayroll(payroll){\n                let loader = this.$loading.show();\n                axios.delete('/api/employee/payroll/'+payroll.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getPayrolls();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config)\n            },\n            print(){\n                let loader = this.$loading.show();\n                axios.post('/api/employee/payroll/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        loader.hide();\n                        print.document.write(response);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                axios.post('/api/employee/payroll/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            formatCurrency(amount){\n                return helper.formatCurrency(amount);\n            },\n            onEmployeeSelect(selectedOption){\n                this.filter.employee_id.push(selectedOption.id);\n            },\n            onEmployeeRemove(removedOption){\n                this.filter.employee_id.splice(this.filter.employee_id.indexOf(removedOption.id), 1);\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getPayrolls();\n            },\n            'filter.order': function(val){\n                this.getPayrolls();\n            },\n            'filter.page_length': function(val){\n                this.getPayrolls();\n            }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"employee.payroll\")) +\n                  \" \\n                    \"\n              ),\n              _vm.payrolls.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.payrolls.total,\n                            from: _vm.payrolls.from,\n                            to: _vm.payrolls.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.payrolls.total && _vm.hasPermission(\"generate-payroll\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"employee.generate_new_payroll\"),\n                            expression:\n                              \"trans('employee.generate_new_payroll')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            return _vm.$router.push(\n                              \"/employee/payroll/generate\"\n                            )\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"employee.generate_new_payroll\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"employee.payroll\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"employee_id\",\n                                  id: \"employee_id\",\n                                  options: _vm.employees,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_employee\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_employees,\n                                },\n                                on: {\n                                  select: _vm.onEmployeeSelect,\n                                  remove: _vm.onEmployeeRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_employees,\n                                  callback: function ($$v) {\n                                    _vm.selected_employees = $$v\n                                  },\n                                  expression: \"selected_employees\",\n                                },\n                              },\n                              [\n                                !_vm.employees.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getPayrolls },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.payrolls.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.payroll\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"employee.payroll_period\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.net_salary\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"employee.payroll_status\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.payrolls.data, function (payroll) {\n                            return _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\"#\" + _vm.getPayrollNumber(payroll))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(\n                                      _vm.getEmployeeNameWithCode(\n                                        payroll.employee\n                                      )\n                                    ) +\n                                    \" \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\" \"),\n                                _c(\"span\", { staticClass: \"font-90pc\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.getEmployeeDesignationOnDate(\n                                        payroll.employee,\n                                        payroll.start_date\n                                      )\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm._f(\"moment\")(payroll.start_date)) +\n                                    \" \" +\n                                    _vm._s(_vm.trans(\"general.to\")) +\n                                    \" \" +\n                                    _vm._s(_vm._f(\"moment\")(payroll.end_date))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.formatCurrency(payroll.total))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"td\",\n                                _vm._l(\n                                  _vm.getPayrollStatus(payroll),\n                                  function (status) {\n                                    return _c(\n                                      \"span\",\n                                      {\n                                        class: [\n                                          \"label\",\n                                          \"label-\" + status.color,\n                                          \"m-r-5\",\n                                        ],\n                                      },\n                                      [_vm._v(_vm._s(status.label))]\n                                    )\n                                  }\n                                ),\n                                0\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(payroll.created_at)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\"general.view\"),\n                                          expression: \"trans('general.view')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-success btn-sm\",\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.$router.push(\n                                            \"/employee/payroll/\" + payroll.uuid\n                                          )\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-arrow-circle-right\",\n                                      }),\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"a\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\"general.print\"),\n                                          expression: \"trans('general.print')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-secondary btn-sm\",\n                                      attrs: {\n                                        href: `/employee/payroll/${payroll.uuid}/print?token=${_vm.authToken}`,\n                                        target: \"_blank\",\n                                      },\n                                    },\n                                    [_c(\"i\", { staticClass: \"fas fa-print\" })]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"edit-payroll\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"employee.edit_payroll\"\n                                              ),\n                                              expression:\n                                                \"trans('employee.edit_payroll')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.editPayroll(payroll)\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-edit\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"delete-payroll\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"confirm\",\n                                              rawName: \"v-confirm\",\n                                              value: {\n                                                ok: _vm.confirmDelete(payroll),\n                                              },\n                                              expression:\n                                                \"{ok: confirmDelete(payroll)}\",\n                                            },\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"employee.delete_payroll\"\n                                              ),\n                                              expression:\n                                                \"trans('employee.delete_payroll')\",\n                                            },\n                                          ],\n                                          key: payroll.id,\n                                          staticClass: \"btn btn-danger btn-sm\",\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.payrolls.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"employee\",\n                          title: \"payroll_module_title\",\n                          description: \"payroll_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          _vm.hasPermission(\"generate-payroll\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.$router.push(\n                                        \"/employee/payroll/generate\"\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"employee.generate_new_payroll\"\n                                        )\n                                      )\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.payrolls,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getPayrolls,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./list.vue?vue&type=template&id=3d32311a&\"\nimport script from \"./list.vue?vue&type=script&lang=js&\"\nexport * from \"./list.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3d32311a')) {\n      api.createRecord('3d32311a', component.options)\n    } else {\n      api.reload('3d32311a', component.options)\n    }\n    module.hot.accept(\"./list.vue?vue&type=template&id=3d32311a&\", function () {\n      api.rerender('3d32311a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/list.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./list.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./list.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./list.vue?vue&type=template&id=3d32311a&\""],"mappings":";;;;;;;;;;AA2GA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAasBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AA+BA;AAAA;AASA;AAmBA;AAAA;AAiCA;AAGA;AAKA;AAGA;AAaA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;ACxnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
{"version":3,"file":"js/configuration/basic/index~js/setup.js?id=fdcfd5bf607bc3cad770","sources":["webpack:///resources/js/views/configuration/basic/form.vue","webpack:///./resources/js/views/configuration/basic/form.vue","webpack:///./resources/js/views/configuration/basic/form.vue?3409","webpack:///./resources/js/views/configuration/basic/form.vue?956a","webpack:///./resources/js/views/configuration/basic/form.vue?1d08"],"sourcesContent":["<template>\n    <div class=\"row\">\n        <div :class=\"['col-12', !setupWizard ? 'col-sm-7' : '', 'p-0', 'pl-3']\">\n            <div class=\"card\">\n                <div class=\"card-body p-4\">\n                    <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-8\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_name')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_name\" name=\"institute_name\" :placeholder=\"trans('configuration.institute_name')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_name\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_running_body')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_running_body\" name=\"institute_running_body\" :placeholder=\"trans('configuration.institute_running_body')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_running_body\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_foundation_date')}}</label>\n                                    <datepicker v-model=\"configForm.institute_foundation_date\" :bootstrapStyling=\"true\" @selected=\"configForm.errors.clear('institute_foundation_date')\" :placeholder=\"trans('configuration.institute_foundation_date')\"></datepicker>\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_foundation_date\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_recognition_body')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_recognition_body\" name=\"institute_recognition_body\" :placeholder=\"trans('configuration.institute_recognition_body')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_recognition_body\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_recognition_number')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_recognition_number\" name=\"institute_recognition_number\" :placeholder=\"trans('configuration.institute_recognition_number')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_recognition_number\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <h4 class=\"card-title\">{{trans('configuration.contact_information')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.address_line_1')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.address_line_1\" name=\"address_line_1\" :placeholder=\"trans('configuration.address_line_1')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"address_line_1\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.address_line_2')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.address_line_2\" name=\"address_line_2\" :placeholder=\"trans('configuration.address_line_2')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"address_line_2\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.city')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.city\" name=\"city\" :placeholder=\"trans('configuration.city')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"city\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.state')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.state\" name=\"state\" :placeholder=\"trans('configuration.state')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"state\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.zipcode')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.zipcode\" name=\"zipcode\" :placeholder=\"trans('configuration.zipcode')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"zipcode\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.country')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.country\" name=\"country\" :placeholder=\"trans('configuration.country')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"country\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.phone')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.phone\" name=\"phone\" :placeholder=\"trans('configuration.phone')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"phone\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.fax')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.fax\" name=\"fax\" :placeholder=\"trans('configuration.fax')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"fax\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.email')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.email\" name=\"email\" :placeholder=\"trans('configuration.email')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"email\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.website')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.website\" name=\"website\" :placeholder=\"trans('configuration.website')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"website\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <button v-if=\"!setupWizard\" type=\"submit\" class=\"btn btn-info waves-effect waves-light m-t-10 pull-right\">{{trans('general.save')}}</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-sm-5 hidden-sm-down p-0 pr-3\" v-if=\"!setupWizard\">\n            <div class=\"card border-left\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-6\">\n                            <upload-image id=\"logo\" :button-text=\"trans('general.choose_logo')\" upload-path=\"/configuration/logo\" remove-path=\"/configuration/logo/remove\" :image-source=\"logo\" @uploaded=\"updateLogo\" @removed=\"updateLogo\"></upload-image>\n                        </div>\n                        <div class=\"col-12 col-sm-6\">\n                            <upload-image id=\"icon\" :button-text=\"trans('general.choose_icon')\" upload-path=\"/configuration/icon\" remove-path=\"/configuration/icon/remove\" :image-source=\"icon\" @uploaded=\"updateIcon\" @removed=\"updateIcon\"></upload-image>\n                        </div>\n                    </div>\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-sm custom-show-table\">\n                            <tbody>\n                                <tr v-for=\"(config,key) in configForm\" v-if=\"key != 'config_type' && key != 'errors' && key != 'originalData' && key != 'autoReset'\">\n                                    <td>{{trans('configuration.'+key)}}</td>\n                                    <td>\n                                        <span v-if=\"key == 'institute_foundation_date'\">{{configForm[key] | moment}}</span>\n                                        <span v-else>{{configForm[key]}}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n    \tprops: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : {},\n        data() {\n            return {\n                configForm: new Form({\n                    institute_name : '',\n                    institute_running_body: '',\n                    institute_recognition_number: '',\n                    institute_recognition_body: '',\n                    institute_foundation_date: '',\n                    address_line_1: '',\n                    address_line_2: '',\n                    city: '',\n                    state: '',\n                    zipcode: '',\n                    country: '',\n                    phone: '',\n                    fax: '',\n                    email: '',\n                    website: '',\n                    config_type: ''\n                }, false),\n                icon: '',\n                logo: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n            this.icon = helper.getConfig('icon');\n            this.logo = helper.getConfig('logo');\n\n            if(!this.setupWizard)\n                this.getConfiguration();\n        },\n        methods: {\n            getConfiguration(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration')\n                    .then(response => {\n                        this.configForm = helper.formAssign(this.configForm, response);\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.configForm.config_type = 'basic';\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            },\n            updateLogo(val){\n                this.$store.dispatch('setConfig',{\n                    logo: val\n                });\n            },\n            updateIcon(val){\n                this.$store.dispatch('setConfig',{\n                    icon: val\n                });\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            configurations(val){\n                if (val)\n                    helper.formAssign(this.configForm,val);\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\n      \"div\",\n      { class: [\"col-12\", !_vm.setupWizard ? \"col-sm-7\" : \"\", \"p-0\", \"pl-3\"] },\n      [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\"div\", { staticClass: \"card-body p-4\" }, [\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function ($event) {\n                    $event.preventDefault()\n                    return _vm.submit.apply(null, arguments)\n                  },\n                  keydown: function ($event) {\n                    return _vm.configForm.errors.clear($event.target.name)\n                  },\n                },\n              },\n              [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.institute_name\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_name,\n                              expression: \"configForm.institute_name\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_name\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_name\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.institute_name },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_name\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.institute_running_body\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_running_body,\n                              expression: \"configForm.institute_running_body\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_running_body\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_running_body\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_running_body,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_running_body\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_running_body\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_foundation_date\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"datepicker\", {\n                          attrs: {\n                            bootstrapStyling: true,\n                            placeholder: _vm.trans(\n                              \"configuration.institute_foundation_date\"\n                            ),\n                          },\n                          on: {\n                            selected: function ($event) {\n                              return _vm.configForm.errors.clear(\n                                \"institute_foundation_date\"\n                              )\n                            },\n                          },\n                          model: {\n                            value: _vm.configForm.institute_foundation_date,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_foundation_date\",\n                                $$v\n                              )\n                            },\n                            expression: \"configForm.institute_foundation_date\",\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_foundation_date\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_recognition_body\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_recognition_body,\n                              expression:\n                                \"configForm.institute_recognition_body\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_recognition_body\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_recognition_body\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_recognition_body,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_recognition_body\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_recognition_body\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_recognition_number\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.configForm.institute_recognition_number,\n                              expression:\n                                \"configForm.institute_recognition_number\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_recognition_number\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_recognition_number\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_recognition_number,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_recognition_number\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_recognition_number\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"h4\", { staticClass: \"card-title\" }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"configuration.contact_information\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.address_line_1\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.address_line_1,\n                              expression: \"configForm.address_line_1\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"address_line_1\",\n                            placeholder: _vm.trans(\n                              \"configuration.address_line_1\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.address_line_1 },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"address_line_1\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"address_line_1\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.address_line_2\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.address_line_2,\n                              expression: \"configForm.address_line_2\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"address_line_2\",\n                            placeholder: _vm.trans(\n                              \"configuration.address_line_2\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.address_line_2 },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"address_line_2\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"address_line_2\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.city\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.city,\n                              expression: \"configForm.city\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"city\",\n                            placeholder: _vm.trans(\"configuration.city\"),\n                          },\n                          domProps: { value: _vm.configForm.city },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"city\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"city\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.state\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.state,\n                              expression: \"configForm.state\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"state\",\n                            placeholder: _vm.trans(\"configuration.state\"),\n                          },\n                          domProps: { value: _vm.configForm.state },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"state\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"state\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.zipcode\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.zipcode,\n                              expression: \"configForm.zipcode\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"zipcode\",\n                            placeholder: _vm.trans(\"configuration.zipcode\"),\n                          },\n                          domProps: { value: _vm.configForm.zipcode },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"zipcode\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"zipcode\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.country\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.country,\n                              expression: \"configForm.country\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"country\",\n                            placeholder: _vm.trans(\"configuration.country\"),\n                          },\n                          domProps: { value: _vm.configForm.country },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"country\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"country\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.phone\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.phone,\n                              expression: \"configForm.phone\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"phone\",\n                            placeholder: _vm.trans(\"configuration.phone\"),\n                          },\n                          domProps: { value: _vm.configForm.phone },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"phone\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"phone\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.fax\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.fax,\n                              expression: \"configForm.fax\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"fax\",\n                            placeholder: _vm.trans(\"configuration.fax\"),\n                          },\n                          domProps: { value: _vm.configForm.fax },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"fax\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"fax\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.email\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.email,\n                              expression: \"configForm.email\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"email\",\n                            placeholder: _vm.trans(\"configuration.email\"),\n                          },\n                          domProps: { value: _vm.configForm.email },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"email\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"email\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.website\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.website,\n                              expression: \"configForm.website\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"website\",\n                            placeholder: _vm.trans(\"configuration.website\"),\n                          },\n                          domProps: { value: _vm.configForm.website },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"website\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"website\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                !_vm.setupWizard\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-info waves-effect waves-light m-t-10 pull-right\",\n                        attrs: { type: \"submit\" },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                    )\n                  : _vm._e(),\n              ]\n            ),\n          ]),\n        ]),\n      ]\n    ),\n    _vm._v(\" \"),\n    !_vm.setupWizard\n      ? _c(\"div\", { staticClass: \"col-12 col-sm-5 hidden-sm-down p-0 pr-3\" }, [\n          _c(\"div\", { staticClass: \"card border-left\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-sm-6\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: \"logo\",\n                        \"button-text\": _vm.trans(\"general.choose_logo\"),\n                        \"upload-path\": \"/configuration/logo\",\n                        \"remove-path\": \"/configuration/logo/remove\",\n                        \"image-source\": _vm.logo,\n                      },\n                      on: { uploaded: _vm.updateLogo, removed: _vm.updateLogo },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-sm-6\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: \"icon\",\n                        \"button-text\": _vm.trans(\"general.choose_icon\"),\n                        \"upload-path\": \"/configuration/icon\",\n                        \"remove-path\": \"/configuration/icon/remove\",\n                        \"image-source\": _vm.icon,\n                      },\n                      on: { uploaded: _vm.updateIcon, removed: _vm.updateIcon },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"table-responsive\" }, [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table-sm custom-show-table\" },\n                  [\n                    _c(\n                      \"tbody\",\n                      _vm._l(_vm.configForm, function (config, key) {\n                        return key != \"config_type\" &&\n                          key != \"errors\" &&\n                          key != \"originalData\" &&\n                          key != \"autoReset\"\n                          ? _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"configuration.\" + key))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                key == \"institute_foundation_date\"\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(_vm.configForm[key])\n                                        )\n                                      ),\n                                    ])\n                                  : _c(\"span\", [\n                                      _vm._v(_vm._s(_vm.configForm[key])),\n                                    ]),\n                              ]),\n                            ])\n                          : _vm._e()\n                      }),\n                      0\n                    ),\n                  ]\n                ),\n              ]),\n            ]),\n          ]),\n        ])\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=20cf2fbd&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('20cf2fbd')) {\n      api.createRecord('20cf2fbd', component.options)\n    } else {\n      api.reload('20cf2fbd', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=20cf2fbd&\", function () {\n      api.rerender('20cf2fbd', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/basic/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=20cf2fbd&\""],"mappings":";;;;;;;;;;AAyJA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;AC1PA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAKA;AA0BA;AAWA;AACA;AACA;;;;;;;;;;;;;AC74BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
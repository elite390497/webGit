{"version":3,"file":"js/frontend/block/edit~js/frontend/block/index.js?id=36c1660df1457def6666","sources":["webpack:///resources/js/views/frontend/block/form.vue","webpack:///./resources/js/views/frontend/block/form.vue","webpack:///./resources/js/views/frontend/block/form.vue?0719","webpack:///./resources/js/views/frontend/block/form.vue?8d8b","webpack:///./resources/js/views/frontend/block/form.vue?0576"],"sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"blockForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('frontend.block_title')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"blockForm.title\" name=\"title\" :placeholder=\"trans('frontend.block_title')\">\n                        <show-error :form-name=\"blockForm\" prop-name=\"title\"></show-error>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('frontend.menu')}}</label>\n                        <select v-model=\"blockForm.menu_id\" class=\"custom-select col-12\" name=\"menu_id\" @change=\"blockForm.errors.clear('menu_id')\">\n                          <option value=\"\">{{trans('general.select_one')}}</option>\n                          <option v-for=\"menu in menus\" v-bind:value=\"menu.value\">\n                            {{ menu.text }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"blockForm\" prop-name=\"menu_id\"></show-error>\n                    </div> \n                    <div class=\"form-group\" v-if=\"!blockForm.menu_id\">\n                        <label for=\"\">{{trans('frontend.block_url')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"blockForm.url\" name=\"url\" :placeholder=\"trans('frontend.block_url')\">\n                        <show-error :form-name=\"blockForm\" prop-name=\"url\"></show-error>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"custom-control custom-checkbox\">\n                            <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"blockForm.is_draft\" value=\"1\">\n                            <span class=\"custom-control-label\">{{trans('frontend.block_is_draft')}}</span>\n                        </label>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('frontend.block_body')}}</label>\n                        <autosize-textarea v-model=\"blockForm.body\" rows=\"4\" name=\"body\" :placeholder=\"trans('frontend.block_body')\"></autosize-textarea>\n                        <show-error :form-name=\"blockForm\" prop-name=\"body\"></show-error>\n                    </div>\n                    <div class=\"form-group\">\n\n                        <upload-image id=\"block_image\" :button-text=\"trans('frontend.choose_featured_image')\" upload-path=\"/frontend/block/featured/image\" remove-path=\"/frontend/block/featured/image\" :image-source=\"blockForm.featured_image\" @uploaded=\"updateImage\" @removed=\"blockForm.featured_image = ''\"></upload-image>\n                        <!-- <file-upload-input :button-text=\"trans('general.attachment')\" :token=\"blockForm.upload_token\" module=\"block\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input> -->\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/frontend/block\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\n\n    export default {\n        components: {},\n        data() {\n            return {\n                blockForm: new Form({\n                    title: '',\n                    is_draft: 0,\n                    menu_id: '',\n                    url: '',\n                    body: '',\n                    featured_image: '',\n                    upload_token: ''\n                }),\n                menus: [],\n                module_id: '',\n                image: '',\n                clearAttachment: true\n            };\n        },\n        props: ['uuid'],\n        mounted() {\n            if(!helper.frontendConfigurationAccessible()){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            if(this.uuid)\n                this.get();\n            else\n                this.blockForm.upload_token = this.$uuid.v4();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/frontend/block/pre-requisite')\n                    .then(response => {\n                        this.menus = response.menus;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.blockForm.post('/api/frontend/block')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.clearAttachment = !this.clearAttachment;\n                        this.blockForm.upload_token = this.$uuid.v4();\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/frontend/block/'+this.uuid)\n                    .then(response => {\n                        this.blockForm.title = response.block.title;\n                        this.blockForm.body = response.block.body;\n                        this.blockForm.is_draft = response.block.is_draft;\n                        this.blockForm.menu_id = response.block.frontend_menu_id;\n                        this.blockForm.url = response.block.url;\n                        this.blockForm.featured_image = response.block.featured_image;\n                        this.blockForm.upload_token = response.block.upload_token;\n                        this.module_id = response.block.id;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/frontend/block');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.blockForm.patch('/api/frontend/block/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/frontend/block');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            updateImage(val){\n                this.blockForm.featured_image = val;\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.blockForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.block_title\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.blockForm.title,\n                      expression: \"blockForm.title\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: _vm.trans(\"frontend.block_title\"),\n                  },\n                  domProps: { value: _vm.blockForm.title },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.blockForm, \"title\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.blockForm, \"prop-name\": \"title\" },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.menu\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"select\",\n                  {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.blockForm.menu_id,\n                        expression: \"blockForm.menu_id\",\n                      },\n                    ],\n                    staticClass: \"custom-select col-12\",\n                    attrs: { name: \"menu_id\" },\n                    on: {\n                      change: [\n                        function ($event) {\n                          var $$selectedVal = Array.prototype.filter\n                            .call($event.target.options, function (o) {\n                              return o.selected\n                            })\n                            .map(function (o) {\n                              var val = \"_value\" in o ? o._value : o.value\n                              return val\n                            })\n                          _vm.$set(\n                            _vm.blockForm,\n                            \"menu_id\",\n                            $event.target.multiple\n                              ? $$selectedVal\n                              : $$selectedVal[0]\n                          )\n                        },\n                        function ($event) {\n                          return _vm.blockForm.errors.clear(\"menu_id\")\n                        },\n                      ],\n                    },\n                  },\n                  [\n                    _c(\"option\", { attrs: { value: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm._l(_vm.menus, function (menu) {\n                      return _c(\"option\", { domProps: { value: menu.value } }, [\n                        _vm._v(\n                          \"\\n                        \" +\n                            _vm._s(menu.text) +\n                            \"\\n                      \"\n                        ),\n                      ])\n                    }),\n                  ],\n                  2\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.blockForm, \"prop-name\": \"menu_id\" },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            !_vm.blockForm.menu_id\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"frontend.block_url\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.blockForm.url,\n                          expression: \"blockForm.url\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: \"url\",\n                        placeholder: _vm.trans(\"frontend.block_url\"),\n                      },\n                      domProps: { value: _vm.blockForm.url },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(_vm.blockForm, \"url\", $event.target.value)\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: { \"form-name\": _vm.blockForm, \"prop-name\": \"url\" },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\"label\", { staticClass: \"custom-control custom-checkbox\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.blockForm.is_draft,\n                      expression: \"blockForm.is_draft\",\n                    },\n                  ],\n                  staticClass: \"custom-control-input\",\n                  attrs: { type: \"checkbox\", value: \"1\" },\n                  domProps: {\n                    checked: Array.isArray(_vm.blockForm.is_draft)\n                      ? _vm._i(_vm.blockForm.is_draft, \"1\") > -1\n                      : _vm.blockForm.is_draft,\n                  },\n                  on: {\n                    change: function ($event) {\n                      var $$a = _vm.blockForm.is_draft,\n                        $$el = $event.target,\n                        $$c = $$el.checked ? true : false\n                      if (Array.isArray($$a)) {\n                        var $$v = \"1\",\n                          $$i = _vm._i($$a, $$v)\n                        if ($$el.checked) {\n                          $$i < 0 &&\n                            _vm.$set(\n                              _vm.blockForm,\n                              \"is_draft\",\n                              $$a.concat([$$v])\n                            )\n                        } else {\n                          $$i > -1 &&\n                            _vm.$set(\n                              _vm.blockForm,\n                              \"is_draft\",\n                              $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                            )\n                        }\n                      } else {\n                        _vm.$set(_vm.blockForm, \"is_draft\", $$c)\n                      }\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.block_is_draft\"))),\n                ]),\n              ]),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.block_body\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"4\",\n                    name: \"body\",\n                    placeholder: _vm.trans(\"frontend.block_body\"),\n                  },\n                  model: {\n                    value: _vm.blockForm.body,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.blockForm, \"body\", $$v)\n                    },\n                    expression: \"blockForm.body\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.blockForm, \"prop-name\": \"body\" },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"upload-image\", {\n                  attrs: {\n                    id: \"block_image\",\n                    \"button-text\": _vm.trans(\"frontend.choose_featured_image\"),\n                    \"upload-path\": \"/frontend/block/featured/image\",\n                    \"remove-path\": \"/frontend/block/featured/image\",\n                    \"image-source\": _vm.blockForm.featured_image,\n                  },\n                  on: {\n                    uploaded: _vm.updateImage,\n                    removed: function ($event) {\n                      _vm.blockForm.featured_image = \"\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/frontend/block\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.uuid\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=76a33b18&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('76a33b18')) {\n      api.createRecord('76a33b18', component.options)\n    } else {\n      api.reload('76a33b18', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=76a33b18&\", function () {\n      api.rerender('76a33b18', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/frontend/block/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=76a33b18&\""],"mappings":";;;;;;;;;;AA4DA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACvKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;ACnVA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
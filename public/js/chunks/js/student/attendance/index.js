(self.webpackChunkInstiKit=self.webpackChunkInstiKit||[]).push([[2216],{62703:(t,e,n)=>{"use strict";n.d(e,{Z:()=>o});var a=n(94015),s=n.n(a),d=n(23645),i=n.n(d)()(s());i.push([t.id,".disabled{background-color:#f1f2f3}.current{font-size:120%;font-weight:500}.attendance-table tr th.date-cell{max-width:20px;min-width:20px;text-align:center}.attendance-table tr td span.marking-cell{display:block;height:100%;text-align:center;width:100%}","",{version:3,sources:["webpack://./resources/js/views/student/attendance/index.vue"],names:[],mappings:"AA+aA,UACA,wBACA,CACA,SAEA,cAAA,CADA,eAEA,CACA,kCAGA,cAAA,CADA,cAAA,CADA,iBAGA,CACA,0CACA,aAAA,CAEA,WAAA,CACA,iBAAA,CAFA,UAGA",sourcesContent:['<template>\n    <div>\n        <div class="page-titles">\n            <div class="row">\n                <div class="col-12 col-sm-6">\n            \t\t<h3 class="text-themecolor">{{trans(\'student.attendance\')}}</h3>\n            \t</div>\n                <div class="col-12 col-sm-6">\n                    <div class="action-buttons pull-right">\n                        <button class="btn btn-info btn-sm" v-if="attendanceForm.date_of_attendance" @click="$router.push(\'/student/attendance/absentee\')" v-tooltip="trans(\'student.absentee\')"><i class="fas fa-user-minus"></i> <span class="d-none d-sm-inline">{{trans(\'student.absentee\')}}</span></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="container-fluid">\n        \t<div class="card">\n        \t\t<div class="card-body p-4">\n\t\t\t\t    <form @submit.prevent="submit" @keydown="attendanceForm.errors.clear($event.target.name)">\n\t\t\t\t        <div class="row">\n\t\t\t\t            <div class="col-12 col-sm-3">\n\t\t\t\t                <div class="form-group">\n\t\t\t\t                    <label for="">{{trans(\'academic.batch\')}}</label>\n\t\t\t\t                    <v-select :disabled="disable_filter" label="name" v-model="selected_batch" group-values="batches" group-label="course_group" :group-select="false" name="batch_id" id="batch_id" :options="batches" :placeholder="trans(\'academic.select_batch\')" @select="onBatchSelect" @close="attendanceForm.errors.clear(\'batch_id\')" @remove="onBatchRemove">\n\t\t\t\t                        <div class="multiselect__option" slot="afterList" v-if="!batches.length">\n\t\t\t\t                            {{trans(\'general.no_option_found\')}}\n\t\t\t\t                        </div>\n\t\t\t\t                    </v-select>\n\t\t\t\t                    <show-error :form-name="attendanceForm" prop-name="batch_id"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t                        <div class="col-12 col-sm-3">\n\t                            <div class="form-group">\n\t                                <label for="">{{trans(\'student.attendance_method\')}}</label>\n\t                                <select :disabled="disable_filter" v-model="attendanceForm.attendance_method" class="custom-select col-12" name="attendance_method">\n\t                                  <option value="" selected>{{trans(\'general.select_one\')}}</option>\n\t                                  <option v-for="option in attendance_methods" v-bind:value="option.value">\n\t                                    {{ option.text }}\n\t                                  </option>\n\t                                </select>\n\t                                <show-error :form-name="attendanceForm" prop-name="attendance_method"></show-error>\n\t                            </div>\n\t                        </div>\n\t                        <div class="col-12 col-sm-3" v-if="attendanceForm.attendance_method == \'more_than_once\'">\n\t                            <div class="form-group">\n\t                                <label for="">{{trans(\'student.attendance_session\')}}</label>\n\t                                <select :disabled="disable_filter" v-model="attendanceForm.session" class="custom-select col-12" name="session">\n\t                                  <option value="" selected>{{trans(\'general.select_one\')}}</option>\n\t                                  <option v-for="option in attendance_method_more_than_once_types" v-bind:value="option.value">\n\t                                    {{ option.text }}\n\t                                  </option>\n\t                                </select>\n\t                                <show-error :form-name="attendanceForm" prop-name="session"></show-error>\n\t                            </div>\n\t                        </div>\n\t\t\t                <div class="col-12 col-sm-3" v-if="attendanceForm.attendance_method == \'subject_wise\'">\n\t\t\t                    <div class="form-group">\n\t\t\t                        <label for="">{{trans(\'academic.subject\')}} </label>\n\t                                <select :disabled="disable_filter" v-model="attendanceForm.subject_id" class="custom-select col-12" name="subject_id">\n\t                                  <option value="" selected>{{trans(\'general.select_one\')}}</option>\n\t                                  <option v-for="option in subjects" v-bind:value="option.id">\n\t                                    {{ option.name }}\n\t                                  </option>\n\t                                </select>\n\t\t\t                        <show-error :form-name="attendanceForm" prop-name="subject_id"></show-error>\n\t\t\t                    </div>\n\t\t\t                </div>\n\t\t\t\t            <div class="col-12 col-sm-3" v-if="attendanceForm.batch_id">\n\t\t\t\t                <div class="form-group">\n\t\t\t\t                    <label for="">{{trans(\'student.date_of_attendance\')}}</label>\n\t\t\t\t                    <datepicker :disabled="disable_filter" v-model="attendanceForm.date_of_attendance" :bootstrapStyling="true" @selected="dateSelected" :disabledDates="disabled" :placeholder="trans(\'student.date_of_attendance\')"></datepicker>\n\t\t\t\t                    <show-error :form-name="attendanceForm" prop-name="date_of_attendance"></show-error>\n\t\t\t\t                </div>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\t\t\t            <div class="text-right">\n\t\t\t                <button type="button" v-if="! disable_filter" @click="getStudent" class="btn btn-info waves-effect waves-light">{{trans(\'general.proceed\')}}</button>\n                            <button type="button" v-else @click="resetFilter" class="btn btn-danger m-r-10">{{trans(\'general.reset\')}}</button>\n\t\t\t            </div>\n\n\t\t\t\t        <div class="row" v-if="student_data.length">\n\t\t\t\t            <div class="col-12">\n\t\t\t\t            \t<div class="table-responsive font-90pc p-2">\n\t\t\t\t            \t\t<table class="table table-sm table-bordered attendance-table">\n\t\t\t\t            \t\t\t<thead>\n\t\t\t\t            \t\t\t\t<tr>\n\t\t\t\t            \t\t\t\t\t<th>#</th>\n\t\t\t\t            \t\t\t\t\t<th>{{trans(\'student.name\')}}</th>\n\t\t\t\t            \t\t\t\t\t<th :class="[\'date-cell\']" v-for="header_date in header">{{header_date}}</th>\n\t\t\t\t            \t\t\t\t\t<th></th>\n\t\t\t\t            \t\t\t\t</tr>\t\n\t\t\t\t            \t\t\t</thead>\n\t\t\t\t            \t\t\t<tbody>\n\t\t\t\t            \t\t\t\t<tr v-for="student in student_data" v-if="student.sno">\n\t\t\t\t            \t\t\t\t\t<td>{{student.sno}}</td>\n\t\t\t\t            \t\t\t\t\t<td style="font-size:120%;">{{student.name}}</td>\n\t\t\t\t            \t\t\t\t\t<td :class="[(attendance_record.label == \'holiday\' || attendance_record.label == \'unavailable\') ? \'disabled\' : \'\']" v-for="(attendance_record,index) in student.attendances">\n\t\t\t\t            \t\t\t\t\t\t<span class="marking-cell">\n\t\t\t\t            \t\t\t\t\t\t\t<span v-if="attendance_record.label == \'unavailable\'"></span>\n\t\t\t\t            \t\t\t\t\t\t\t<span v-else-if="attendance_record.label == \'holiday\'" v-tooltip="attendance_record.description">\n\t\t\t\t            \t\t\t\t\t\t\t\t<i class="fas fa-hospital-symbol"></i>\n\t\t\t\t            \t\t\t\t\t\t\t</span>\n\t\t\t\t\t            \t\t\t\t\t\t<span :class="[\'marking-cell\', isEditable ? \'pointer\' : \'\']" v-else-if="currentDate(index)" @click="toggleAttendance(student, index)">\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-check text-success" v-if="attendance_record.label == \'present\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-history text-info" v-if="attendance_record.label == \'late\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-coffee text-warning" v-if="attendance_record.label == \'half_day\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-times text-danger" v-if="attendance_record.label == \'unmarked\' || attendance_record.label == \'absent\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t</span>\n\t\t\t\t\t            \t\t\t\t\t\t<span class="marking-cell" v-else>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-check text-success" v-if="attendance_record.label == \'present\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-history text-info" v-if="attendance_record.label == \'late\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-coffee text-warning" v-if="attendance_record.label == \'half_day\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class="fas fa-times text-danger" v-if="attendance_record.label == \'absent\'"></i>\n\t\t\t\t\t            \t\t\t\t\t\t</span>\n\t\t\t\t            \t\t\t\t\t\t</span>\n\t\t\t\t            \t\t\t\t\t</td>\n\t\t\t\t            \t\t\t\t\t<td>{{student.monthly_count}}</td>\n\t\t\t\t            \t\t\t\t</tr>\n\t\t\t\t            \t\t\t\t<tr v-else>\n\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th style="font-size:120%;">{{student.name}}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th :class="[\'date-cell\']" v-for="attendance_record in student.attendances">{{attendance_record.count}}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\n\t\t\t\t            \t\t\t\t</tr>\n\t\t\t\t            \t\t\t</tbody>\n\t\t\t\t            \t\t</table>\n\t\t\t\t            \t</div>\n\t\t\t\t            </div>\n\t\t\t\t        </div>\n\n\t\t\t\t        <div class="row mt-2" v-if="!student_data.length && disable_filter">\n\t\t\t\t\t\t\t<div class="col-12">\n\t\t\t\t\t\t\t\t<p class="alert alert-danger">{{trans(\'general.no_data_found\', {data: trans(\'student.student\')})}}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t        </div>\n\t\t\t\t        <div class="form-group" v-if="student_data.length && isEditable">\n\t\t\t\t        \t<button type="submit" class="btn btn-success pull-right">{{trans(\'general.save\')}}</button>\n\t\t\t\t        \t<button type="button" class="btn btn-info pull-right m-r-10" v-if="isEditable && attendance && ! attendance.is_default" key="make-attendance-default" v-tooltip="trans(\'student.attendance_default_description\')" v-confirm="{ok: confirmDefault()}">{{trans(\'student.attendance_default\')}}</button>\n\t\t\t\t        \t<button type="button" class="btn btn-danger pull-right m-r-10" v-if="isEditable && isDeletable" key="delete-attendance" v-confirm="{ok: confirmDelete()}">{{trans(\'general.delete\')}}</button>\n\t\t\t\t        \t<button type="button" @click="markAllPresent" class="btn btn-info btn-sm">{{trans(\'student.attendance_mark_all_present\')}}</button>\n\t\t\t\t        \t<button type="button" @click="markAllAbsent" class="btn btn-info btn-sm">{{trans(\'student.attendance_mark_all_absent\')}}</button>\n\t\t\t\t        </div>\n\n\t\t\t\t        <div class="row mt-2" v-if="student_data.length">\n\t\t\t\t\t\t\t<div class="col-12">\n\t\t\t\t\t\t\t\t<span class="mr-2"><i class="fas fa-check text-success"></i> {{trans(\'student.attendance_present\')}}</span>\n\t\t\t\t\t\t\t\t<span class="mr-2"><i class="fas fa-history text-info"></i> {{trans(\'student.attendance_late\')}}</span>\n\t\t\t\t\t\t\t\t<span class="mr-2"><i class="fas fa-coffee text-warning"></i> {{trans(\'student.attendance_half_day\')}}</span>\n\t\t\t\t\t\t\t\t<span class=""><i class="fas fa-times text-danger"></i> {{trans(\'student.attendance_absent\')}}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t        </div>\n\t\t\t\t    </form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tcomponents: {},\n\t\tdata(){\n\t\t\treturn {\n\t\t\t\tattendanceForm: new Form({\n\t\t\t\t\tbatch_id: \'\',\n\t\t\t\t\tattendance_method: \'\',\n\t\t\t\t\tsubject_id: \'\',\n\t\t\t\t\tsession: \'\',\n\t\t\t\t\tdate_of_attendance: \'\',\n\t\t\t\t\tstudents: []\n\t\t\t\t},false),\n                disable_filter: false,\n\t\t\t\tprevious_date: \'\',\n\t\t\t\tholidays: [],\n\t\t\t\tall_holidays: [],\n\t\t\t\tattendance: {},\n\t\t\t\tattendances: [],\n\t\t\t\tdisabled: {\n\t\t\t\t\tdates:[]\n\t\t\t\t},\n\t\t\t\tall_disabled: {\n\t\t\t\t\tdates:[]\n\t\t\t\t},\n\t\t\t\theader: [],\n\t\t\t\tstudent_data: [],\n\t\t\t\tdays: 0,\n\t\t\t\tsubjects: [],\n\t\t\t\tbatches: [],\n\t\t\t\tselected_batch: null,\n\t\t\t\tselected_batch_detail: {},\n\t\t\t\tstudent_records: [],\n\t\t\t\tbatch_with_subjects: [],\n\t\t\t\tattendance_methods: [],\n\t\t\t\tattendance_method_more_than_once_types: [],\n\t\t\t\tisEditable: false,\n\t\t\t\tisDeletable: false\n\t\t\t}\n\t\t},\n\t\tmounted(){\n\t\t\tif(!helper.hasPermission(\'list-student-attendance\')){\n                helper.notAccessibleMsg();\n                this.$router.push(\'/dashboard\');\n\t\t\t}\n\n\t\t\tthis.attendanceForm.date_of_attendance = helper.getConfig(\'current_date\');\n\t\t\tthis.previous_date = this.attendanceForm.date_of_attendance;\n\t\t\tthis.getPreRequisite();\n\t\t},\n\t\tmethods: {\n\t\t\thasPermission(permission){\n\t\t\t\treturn helper.hasPermission(permission);\n\t\t\t},\n            resetFilter(){\n            \tthis.student_data = [];\n                this.disable_filter = false;\n            },\n\t\t\tgetPreRequisite(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\taxios.get(\'/api/student/attendance/pre-requisite\')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.attendance_methods = response.attendance_methods;\n\t\t\t\t\t\tthis.attendance_method_more_than_once_types = response.attendance_method_more_than_once_types;\n\t\t\t\t\t\tthis.batches = response.batches;\n\t\t\t\t\t\tthis.batch_with_subjects = response.batch_with_subjects;\n\t\t\t\t\t\tthis.holidays = response.holidays;\n\t\t\t\t\t\tthis.all_holidays = response.holidays;\n\t\t                response.holidays.forEach(holiday => {\n\t\t                    this.disabled.dates.push(new Date(holiday.date));\n\t\t                    this.all_disabled.dates.push(new Date(holiday.date));\n\t\t                });\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tdateSelected(){\n\t\t\t},\n\t\t\tgetStudent(){\n\t\t\t\tthis.disable_filter = true;\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\taxios.post(\'/api/student/attendance/fetch\', {\n\t\t\t\t\tbatch_id: this.attendanceForm.batch_id, \n\t\t\t\t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\n\t\t\t\t\tsubject_id: this.attendanceForm.subject_id,\n\t\t\t\t\tsession: this.attendanceForm.session,\n\t\t\t\t\tattendance_method: this.attendanceForm.attendance_method\n\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.student_records = response.student_records;\n\t\t\t\t\t\tthis.selected_batch_detail = response.batch;\n\t\t\t\t\t\tthis.attendance = response.attendance;\n\t\t\t\t\t\tthis.attendances = response.attendances;\n\t\t\t\t\t\tthis.header = response.header;\n\t\t\t\t\t\tthis.student_data = response.student_data;\n\t\t\t\t\t\tthis.isEditable = response.is_editable;\n\t\t\t\t\t\tthis.isDeletable = response.is_deletable;\n\t\t\t\t\t\tthis.attendanceForm.students = response.current_date_attendance;\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tthis.disable_filter = false;\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tonBatchSelect(selectedOption){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.attendanceForm.batch_id = selectedOption.id;\n                let batch = this.batch_with_subjects.find(o => o.id == this.attendanceForm.batch_id);\n\n                if (typeof batch == \'undefined\') {\n                \treturn;\n                }\n\n                this.holidays = this.all_holidays;\n                this.disabled.dates = this.all_disabled.dates;\n                let holidays_except = batch.holidays_except && Array.isArray(batch.holidays_except) ? batch.holidays_except : [];\n\n                holidays_except.forEach(holiday_except => {\n\t                this.disabled.dates = this.disabled.dates.filter(o => helper.toDate(o) != helper.toDate(holiday_except));\n\t                this.holidays = this.holidays.filter(o => helper.toDate(o.date) != helper.toDate(holiday_except));\n                })\n\n\t\t\t\tthis.attendanceForm.attendance_method = batch.options && batch.options.default_attendance_method ? batch.options.default_attendance_method : \'once\';\n\n\t\t\t\tthis.attendanceForm.subject_id = \'\';\n                this.subjects = [];\n\n                batch.subjects.forEach(subject => {\n                \tthis.subjects.push({\n                \t\tid: subject.id,\n                \t\tname: subject.name+\' (\'+subject.code+\')\'\n                \t});\n                });\n\n\t\t\t\tloader.hide();\n\t\t\t},\n\t\t\tonBatchRemove(removedOption){\n\t\t\t\tthis.attendanceForm.batch_id = \'\';\n\t\t\t\tthis.student_data = [];\n\t\t\t\tthis.student_records = [];\n\t\t\t},\n\t\t\tcurrentDate(date){\n\t\t\t\tif (date == moment(this.attendanceForm.date_of_attendance).format(\'D\'))\n\t\t\t\t\treturn true;\n\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttoggleAttendance(student, day){\n\t\t\t\tif (! this.isEditable) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet options = [\'late\'];\n\t\t\t\tif (this.attendanceForm.attendance_method == \'once\') {\n\t\t\t\t\toptions.push(\'half_day\');\n\t\t\t\t}\n\t\t\t\toptions.push(\'present\');\n\t\t\t\toptions.push(\'absent\');\n\t\t\t\tlet record_detail = this.student_data.find(o => o.id == student.id);\n\t\t\t\tlet record = record_detail.attendances[day];\n\t\t\t\tlet index = options.indexOf(record.label);\n\t\t\t\tindex = ++index%options.length; \n\t\t\t\trecord.label = options[index];\n\n\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\n\t\t\t\tdata.attendance = options[index];\n\t\t\t},\n\t\t\tmarkAllPresent(){\n\t\t\t\tlet day = moment(this.attendanceForm.date_of_attendance).format(\'D\');\n\t\t\t\tthis.student_data.forEach(student => {\n\t\t\t\t\tif (student.sno) {\n\t\t\t\t\t\tlet record = student.attendances[day];\n\t\t\t\t\t\tif (record.label != \'unavailable\') {\n\t\t\t\t\t\t\trecord.label = \'present\';\n\n\t\t\t\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\n\t\t\t\t\t\t\tdata.attendance = \'present\';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tmarkAllAbsent(){\n\t\t\t\tlet day = moment(this.attendanceForm.date_of_attendance).format(\'D\');\n\t\t\t\tthis.student_data.forEach(student => {\n\t\t\t\t\tif (student.sno) {\n\t\t\t\t\t\tlet record = student.attendances[day];\n\t\t\t\t\t\tif (record.label != \'unavailable\') {\n\t\t\t\t\t\t\trecord.label = \'absent\';\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\n\t\t\t\t\t\t\tdata.attendance = \'absent\';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\t\t\tsubmit(){\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.attendanceForm.post(\'/api/student/attendance\')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.getStudent();\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t})\n\t\t\t},\n            confirmDelete(){\n                return dialog => this.deleteAttendance();\n            },\n            deleteAttendance(){\n                let loader = this.$loading.show();\n                axios.post(\'/api/student/attendance/delete\', {\n                \t\tbatch_id: this.attendanceForm.batch_id,\n                \t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\n                \t\tsubject_id: this.attendanceForm.subject_id,\n                \t\tsession: this.attendanceForm.session\n                \t})\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getStudent();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            confirmDefault(){\n                return dialog => this.defaultAttendance();\n            },\n            defaultAttendance(){\n                let loader = this.$loading.show();\n                axios.post(\'/api/student/attendance/default\', {\n                \t\tbatch_id: this.attendanceForm.batch_id,\n                \t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\n                \t\tsubject_id: this.attendanceForm.subject_id,\n                \t\tsession: this.attendanceForm.session\n                \t})\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getStudent();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            }\n\t\t},\n\t\tcomputed: {\n\t\t},\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n        \t\'attendanceForm.date_of_attendance\': function(val){\n\t\t\t\tthis.days = moment(val, "YYYY-MM").daysInMonth();\n\t\t\t\tthis.previous_date = helper.toDate(val);\n        \t}\n        }\n\t}\n<\/script>\n\n<style>\n\t.disabled{\n\t\tbackground-color:#f1f2f3;\n\t}\n\t.current {\n\t\tfont-weight: 500;\n\t\tfont-size: 120%;\n\t}\n\t.attendance-table tr th.date-cell{\n\t\ttext-align: center;\n\t\tmin-width: 20px;\n\t\tmax-width: 20px;\n\t}\n\t.attendance-table tr td span.marking-cell {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\ttext-align: center;\n\t}\n</style>'],sourceRoot:""}]);const o=i},68051:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>c});const a={components:{},data:function(){return{attendanceForm:new Form({batch_id:"",attendance_method:"",subject_id:"",session:"",date_of_attendance:"",students:[]},!1),disable_filter:!1,previous_date:"",holidays:[],all_holidays:[],attendance:{},attendances:[],disabled:{dates:[]},all_disabled:{dates:[]},header:[],student_data:[],days:0,subjects:[],batches:[],selected_batch:null,selected_batch_detail:{},student_records:[],batch_with_subjects:[],attendance_methods:[],attendance_method_more_than_once_types:[],isEditable:!1,isDeletable:!1}},mounted:function(){helper.hasPermission("list-student-attendance")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.attendanceForm.date_of_attendance=helper.getConfig("current_date"),this.previous_date=this.attendanceForm.date_of_attendance,this.getPreRequisite()},methods:{hasPermission:function(t){return helper.hasPermission(t)},resetFilter:function(){this.student_data=[],this.disable_filter=!1},getPreRequisite:function(){var t=this,e=this.$loading.show();axios.get("/api/student/attendance/pre-requisite").then((function(n){t.attendance_methods=n.attendance_methods,t.attendance_method_more_than_once_types=n.attendance_method_more_than_once_types,t.batches=n.batches,t.batch_with_subjects=n.batch_with_subjects,t.holidays=n.holidays,t.all_holidays=n.holidays,n.holidays.forEach((function(e){t.disabled.dates.push(new Date(e.date)),t.all_disabled.dates.push(new Date(e.date))})),e.hide()})).catch((function(t){e.hide(),helper.showErrorMsg(t)}))},dateSelected:function(){},getStudent:function(){var t=this;this.disable_filter=!0;var e=this.$loading.show();axios.post("/api/student/attendance/fetch",{batch_id:this.attendanceForm.batch_id,date_of_attendance:this.attendanceForm.date_of_attendance,subject_id:this.attendanceForm.subject_id,session:this.attendanceForm.session,attendance_method:this.attendanceForm.attendance_method}).then((function(n){t.student_records=n.student_records,t.selected_batch_detail=n.batch,t.attendance=n.attendance,t.attendances=n.attendances,t.header=n.header,t.student_data=n.student_data,t.isEditable=n.is_editable,t.isDeletable=n.is_deletable,t.attendanceForm.students=n.current_date_attendance,e.hide()})).catch((function(n){t.disable_filter=!1,e.hide(),helper.showErrorMsg(n)}))},onBatchSelect:function(t){var e=this,n=this.$loading.show();this.attendanceForm.batch_id=t.id;var a=this.batch_with_subjects.find((function(t){return t.id==e.attendanceForm.batch_id}));void 0!==a&&(this.holidays=this.all_holidays,this.disabled.dates=this.all_disabled.dates,(a.holidays_except&&Array.isArray(a.holidays_except)?a.holidays_except:[]).forEach((function(t){e.disabled.dates=e.disabled.dates.filter((function(e){return helper.toDate(e)!=helper.toDate(t)})),e.holidays=e.holidays.filter((function(e){return helper.toDate(e.date)!=helper.toDate(t)}))})),this.attendanceForm.attendance_method=a.options&&a.options.default_attendance_method?a.options.default_attendance_method:"once",this.attendanceForm.subject_id="",this.subjects=[],a.subjects.forEach((function(t){e.subjects.push({id:t.id,name:t.name+" ("+t.code+")"})})),n.hide())},onBatchRemove:function(t){this.attendanceForm.batch_id="",this.student_data=[],this.student_records=[]},currentDate:function(t){return t==moment(this.attendanceForm.date_of_attendance).format("D")},toggleAttendance:function(t,e){if(this.isEditable){var n=["late"];"once"==this.attendanceForm.attendance_method&&n.push("half_day"),n.push("present"),n.push("absent");var a=this.student_data.find((function(e){return e.id==t.id})).attendances[e],s=n.indexOf(a.label);s=++s%n.length,a.label=n[s],this.attendanceForm.students.find((function(e){return e.id==t.id})).attendance=n[s]}},markAllPresent:function(){var t=this,e=moment(this.attendanceForm.date_of_attendance).format("D");this.student_data.forEach((function(n){if(n.sno){var a=n.attendances[e];if("unavailable"!=a.label)a.label="present",t.attendanceForm.students.find((function(t){return t.id==n.id})).attendance="present"}}))},markAllAbsent:function(){var t=this,e=moment(this.attendanceForm.date_of_attendance).format("D");this.student_data.forEach((function(n){if(n.sno){var a=n.attendances[e];if("unavailable"!=a.label)a.label="absent",t.attendanceForm.students.find((function(t){return t.id==n.id})).attendance="absent"}}))},submit:function(){var t=this,e=this.$loading.show();this.attendanceForm.post("/api/student/attendance").then((function(n){t.getStudent(),toastr.success(n.message),e.hide()})).catch((function(t){e.hide(),helper.showErrorMsg(t)}))},confirmDelete:function(){var t=this;return function(e){return t.deleteAttendance()}},deleteAttendance:function(){var t=this,e=this.$loading.show();axios.post("/api/student/attendance/delete",{batch_id:this.attendanceForm.batch_id,date_of_attendance:this.attendanceForm.date_of_attendance,subject_id:this.attendanceForm.subject_id,session:this.attendanceForm.session}).then((function(n){toastr.success(n.message),t.getStudent(),e.hide()})).catch((function(t){e.hide(),helper.showErrorMsg(t)}))},confirmDefault:function(){var t=this;return function(e){return t.defaultAttendance()}},defaultAttendance:function(){var t=this,e=this.$loading.show();axios.post("/api/student/attendance/default",{batch_id:this.attendanceForm.batch_id,date_of_attendance:this.attendanceForm.date_of_attendance,subject_id:this.attendanceForm.subject_id,session:this.attendanceForm.session}).then((function(n){toastr.success(n.message),t.getStudent(),e.hide()})).catch((function(t){e.hide(),helper.showErrorMsg(t)}))}},computed:{},filters:{moment:function(t){return helper.formatDate(t)},momentDateTime:function(t){return helper.formatDateTime(t)}},watch:{"attendanceForm.date_of_attendance":function(t){this.days=moment(t,"YYYY-MM").daysInMonth(),this.previous_date=helper.toDate(t)}}};var s=n(93379),d=n.n(s),i=n(62703),o={insert:"head",singleton:!1};d()(i.Z,o);i.Z.locals;const c=(0,n(51900).Z)(a,(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",[n("div",{staticClass:"page-titles"},[n("div",{staticClass:"row"},[n("div",{staticClass:"col-12 col-sm-6"},[n("h3",{staticClass:"text-themecolor"},[t._v(t._s(t.trans("student.attendance")))])]),t._v(" "),n("div",{staticClass:"col-12 col-sm-6"},[n("div",{staticClass:"action-buttons pull-right"},[t.attendanceForm.date_of_attendance?n("button",{directives:[{name:"tooltip",rawName:"v-tooltip",value:t.trans("student.absentee"),expression:"trans('student.absentee')"}],staticClass:"btn btn-info btn-sm",on:{click:function(e){return t.$router.push("/student/attendance/absentee")}}},[n("i",{staticClass:"fas fa-user-minus"}),t._v(" "),n("span",{staticClass:"d-none d-sm-inline"},[t._v(t._s(t.trans("student.absentee")))])]):t._e()])])])]),t._v(" "),n("div",{staticClass:"container-fluid"},[n("div",{staticClass:"card"},[n("div",{staticClass:"card-body p-4"},[n("form",{on:{submit:function(e){return e.preventDefault(),t.submit.apply(null,arguments)},keydown:function(e){return t.attendanceForm.errors.clear(e.target.name)}}},[n("div",{staticClass:"row"},[n("div",{staticClass:"col-12 col-sm-3"},[n("div",{staticClass:"form-group"},[n("label",{attrs:{for:""}},[t._v(t._s(t.trans("academic.batch")))]),t._v(" "),n("v-select",{attrs:{disabled:t.disable_filter,label:"name","group-values":"batches","group-label":"course_group","group-select":!1,name:"batch_id",id:"batch_id",options:t.batches,placeholder:t.trans("academic.select_batch")},on:{select:t.onBatchSelect,close:function(e){return t.attendanceForm.errors.clear("batch_id")},remove:t.onBatchRemove},model:{value:t.selected_batch,callback:function(e){t.selected_batch=e},expression:"selected_batch"}},[t.batches.length?t._e():n("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[t._v("\n\t\t\t\t                            "+t._s(t.trans("general.no_option_found"))+"\n\t\t\t\t                        ")])]),t._v(" "),n("show-error",{attrs:{"form-name":t.attendanceForm,"prop-name":"batch_id"}})],1)]),t._v(" "),n("div",{staticClass:"col-12 col-sm-3"},[n("div",{staticClass:"form-group"},[n("label",{attrs:{for:""}},[t._v(t._s(t.trans("student.attendance_method")))]),t._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:t.attendanceForm.attendance_method,expression:"attendanceForm.attendance_method"}],staticClass:"custom-select col-12",attrs:{disabled:t.disable_filter,name:"attendance_method"},on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.$set(t.attendanceForm,"attendance_method",e.target.multiple?n:n[0])}}},[n("option",{attrs:{value:"",selected:""}},[t._v(t._s(t.trans("general.select_one")))]),t._v(" "),t._l(t.attendance_methods,(function(e){return n("option",{domProps:{value:e.value}},[t._v("\n\t                                    "+t._s(e.text)+"\n\t                                  ")])}))],2),t._v(" "),n("show-error",{attrs:{"form-name":t.attendanceForm,"prop-name":"attendance_method"}})],1)]),t._v(" "),"more_than_once"==t.attendanceForm.attendance_method?n("div",{staticClass:"col-12 col-sm-3"},[n("div",{staticClass:"form-group"},[n("label",{attrs:{for:""}},[t._v(t._s(t.trans("student.attendance_session")))]),t._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:t.attendanceForm.session,expression:"attendanceForm.session"}],staticClass:"custom-select col-12",attrs:{disabled:t.disable_filter,name:"session"},on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.$set(t.attendanceForm,"session",e.target.multiple?n:n[0])}}},[n("option",{attrs:{value:"",selected:""}},[t._v(t._s(t.trans("general.select_one")))]),t._v(" "),t._l(t.attendance_method_more_than_once_types,(function(e){return n("option",{domProps:{value:e.value}},[t._v("\n\t                                    "+t._s(e.text)+"\n\t                                  ")])}))],2),t._v(" "),n("show-error",{attrs:{"form-name":t.attendanceForm,"prop-name":"session"}})],1)]):t._e(),t._v(" "),"subject_wise"==t.attendanceForm.attendance_method?n("div",{staticClass:"col-12 col-sm-3"},[n("div",{staticClass:"form-group"},[n("label",{attrs:{for:""}},[t._v(t._s(t.trans("academic.subject"))+" ")]),t._v(" "),n("select",{directives:[{name:"model",rawName:"v-model",value:t.attendanceForm.subject_id,expression:"attendanceForm.subject_id"}],staticClass:"custom-select col-12",attrs:{disabled:t.disable_filter,name:"subject_id"},on:{change:function(e){var n=Array.prototype.filter.call(e.target.options,(function(t){return t.selected})).map((function(t){return"_value"in t?t._value:t.value}));t.$set(t.attendanceForm,"subject_id",e.target.multiple?n:n[0])}}},[n("option",{attrs:{value:"",selected:""}},[t._v(t._s(t.trans("general.select_one")))]),t._v(" "),t._l(t.subjects,(function(e){return n("option",{domProps:{value:e.id}},[t._v("\n\t                                    "+t._s(e.name)+"\n\t                                  ")])}))],2),t._v(" "),n("show-error",{attrs:{"form-name":t.attendanceForm,"prop-name":"subject_id"}})],1)]):t._e(),t._v(" "),t.attendanceForm.batch_id?n("div",{staticClass:"col-12 col-sm-3"},[n("div",{staticClass:"form-group"},[n("label",{attrs:{for:""}},[t._v(t._s(t.trans("student.date_of_attendance")))]),t._v(" "),n("datepicker",{attrs:{disabled:t.disable_filter,bootstrapStyling:!0,disabledDates:t.disabled,placeholder:t.trans("student.date_of_attendance")},on:{selected:t.dateSelected},model:{value:t.attendanceForm.date_of_attendance,callback:function(e){t.$set(t.attendanceForm,"date_of_attendance",e)},expression:"attendanceForm.date_of_attendance"}}),t._v(" "),n("show-error",{attrs:{"form-name":t.attendanceForm,"prop-name":"date_of_attendance"}})],1)]):t._e()]),t._v(" "),n("div",{staticClass:"text-right"},[t.disable_filter?n("button",{staticClass:"btn btn-danger m-r-10",attrs:{type:"button"},on:{click:t.resetFilter}},[t._v(t._s(t.trans("general.reset")))]):n("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"button"},on:{click:t.getStudent}},[t._v(t._s(t.trans("general.proceed")))])]),t._v(" "),t.student_data.length?n("div",{staticClass:"row"},[n("div",{staticClass:"col-12"},[n("div",{staticClass:"table-responsive font-90pc p-2"},[n("table",{staticClass:"table table-sm table-bordered attendance-table"},[n("thead",[n("tr",[n("th",[t._v("#")]),t._v(" "),n("th",[t._v(t._s(t.trans("student.name")))]),t._v(" "),t._l(t.header,(function(e){return n("th",{class:["date-cell"]},[t._v(t._s(e))])})),t._v(" "),n("th")],2)]),t._v(" "),n("tbody",t._l(t.student_data,(function(e){return e.sno?n("tr",[n("td",[t._v(t._s(e.sno))]),t._v(" "),n("td",{staticStyle:{"font-size":"120%"}},[t._v(t._s(e.name))]),t._v(" "),t._l(e.attendances,(function(a,s){return n("td",{class:["holiday"==a.label||"unavailable"==a.label?"disabled":""]},[n("span",{staticClass:"marking-cell"},["unavailable"==a.label?n("span"):"holiday"==a.label?n("span",{directives:[{name:"tooltip",rawName:"v-tooltip",value:a.description,expression:"attendance_record.description"}]},[n("i",{staticClass:"fas fa-hospital-symbol"})]):t.currentDate(s)?n("span",{class:["marking-cell",t.isEditable?"pointer":""],on:{click:function(n){return t.toggleAttendance(e,s)}}},["present"==a.label?n("i",{staticClass:"fas fa-check text-success"}):t._e(),t._v(" "),"late"==a.label?n("i",{staticClass:"fas fa-history text-info"}):t._e(),t._v(" "),"half_day"==a.label?n("i",{staticClass:"fas fa-coffee text-warning"}):t._e(),t._v(" "),"unmarked"==a.label||"absent"==a.label?n("i",{staticClass:"fas fa-times text-danger"}):t._e()]):n("span",{staticClass:"marking-cell"},["present"==a.label?n("i",{staticClass:"fas fa-check text-success"}):t._e(),t._v(" "),"late"==a.label?n("i",{staticClass:"fas fa-history text-info"}):t._e(),t._v(" "),"half_day"==a.label?n("i",{staticClass:"fas fa-coffee text-warning"}):t._e(),t._v(" "),"absent"==a.label?n("i",{staticClass:"fas fa-times text-danger"}):t._e()])])])})),t._v(" "),n("td",[t._v(t._s(e.monthly_count))])],2):n("tr",[n("th"),t._v(" "),n("th",{staticStyle:{"font-size":"120%"}},[t._v(t._s(e.name))]),t._v(" "),t._l(e.attendances,(function(e){return n("th",{class:["date-cell"]},[t._v(t._s(e.count))])})),t._v(" "),n("th")],2)})),0)])])])]):t._e(),t._v(" "),!t.student_data.length&&t.disable_filter?n("div",{staticClass:"row mt-2"},[n("div",{staticClass:"col-12"},[n("p",{staticClass:"alert alert-danger"},[t._v(t._s(t.trans("general.no_data_found",{data:t.trans("student.student")})))])])]):t._e(),t._v(" "),t.student_data.length&&t.isEditable?n("div",{staticClass:"form-group"},[n("button",{staticClass:"btn btn-success pull-right",attrs:{type:"submit"}},[t._v(t._s(t.trans("general.save")))]),t._v(" "),t.isEditable&&t.attendance&&!t.attendance.is_default?n("button",{directives:[{name:"tooltip",rawName:"v-tooltip",value:t.trans("student.attendance_default_description"),expression:"trans('student.attendance_default_description')"},{name:"confirm",rawName:"v-confirm",value:{ok:t.confirmDefault()},expression:"{ok: confirmDefault()}"}],key:"make-attendance-default",staticClass:"btn btn-info pull-right m-r-10",attrs:{type:"button"}},[t._v(t._s(t.trans("student.attendance_default")))]):t._e(),t._v(" "),t.isEditable&&t.isDeletable?n("button",{directives:[{name:"confirm",rawName:"v-confirm",value:{ok:t.confirmDelete()},expression:"{ok: confirmDelete()}"}],key:"delete-attendance",staticClass:"btn btn-danger pull-right m-r-10",attrs:{type:"button"}},[t._v(t._s(t.trans("general.delete")))]):t._e(),t._v(" "),n("button",{staticClass:"btn btn-info btn-sm",attrs:{type:"button"},on:{click:t.markAllPresent}},[t._v(t._s(t.trans("student.attendance_mark_all_present")))]),t._v(" "),n("button",{staticClass:"btn btn-info btn-sm",attrs:{type:"button"},on:{click:t.markAllAbsent}},[t._v(t._s(t.trans("student.attendance_mark_all_absent")))])]):t._e(),t._v(" "),t.student_data.length?n("div",{staticClass:"row mt-2"},[n("div",{staticClass:"col-12"},[n("span",{staticClass:"mr-2"},[n("i",{staticClass:"fas fa-check text-success"}),t._v(" "+t._s(t.trans("student.attendance_present")))]),t._v(" "),n("span",{staticClass:"mr-2"},[n("i",{staticClass:"fas fa-history text-info"}),t._v(" "+t._s(t.trans("student.attendance_late")))]),t._v(" "),n("span",{staticClass:"mr-2"},[n("i",{staticClass:"fas fa-coffee text-warning"}),t._v(" "+t._s(t.trans("student.attendance_half_day")))]),t._v(" "),n("span",{},[n("i",{staticClass:"fas fa-times text-danger"}),t._v(" "+t._s(t.trans("student.attendance_absent")))])])]):t._e()])])])])])}),[],!1,null,null,null).exports}}]);
//# sourceMappingURL=index.js.map?id=99e6e4b6a1ac1b7ae1f9
{"version":3,"file":"js/finance/transaction/expense/edit~js/finance/transaction/expense/index.js?id=39dfff5d3ed385a1d152","sources":["webpack:///resources/js/views/finance/transaction/expense/form.vue","webpack:///./resources/js/views/finance/transaction/expense/form.vue","webpack:///./resources/js/views/finance/transaction/expense/form.vue?2aec","webpack:///./resources/js/views/finance/transaction/expense/form.vue?47c0","webpack:///./resources/js/views/finance/transaction/expense/form.vue?10cc"],"sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"expenseForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.transaction_category')}} </label> <button type=\"button\" class=\"btn btn-xs btn-info pull-right\" v-if=\"hasPermission('access-configuration')\" @click=\"showTransactionCategoryModal = true\">{{trans('general.add_new')}}</button>\n                        <v-select label=\"name\" v-model=\"selected_transaction_category\" name=\"transaction_category_id\" id=\"transaction_category_id\" :options=\"transaction_categories\" :placeholder=\"trans('finance.select_transaction_category')\" @select=\"onTransactionCategorySelect\" @close=\"expenseForm.errors.clear('transaction_category_id')\" @remove=\"expenseForm.transaction_category_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transaction_categories.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"transaction_category_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.account')}} </label> \n                        <v-select label=\"name\" v-model=\"selected_account\" name=\"account_id\" id=\"account_id\" :options=\"accounts\" :placeholder=\"trans('finance.select_account')\" @select=\"onAccountSelect\" @close=\"expenseForm.errors.clear('account_id')\" @remove=\"expenseForm.account_id = ''\" :disabled=\"uuid ? true : false\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!accounts.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"account_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.amount')}}</label>\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"amount\" :placeholder=\"trans('finance.amount')\" v-model=\"expenseForm.amount\" @input.native=\"expenseForm.errors.clear('amount')\"></currency-input>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"amount\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.date_of_expense')}}</label>\n                        <datepicker v-model=\"expenseForm.date_of_expense\" :bootstrapStyling=\"true\" @selected=\"expenseForm.errors.clear('date_of_expense')\" :placeholder=\"trans('finance.date_of_expense')\"></datepicker>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"date_of_expense\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.payment_method')}} </label> \n                        <v-select label=\"name\" v-model=\"selected_payment_method\" name=\"payment_method_id\" id=\"payment_method_id\" :options=\"payment_methods\" :placeholder=\"trans('finance.select_payment_method')\" @select=\"onPaymentMethodSelect\" @close=\"expenseForm.errors.clear('payment_method_id')\" @remove=\"expenseForm.payment_method_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payment_methods.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"payment_method_id\"></show-error>\n                    </div>\n                </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_number')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_number')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"expenseForm.instrument_number\" name=\"instrument_number\" :placeholder=\"trans('finance.instrument_number')\">\n\t                    <show-error :form-name=\"expenseForm\" prop-name=\"instrument_number\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_date')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_date')}}</label>\n\t                    <datepicker v-model=\"expenseForm.instrument_date\" :bootstrapStyling=\"true\" @selected=\"expenseForm.errors.clear('instrument_date')\" :placeholder=\"trans('finance.instrument_date')\"></datepicker>\n\t                    <show-error :form-name=\"expenseForm\" prop-name=\"instrument_date\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_bank_detail')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_bank_detail')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"expenseForm.instrument_bank_detail\" name=\"instrument_bank_detail\" :placeholder=\"trans('finance.instrument_bank_detail')\">\n\t                    <show-error :form-name=\"expenseForm\" prop-name=\"instrument_bank_detail\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_clearing_date')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_clearing_date')}}</label>\n\t                    <datepicker v-model=\"expenseForm.instrument_clearing_date\" :bootstrapStyling=\"true\" @selected=\"expenseForm.errors.clear('instrument_clearing_date')\" :placeholder=\"trans('finance.instrument_clearing_date')\"></datepicker>\n\t                    <show-error :form-name=\"expenseForm\" prop-name=\"instrument_clearing_date\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('reference_number')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.reference_number')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"expenseForm.reference_number\" name=\"reference_number\" :placeholder=\"trans('finance.reference_number')\">\n\t                    <show-error :form-name=\"expenseForm\" prop-name=\"reference_number\"></show-error>\n\t                </div>\n\t            </div>\n                <div class=\"col-12 col-sm-9\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.expense_description')}}</label>\n                        <autosize-textarea v-model=\"expenseForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('finance.expense_description')\"></autosize-textarea>\n                        <show-error :form-name=\"expenseForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"expenseForm.upload_token\" module=\"expense\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\n                    </div>\n                </div>\n\t        </div>\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/finance/transaction/expense\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n\n        <transition name=\"modal\" v-if=\"showTransactionCategoryModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('finance.add_new_transaction_category')}}\n                                <span class=\"float-right pointer\" @click=\"showTransactionCategoryModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <transaction-category-form @completed=\"getPreRequisite\" @cancel=\"showTransactionCategoryModal = false\"></transaction-category-form>\n                                <div class=\"clearfix\"></div>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n\n<script>\n    import transactionCategoryForm from '../../../configuration/finance/transaction/category/form'\n\n    export default {\n        components: {transactionCategoryForm},\n        data() {\n            return {\n                expenseForm: new Form({\n                    transaction_category_id: '',\n                    account_id: '',\n                    payment_method_id: '',\n                    instrument_number: '',\n                    instrument_date: '',\n                    instrument_clearing_date: '',\n                    instrument_bank_detail: '',\n                    reference_number: '',\n                    amount: '',\n                    date_of_expense: '',\n                    description: '',\n                    upload_token: ''\n                }),\n                transaction_categories: [],\n                selected_transaction_category: null,\n                accounts: [],\n                selected_account: null,\n                payment_methods: [],\n                selected_payment_method: null,\n                payment_method_details: [],\n                payment_method_detail: {},\n                module_id: '',\n                clearAttachment: true,\n                showTransactionCategoryModal: false,\n                default_currency: helper.getConfig('default_currency')\n            };\n        },\n        props: ['uuid'],\n        mounted() {\n            if(!helper.hasPermission('create-expense') && !helper.hasPermission('edit-expense')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            if(this.uuid)\n                this.get();\n            else\n                this.expenseForm.upload_token = this.$uuid.v4();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                this.showTransactionCategoryModal = false;\n                axios.get('/api/expense/pre-requisite')\n                    .then(response => {\n                        this.transaction_categories = response.transaction_categories;\n                        this.accounts = response.accounts;\n                        this.payment_methods = response.payment_methods;\n                        this.payment_method_details = response.payment_method_details;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.expenseForm.post('/api/expense')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.clearAttachment = !this.clearAttachment;\n                        this.expenseForm.upload_token = this.$uuid.v4();\n                        this.selected_transaction_category = null;\n                        this.selected_account = null;\n                        this.selected_payment_method = null;\n                        this.payment_method_detail = null;\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/expense/'+this.uuid)\n                    .then(response => {\n                        this.expenseForm.amount = this.formatNumber(response.expense.amount);\n                        this.expenseForm.date_of_expense = response.expense.date_of_expense;\n                        this.expenseForm.description = response.expense.description;\n                        this.expenseForm.transaction_category_id = response.expense.transaction_category_id;\n                        this.selected_transaction_category = response.expense.transaction_category_id ? {id: response.expense.transaction_category_id, name: response.expense.transaction_category.name} : null;\n                        this.expenseForm.account_id = response.expense.transaction.account_id;\n                        this.selected_account = response.expense.transaction.account_id ? {id: response.expense.transaction.account_id, name: response.expense.transaction.account.name} : null;\n                        this.expenseForm.payment_method_id = response.expense.transaction.payment_method_id;\n                        this.selected_payment_method = response.expense.transaction.payment_method_id ? {id: response.expense.transaction.payment_method_id, name: response.expense.transaction.payment_method.name} : null;\n                        this.expenseForm.instrument_number = response.expense.transaction.instrument_number;\n                        this.expenseForm.instrument_date = response.expense.transaction.instrument_date;\n                        this.expenseForm.instrument_clearing_date = response.expense.transaction.instrument_clearing_date;\n                        this.expenseForm.instrument_bank_detail = response.expense.transaction.instrument_bank_detail;\n                        this.expenseForm.reference_number = response.expense.transaction.reference_number;\n                        this.expenseForm.upload_token = response.expense.upload_token;\n                        this.module_id = response.expense.id;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/finance/transaction/expense');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.expenseForm.patch('/api/expense/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/finance/transaction/expense');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onTransactionCategorySelect(selectedOption){\n                this.expenseForm.transaction_category_id = selectedOption.id;\n            },\n            onAccountSelect(selectedOption){\n                this.expenseForm.account_id = selectedOption.id;\n            },\n            onPaymentMethodSelect(selectedOption){\n                this.expenseForm.payment_method_id = selectedOption.id;\n                this.payment_method_detail = this.payment_method_details.find(o => o.id == selectedOption.id);\n            },\n            formatCurrency(price){\n                return helper.formatCurrency(price);\n            },\n            formatNumber(number){\n                return helper.formatNumber(number, this.default_currency.decimal_place)\n            },\n            getPaymentMethodDetail(field){\n                return helper.getPaymentMethodDetail(this.payment_method_detail, field);\n            }\n        }\n    }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.proceed.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.expenseForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"finance.transaction_category\")) + \" \"\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.hasPermission(\"access-configuration\")\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-xs btn-info pull-right\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showTransactionCategoryModal = true\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.add_new\")))]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"transaction_category_id\",\n                        id: \"transaction_category_id\",\n                        options: _vm.transaction_categories,\n                        placeholder: _vm.trans(\n                          \"finance.select_transaction_category\"\n                        ),\n                      },\n                      on: {\n                        select: _vm.onTransactionCategorySelect,\n                        close: function ($event) {\n                          return _vm.expenseForm.errors.clear(\n                            \"transaction_category_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.expenseForm.transaction_category_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_transaction_category,\n                        callback: function ($$v) {\n                          _vm.selected_transaction_category = $$v\n                        },\n                        expression: \"selected_transaction_category\",\n                      },\n                    },\n                    [\n                      !_vm.transaction_categories.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"transaction_category_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.account\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"account_id\",\n                        id: \"account_id\",\n                        options: _vm.accounts,\n                        placeholder: _vm.trans(\"finance.select_account\"),\n                        disabled: _vm.uuid ? true : false,\n                      },\n                      on: {\n                        select: _vm.onAccountSelect,\n                        close: function ($event) {\n                          return _vm.expenseForm.errors.clear(\"account_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.expenseForm.account_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_account,\n                        callback: function ($$v) {\n                          _vm.selected_account = $$v\n                        },\n                        expression: \"selected_account\",\n                      },\n                    },\n                    [\n                      !_vm.accounts.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"account_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"currency-input\", {\n                    attrs: {\n                      position: _vm.default_currency.position,\n                      symbol: _vm.default_currency.symbol,\n                      name: \"amount\",\n                      placeholder: _vm.trans(\"finance.amount\"),\n                    },\n                    nativeOn: {\n                      input: function ($event) {\n                        return _vm.expenseForm.errors.clear(\"amount\")\n                      },\n                    },\n                    model: {\n                      value: _vm.expenseForm.amount,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.expenseForm, \"amount\", $$v)\n                      },\n                      expression: \"expenseForm.amount\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"amount\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.date_of_expense\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"datepicker\", {\n                    attrs: {\n                      bootstrapStyling: true,\n                      placeholder: _vm.trans(\"finance.date_of_expense\"),\n                    },\n                    on: {\n                      selected: function ($event) {\n                        return _vm.expenseForm.errors.clear(\"date_of_expense\")\n                      },\n                    },\n                    model: {\n                      value: _vm.expenseForm.date_of_expense,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.expenseForm, \"date_of_expense\", $$v)\n                      },\n                      expression: \"expenseForm.date_of_expense\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"date_of_expense\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.payment_method\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"payment_method_id\",\n                        id: \"payment_method_id\",\n                        options: _vm.payment_methods,\n                        placeholder: _vm.trans(\"finance.select_payment_method\"),\n                      },\n                      on: {\n                        select: _vm.onPaymentMethodSelect,\n                        close: function ($event) {\n                          return _vm.expenseForm.errors.clear(\n                            \"payment_method_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.expenseForm.payment_method_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_payment_method,\n                        callback: function ($$v) {\n                          _vm.selected_payment_method = $$v\n                        },\n                        expression: \"selected_payment_method\",\n                      },\n                    },\n                    [\n                      !_vm.payment_methods.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"payment_method_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.expenseForm.instrument_number,\n                            expression: \"expenseForm.instrument_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_number\",\n                          placeholder: _vm.trans(\"finance.instrument_number\"),\n                        },\n                        domProps: { value: _vm.expenseForm.instrument_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.expenseForm,\n                              \"instrument_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.expenseForm,\n                          \"prop-name\": \"instrument_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_date\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"finance.instrument_date\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.expenseForm.errors.clear(\n                              \"instrument_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.expenseForm.instrument_date,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.expenseForm, \"instrument_date\", $$v)\n                          },\n                          expression: \"expenseForm.instrument_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.expenseForm,\n                          \"prop-name\": \"instrument_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_bank_detail\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_bank_detail\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.expenseForm.instrument_bank_detail,\n                            expression: \"expenseForm.instrument_bank_detail\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_bank_detail\",\n                          placeholder: _vm.trans(\n                            \"finance.instrument_bank_detail\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.expenseForm.instrument_bank_detail,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.expenseForm,\n                              \"instrument_bank_detail\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.expenseForm,\n                          \"prop-name\": \"instrument_bank_detail\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_clearing_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_clearing_date\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\n                            \"finance.instrument_clearing_date\"\n                          ),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.expenseForm.errors.clear(\n                              \"instrument_clearing_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.expenseForm.instrument_clearing_date,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.expenseForm,\n                              \"instrument_clearing_date\",\n                              $$v\n                            )\n                          },\n                          expression: \"expenseForm.instrument_clearing_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.expenseForm,\n                          \"prop-name\": \"instrument_clearing_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"reference_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.reference_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.expenseForm.reference_number,\n                            expression: \"expenseForm.reference_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"reference_number\",\n                          placeholder: _vm.trans(\"finance.reference_number\"),\n                        },\n                        domProps: { value: _vm.expenseForm.reference_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.expenseForm,\n                              \"reference_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.expenseForm,\n                          \"prop-name\": \"reference_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-9\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.expense_description\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"1\",\n                      name: \"description\",\n                      placeholder: _vm.trans(\"finance.expense_description\"),\n                    },\n                    model: {\n                      value: _vm.expenseForm.description,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.expenseForm, \"description\", $$v)\n                      },\n                      expression: \"expenseForm.description\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.expenseForm,\n                      \"prop-name\": \"description\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"file-upload-input\", {\n                    attrs: {\n                      \"button-text\": _vm.trans(\"general.upload_document\"),\n                      token: _vm.expenseForm.upload_token,\n                      module: \"expense\",\n                      \"clear-file\": _vm.clearAttachment,\n                      \"module-id\": _vm.module_id,\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"card-footer text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.uuid,\n                      expression: \"uuid\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/finance/transaction/expense\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              !_vm.uuid\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-danger waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"cancel\")\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [\n                  _vm.uuid\n                    ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                    : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                ]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm.showTransactionCategoryModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                                \" +\n                              _vm._s(\n                                _vm.trans(\n                                  \"finance.add_new_transaction_category\"\n                                )\n                              ) +\n                              \"\\n                                \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showTransactionCategoryModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"transaction-category-form\", {\n                            on: {\n                              completed: _vm.getPreRequisite,\n                              cancel: function ($event) {\n                                _vm.showTransactionCategoryModal = false\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"clearfix\" }),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=bd3aba80&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('bd3aba80')) {\n      api.createRecord('bd3aba80', component.options)\n    } else {\n      api.reload('bd3aba80', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=bd3aba80&\", function () {\n      api.rerender('bd3aba80', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/transaction/expense/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=bd3aba80&\""],"mappings":";;;;;;;;;;AAsIA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChSA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAYA;AACA;AACA;;;;;;;;;;;;;ACvvBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
{"version":3,"file":"js/exam/online-exam/exam.js?id=cacaab9e28200e4b6eba","sources":["webpack:///resources/js/views/exam/online-exam/exam.vue","webpack:///./resources/js/views/exam/online-exam/exam.vue","webpack:///./resources/js/views/exam/online-exam/exam.vue?8c56","webpack:///./resources/js/views/exam/online-exam/exam.vue?139c","webpack:///./resources/js/views/exam/online-exam/exam.vue?613a"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('exam.online_exam')}}\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"online_exam\">{{online_exam.name}} ({{trans('exam.online_exam_type_'+online_exam.exam_type)}})</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <router-link to=\"/online-exam\" class=\"btn btn-info btn-sm\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('exam.online_exam')}}</span></router-link>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n        \t<div class=\"row\">\n        \t\t<div class=\"col-12\">\n\t\t            <div class=\"card\">\n\t\t                <div class=\"card-boy\" v-if=\"online_exam\">\n\t\t                    <h4 class=\"card-title m-3 text-center\">\n\t\t\t                    {{ online_exam.batch.course.name+' '+online_exam.batch.name }}\n\t\t\t                    {{ online_exam.subject.name+' ('+online_exam.subject.code+')' }}\n\t\t\t                </h4>\n\t\t                    <h4 class=\"card-title m-3 text-center\">\n\t\t                    \t<small>{{online_exam.date | moment }} {{online_exam.start_time | momentTime }} {{trans('general.to')}} {{online_exam.end_time | momentTime}} </small> <br />\n\t\t                    \t\n\t\t                    </h4>\n\n\t\t                    <div class=\"border-top\">\n\t\t                    \t<h4 class=\"card-title m-3 text-center\"><small>{{trans('exam.online_exam_instructions')}}</small></h4>\n\t\t                    \t<div class=\"p-4\" style=\"font-size: 90%;\" v-html=\"online_exam.instructions\"></div>\n\t\t                    </div>\n\n\t\t                    <hr />\n\n\t\t\t\t\t\t\t<div v-if=\"!exam_started\" class=\"mx-4\">\n\t\t\t\t\t\t\t\t<button type=\"button\" @click=\"startExam\" class=\"btn btn-success btn-block\">{{trans('exam.online_exam_start_button')}}</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div v-else>\n\t\t\t                    <h4 class=\"card-title m-3\">{{trans('exam.online_exam_questions')}}\n\t\t\t\t                    <span class=\"pull-right m-r-5\" v-if=\"!is_final_submitted\">\n\t\t\t\t\t\t\t\t\t\t<countdown :time=\"countdown\" :interval=\"100\" tag=\"p\">\n\t\t\t\t\t\t\t\t\t\t    <template slot-scope=\"props\">{{ props.hours }} {{trans('list.hour')}}, {{ props.minutes }} {{trans('list.minute')}}, {{ props.seconds }}.{{ Math.floor(props.milliseconds / 100) }} {{trans('list.second')}}</template>\n\t\t\t\t\t\t\t\t\t\t</countdown>\n\t\t\t\t                    </span>\n\t\t\t                    </h4>\n\n\t\t\t\t\t\t\t\t<form @submit.prevent=\"submit\" @keydown=\"onlineExamForm.errors.clear($event.target.name)\">\n\t\t\t\t\t\t\t\t\t<div class=\"p-4\">\n\t\t\t\t\t                    <div v-for=\"(question,index) in onlineExamForm.answers\" class=\"border-bottom my-2\" style=\"font-size: 90%; padding: 10px; background-color: rgb(241, 243, 244); border-radius: 5px; color: #000;\">\n\t\t\t\t\t                       <p>\n\t\t\t\t\t                            ({{index+1}}) {{question.question}} \n\t\t\t\t\t                            <span class=\"pull-right\">({{question.mark}})</span>\n\t\t\t\t\t                        </p>\n\t\t\t\t\t                       <div v-if=\"question.image\" style=\"padding: 10px;\"><center><img style=\"max-width: 250px;\" :src=\"'/'+question.image\" /></center></div>\n\n\t\t\t\t\t                       <div class=\"row\" v-if=\"question.question_type == 'mcq'\" style=\"padding-left: 20px;\">\n\t\t\t\t\t                            <div class=\"col-6\" v-for=\"(option, idx) in question.answers\">\n\t\t\t\t\t                            \t<div class=\"radio radio-info\">\n\t\t\t\t\t\t                            \t<div class=\"form-check form-check-inline\">\n\t\t\t\t\t\t\t                                <input class=\"form-check-input\" :disabled=\"is_final_submitted ? true : false\" type=\"radio\" :value=\"option.title\" :id=\"`${question.id}_option_${option.title}`\" v-model=\"question.answer\" :checked=\"question.answer == option.title\" :name=\"getAnswerName(index)\" @click=\"\">\n\t\t\t\t\t\t\t                                <label class=\"form-check-label\" :for=\"`${question.id}_option_${option.title}`\"> ({{idx+1}}) {{option.title}}</label>\n\n\t\t\t\t\t\t\t                                <span style=\"margin-left: 10px;\" v-if=\"online_exam.status == 'expired' && option.is_correct_answer\"><i class=\"fas fa-check-circle text-success\"></i></span>\n\t\t\t\t\t\t\t                            </div>\n\t\t\t\t\t\t\t                        </div>\n\t\t\t\t\t                                <div v-if=\"option.image\" style=\"padding: 10px;\"><center><img style=\"max-width: 150px;\" :src=\"'/'+option.image\" /></center></div>\n\t\t\t\t\t                            </div>\n\t\t\t\t\t                       </div>\n\t\t\t\t\t                       <div class=\"row\" v-if=\"question.question_type == 'single_line'\" style=\"padding-left: 20px;\">\n\t\t\t\t\t                       \t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"form-control\" type=\"text\" v-model=\"question.answer\" :disabled=\"is_final_submitted ? true : false\" :name=\"getAnswerName(index)\" :placeholder=\"trans('exam.online_exam_answer')\">\n\t\t\t\t\t                       \t\t</div>\n\t\t\t\t\t                       </div>\n\t\t\t\t\t                       <div class=\"row\" v-if=\"question.question_type == 'multiple_line'\" style=\"padding-left: 20px;\">\n\t\t\t\t\t                       \t\t<div class=\"col-12\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<autosize-textarea :disabled=\"is_final_submitted ? true : false\" v-model=\"question.answer\" rows=\"2\" :name=\"getAnswerName(index)\" :placeholder=\"trans('exam.online_exam_answer')\"></autosize-textarea>\n\t\t\t\t\t                       \t\t</div>\n\t\t\t\t\t                       </div>\n\t\t\t\t\t                       <button v-if=\"!is_final_submitted\" type=\"button\" @click=\"submit\" class=\"btn btn-sm btn-info waves-effect waves-light pull-right\">{{trans('general.save')}}</button>\n\t\t\t\t\t                       <div class=\"clearfix\"></div>\n\t\t\t\t\t                    </div>\n\t\t\t\t\t                </div>\n\t\t\t\t\t                <div class=\"row\" v-if=\"!is_final_submitted\">\n\t\t\t\t\t                \t<div class=\"col-12 p-5\">\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$router.push('/online-exam')\">{{trans('general.cancel')}}</button>\n\t                \t\t\t\t\t\t<button type=\"button\" @click=\"finalSubmit\" class=\"btn btn-success waves-effect waves-light\">{{trans('exam.online_exam_final_submission')}}</button>\n\t\t\t\t\t                       <div class=\"clearfix\"></div>\n\t\t\t\t\t                \t</div>\n\t\t\t\t\t                </div>\n\t\t\t\t\t            </form>\n\t\t\t\t\t\t\t</div>\n\t\t                </div>\n\t\t            </div>\n\t\t        </div>\n\t\t    </div>\n        </div>\n    </div>\t\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tuuid:this.$route.params.uuid,\n\t\t\t\tonline_exam: {\n\t\t\t\t\tbatch: {\n\t\t\t\t\t\tcourse: {}\n\t\t\t\t\t},\n\t\t\t\t\tsubject: {}\n\t\t\t\t},\n\t\t\t\tis_final_submitted: false,\n\t\t\t\tonline_exam_record: {},\n\t\t\t\tonlineExamForm: new Form({\n\t\t\t\t\tanswers: [],\n\t\t\t\t},false),\n\t\t\t\texam_started: false,\n\t\t\t\tquestions: [],\n\t\t\t\tcountdown: 0\n\t\t\t}\n\t\t},\n\t\tmounted() {\n\t\t\tthis.getOnlineExam();\n\n\t\t\tif (this.hasRole('student') && this.online_exam.status == 'upcoming') {\n\t\t\t\tthis.$router.push('/online-exam');\n\t\t\t}\n\n\t\t\tif (this.hasRole('parent') && this.online_exam.status != 'expired') {\n\t\t\t\tthis.$router.push('/online-exam');\n\t\t\t}\n\t\t},\n\t\tmethods: {\n\t\t\thasRole(role) {\n\t\t\t\treturn helper.hasRole(role);\n\t\t\t},\n\t\t\tgetOnlineExam() {\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.onlineExamForm.answers = [];\n\t\t\t\taxios.get('/api/online-exam/'+this.uuid+'/exam')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.online_exam = response.online_exam;\n\t\t\t\t\t\tthis.questions = response.questions;\n\t\t\t\t\t\tthis.countdown = response.countdown;\n\t\t\t\t\t\tthis.online_exam_record = response.online_exam_record;\n\t\t\t\t\t\tthis.is_final_submitted = response.is_final_submitted;\n\t\t\t\t\t\tthis.questions.forEach(question => {\n\n\t\t\t\t\t\t\tlet answer = '';\n\t\t\t\t\t\t\tif (this.online_exam_record) {\n\t\t\t\t\t\t\t\tlet question_answer = this.online_exam_record.answers.find(o => o.question_id == question.id);\n\n\t\t\t\t\t\t\t\tif (typeof question_answer !== undefined) {\n\t\t\t\t\t\t\t\t\tanswer = question_answer.answer;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.onlineExamForm.answers.push({\n\t\t\t\t\t\t\t\t...question,\n\t\t\t\t\t\t\t\tanswer: answer\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.exam_started = response.online_exam_record ? true : false;\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\thelper.showErrorMsg(Error);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\tthis.$router.push('/online-exam');\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tgetAnswerName(index) {\n\t\t\t\treturn 'answer_'+index\n\t\t\t},\n\t\t\tsubmit() {\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.onlineExamForm.post('/api/online-exam/'+this.uuid+'/exam')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tfinalSubmit() {\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.onlineExamForm.post('/api/online-exam/'+this.uuid+'/exam?is_final=1')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\ttoastr.success(response.message);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t\tthis.getOnlineExam();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t},\n\t\t\tstartExam() {\n\t\t\t\tlet loader = this.$loading.show();\n\t\t\t\tthis.onlineExamForm.post('/api/online-exam/'+this.uuid+'/exam')\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tthis.getOnlineExam();\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => {\n\t\t\t\t\t\thelper.showErrorMsg(error);\n\t\t\t\t\t\tloader.hide();\n\t\t\t\t\t})\n\t\t\t}\n\t\t},\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentTime(time) {\n            return helper.formatTime(time);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(\n              _vm._s(_vm.trans(\"exam.online_exam\")) +\n                \"\\n                        \"\n            ),\n            _vm.online_exam\n              ? _c(\n                  \"span\",\n                  { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                  [\n                    _vm._v(\n                      _vm._s(_vm.online_exam.name) +\n                        \" (\" +\n                        _vm._s(\n                          _vm.trans(\n                            \"exam.online_exam_type_\" + _vm.online_exam.exam_type\n                          )\n                        ) +\n                        \")\"\n                    ),\n                  ]\n                )\n              : _vm._e(),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"action-buttons pull-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  staticClass: \"btn btn-info btn-sm\",\n                  attrs: { to: \"/online-exam\" },\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-list\" }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"exam.online_exam\"))),\n                  ]),\n                ]\n              ),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"div\", { staticClass: \"card\" }, [\n            _vm.online_exam\n              ? _c(\"div\", { staticClass: \"card-boy\" }, [\n                  _c(\"h4\", { staticClass: \"card-title m-3 text-center\" }, [\n                    _vm._v(\n                      \"\\n\\t\\t\\t                    \" +\n                        _vm._s(\n                          _vm.online_exam.batch.course.name +\n                            \" \" +\n                            _vm.online_exam.batch.name\n                        ) +\n                        \"\\n\\t\\t\\t                    \" +\n                        _vm._s(\n                          _vm.online_exam.subject.name +\n                            \" (\" +\n                            _vm.online_exam.subject.code +\n                            \")\"\n                        ) +\n                        \"\\n\\t\\t\\t                \"\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"h4\", { staticClass: \"card-title m-3 text-center\" }, [\n                    _c(\"small\", [\n                      _vm._v(\n                        _vm._s(_vm._f(\"moment\")(_vm.online_exam.date)) +\n                          \" \" +\n                          _vm._s(\n                            _vm._f(\"momentTime\")(_vm.online_exam.start_time)\n                          ) +\n                          \" \" +\n                          _vm._s(_vm.trans(\"general.to\")) +\n                          \" \" +\n                          _vm._s(\n                            _vm._f(\"momentTime\")(_vm.online_exam.end_time)\n                          ) +\n                          \" \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"br\"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"border-top\" }, [\n                    _c(\"h4\", { staticClass: \"card-title m-3 text-center\" }, [\n                      _c(\"small\", [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"exam.online_exam_instructions\"))\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", {\n                      staticClass: \"p-4\",\n                      staticStyle: { \"font-size\": \"90%\" },\n                      domProps: {\n                        innerHTML: _vm._s(_vm.online_exam.instructions),\n                      },\n                    }),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"hr\"),\n                  _vm._v(\" \"),\n                  !_vm.exam_started\n                    ? _c(\"div\", { staticClass: \"mx-4\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass: \"btn btn-success btn-block\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.startExam },\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"exam.online_exam_start_button\"))\n                            ),\n                          ]\n                        ),\n                      ])\n                    : _c(\"div\", [\n                        _c(\"h4\", { staticClass: \"card-title m-3\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"exam.online_exam_questions\")) +\n                              \"\\n\\t\\t\\t\\t                    \"\n                          ),\n                          !_vm.is_final_submitted\n                            ? _c(\n                                \"span\",\n                                { staticClass: \"pull-right m-r-5\" },\n                                [\n                                  _c(\"countdown\", {\n                                    attrs: {\n                                      time: _vm.countdown,\n                                      interval: 100,\n                                      tag: \"p\",\n                                    },\n                                    scopedSlots: _vm._u(\n                                      [\n                                        {\n                                          key: \"default\",\n                                          fn: function (props) {\n                                            return [\n                                              _vm._v(\n                                                _vm._s(props.hours) +\n                                                  \" \" +\n                                                  _vm._s(\n                                                    _vm.trans(\"list.hour\")\n                                                  ) +\n                                                  \", \" +\n                                                  _vm._s(props.minutes) +\n                                                  \" \" +\n                                                  _vm._s(\n                                                    _vm.trans(\"list.minute\")\n                                                  ) +\n                                                  \", \" +\n                                                  _vm._s(props.seconds) +\n                                                  \".\" +\n                                                  _vm._s(\n                                                    Math.floor(\n                                                      props.milliseconds / 100\n                                                    )\n                                                  ) +\n                                                  \" \" +\n                                                  _vm._s(\n                                                    _vm.trans(\"list.second\")\n                                                  )\n                                              ),\n                                            ]\n                                          },\n                                        },\n                                      ],\n                                      null,\n                                      false,\n                                      555607460\n                                    ),\n                                  }),\n                                ],\n                                1\n                              )\n                            : _vm._e(),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"form\",\n                          {\n                            on: {\n                              submit: function ($event) {\n                                $event.preventDefault()\n                                return _vm.submit.apply(null, arguments)\n                              },\n                              keydown: function ($event) {\n                                return _vm.onlineExamForm.errors.clear(\n                                  $event.target.name\n                                )\n                              },\n                            },\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { staticClass: \"p-4\" },\n                              _vm._l(\n                                _vm.onlineExamForm.answers,\n                                function (question, index) {\n                                  return _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"border-bottom my-2\",\n                                      staticStyle: {\n                                        \"font-size\": \"90%\",\n                                        padding: \"10px\",\n                                        \"background-color\":\n                                          \"rgb(241, 243, 244)\",\n                                        \"border-radius\": \"5px\",\n                                        color: \"#000\",\n                                      },\n                                    },\n                                    [\n                                      _c(\"p\", [\n                                        _vm._v(\n                                          \"\\n\\t\\t\\t\\t\\t                            (\" +\n                                            _vm._s(index + 1) +\n                                            \") \" +\n                                            _vm._s(question.question) +\n                                            \" \\n\\t\\t\\t\\t\\t                            \"\n                                        ),\n                                        _c(\n                                          \"span\",\n                                          { staticClass: \"pull-right\" },\n                                          [\n                                            _vm._v(\n                                              \"(\" + _vm._s(question.mark) + \")\"\n                                            ),\n                                          ]\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      question.image\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticStyle: { padding: \"10px\" },\n                                            },\n                                            [\n                                              _c(\"center\", [\n                                                _c(\"img\", {\n                                                  staticStyle: {\n                                                    \"max-width\": \"250px\",\n                                                  },\n                                                  attrs: {\n                                                    src: \"/\" + question.image,\n                                                  },\n                                                }),\n                                              ]),\n                                            ],\n                                            1\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      question.question_type == \"mcq\"\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass: \"row\",\n                                              staticStyle: {\n                                                \"padding-left\": \"20px\",\n                                              },\n                                            },\n                                            _vm._l(\n                                              question.answers,\n                                              function (option, idx) {\n                                                return _c(\n                                                  \"div\",\n                                                  { staticClass: \"col-6\" },\n                                                  [\n                                                    _c(\n                                                      \"div\",\n                                                      {\n                                                        staticClass:\n                                                          \"radio radio-info\",\n                                                      },\n                                                      [\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"form-check form-check-inline\",\n                                                          },\n                                                          [\n                                                            _c(\"input\", {\n                                                              directives: [\n                                                                {\n                                                                  name: \"model\",\n                                                                  rawName:\n                                                                    \"v-model\",\n                                                                  value:\n                                                                    question.answer,\n                                                                  expression:\n                                                                    \"question.answer\",\n                                                                },\n                                                              ],\n                                                              staticClass:\n                                                                \"form-check-input\",\n                                                              attrs: {\n                                                                disabled:\n                                                                  _vm.is_final_submitted\n                                                                    ? true\n                                                                    : false,\n                                                                type: \"radio\",\n                                                                id: `${question.id}_option_${option.title}`,\n                                                                name: _vm.getAnswerName(\n                                                                  index\n                                                                ),\n                                                              },\n                                                              domProps: {\n                                                                value:\n                                                                  option.title,\n                                                                checked:\n                                                                  question.answer ==\n                                                                  option.title,\n                                                                checked: _vm._q(\n                                                                  question.answer,\n                                                                  option.title\n                                                                ),\n                                                              },\n                                                              on: {\n                                                                click:\n                                                                  function (\n                                                                    $event\n                                                                  ) {},\n                                                                change:\n                                                                  function (\n                                                                    $event\n                                                                  ) {\n                                                                    return _vm.$set(\n                                                                      question,\n                                                                      \"answer\",\n                                                                      option.title\n                                                                    )\n                                                                  },\n                                                              },\n                                                            }),\n                                                            _vm._v(\" \"),\n                                                            _c(\n                                                              \"label\",\n                                                              {\n                                                                staticClass:\n                                                                  \"form-check-label\",\n                                                                attrs: {\n                                                                  for: `${question.id}_option_${option.title}`,\n                                                                },\n                                                              },\n                                                              [\n                                                                _vm._v(\n                                                                  \" (\" +\n                                                                    _vm._s(\n                                                                      idx + 1\n                                                                    ) +\n                                                                    \") \" +\n                                                                    _vm._s(\n                                                                      option.title\n                                                                    )\n                                                                ),\n                                                              ]\n                                                            ),\n                                                            _vm._v(\" \"),\n                                                            _vm.online_exam\n                                                              .status ==\n                                                              \"expired\" &&\n                                                            option.is_correct_answer\n                                                              ? _c(\n                                                                  \"span\",\n                                                                  {\n                                                                    staticStyle:\n                                                                      {\n                                                                        \"margin-left\":\n                                                                          \"10px\",\n                                                                      },\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-check-circle text-success\",\n                                                                    }),\n                                                                  ]\n                                                                )\n                                                              : _vm._e(),\n                                                          ]\n                                                        ),\n                                                      ]\n                                                    ),\n                                                    _vm._v(\" \"),\n                                                    option.image\n                                                      ? _c(\n                                                          \"div\",\n                                                          {\n                                                            staticStyle: {\n                                                              padding: \"10px\",\n                                                            },\n                                                          },\n                                                          [\n                                                            _c(\"center\", [\n                                                              _c(\"img\", {\n                                                                staticStyle: {\n                                                                  \"max-width\":\n                                                                    \"150px\",\n                                                                },\n                                                                attrs: {\n                                                                  src:\n                                                                    \"/\" +\n                                                                    option.image,\n                                                                },\n                                                              }),\n                                                            ]),\n                                                          ],\n                                                          1\n                                                        )\n                                                      : _vm._e(),\n                                                  ]\n                                                )\n                                              }\n                                            ),\n                                            0\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      question.question_type == \"single_line\"\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass: \"row\",\n                                              staticStyle: {\n                                                \"padding-left\": \"20px\",\n                                              },\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"col-12\" },\n                                                [\n                                                  _c(\"input\", {\n                                                    directives: [\n                                                      {\n                                                        name: \"model\",\n                                                        rawName: \"v-model\",\n                                                        value: question.answer,\n                                                        expression:\n                                                          \"question.answer\",\n                                                      },\n                                                    ],\n                                                    staticClass: \"form-control\",\n                                                    attrs: {\n                                                      type: \"text\",\n                                                      disabled:\n                                                        _vm.is_final_submitted\n                                                          ? true\n                                                          : false,\n                                                      name: _vm.getAnswerName(\n                                                        index\n                                                      ),\n                                                      placeholder: _vm.trans(\n                                                        \"exam.online_exam_answer\"\n                                                      ),\n                                                    },\n                                                    domProps: {\n                                                      value: question.answer,\n                                                    },\n                                                    on: {\n                                                      input: function ($event) {\n                                                        if (\n                                                          $event.target\n                                                            .composing\n                                                        )\n                                                          return\n                                                        _vm.$set(\n                                                          question,\n                                                          \"answer\",\n                                                          $event.target.value\n                                                        )\n                                                      },\n                                                    },\n                                                  }),\n                                                ]\n                                              ),\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      question.question_type == \"multiple_line\"\n                                        ? _c(\n                                            \"div\",\n                                            {\n                                              staticClass: \"row\",\n                                              staticStyle: {\n                                                \"padding-left\": \"20px\",\n                                              },\n                                            },\n                                            [\n                                              _c(\n                                                \"div\",\n                                                { staticClass: \"col-12\" },\n                                                [\n                                                  _c(\"autosize-textarea\", {\n                                                    attrs: {\n                                                      disabled:\n                                                        _vm.is_final_submitted\n                                                          ? true\n                                                          : false,\n                                                      rows: \"2\",\n                                                      name: _vm.getAnswerName(\n                                                        index\n                                                      ),\n                                                      placeholder: _vm.trans(\n                                                        \"exam.online_exam_answer\"\n                                                      ),\n                                                    },\n                                                    model: {\n                                                      value: question.answer,\n                                                      callback: function ($$v) {\n                                                        _vm.$set(\n                                                          question,\n                                                          \"answer\",\n                                                          $$v\n                                                        )\n                                                      },\n                                                      expression:\n                                                        \"question.answer\",\n                                                    },\n                                                  }),\n                                                ],\n                                                1\n                                              ),\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      !_vm.is_final_submitted\n                                        ? _c(\n                                            \"button\",\n                                            {\n                                              staticClass:\n                                                \"btn btn-sm btn-info waves-effect waves-light pull-right\",\n                                              attrs: { type: \"button\" },\n                                              on: { click: _vm.submit },\n                                            },\n                                            [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.trans(\"general.save\")\n                                                )\n                                              ),\n                                            ]\n                                          )\n                                        : _vm._e(),\n                                      _vm._v(\" \"),\n                                      _c(\"div\", { staticClass: \"clearfix\" }),\n                                    ]\n                                  )\n                                }\n                              ),\n                              0\n                            ),\n                            _vm._v(\" \"),\n                            !_vm.is_final_submitted\n                              ? _c(\"div\", { staticClass: \"row\" }, [\n                                  _c(\"div\", { staticClass: \"col-12 p-5\" }, [\n                                    _c(\n                                      \"button\",\n                                      {\n                                        staticClass:\n                                          \"btn btn-danger waves-effect waves-light\",\n                                        attrs: { type: \"button\" },\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.$router.push(\n                                              \"/online-exam\"\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"general.cancel\"))\n                                        ),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"button\",\n                                      {\n                                        staticClass:\n                                          \"btn btn-success waves-effect waves-light\",\n                                        attrs: { type: \"button\" },\n                                        on: { click: _vm.finalSubmit },\n                                      },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"exam.online_exam_final_submission\"\n                                            )\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"clearfix\" }),\n                                  ]),\n                                ])\n                              : _vm._e(),\n                          ]\n                        ),\n                      ]),\n                ])\n              : _vm._e(),\n          ]),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./exam.vue?vue&type=template&id=5e82ef16&\"\nimport script from \"./exam.vue?vue&type=script&lang=js&\"\nexport * from \"./exam.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5e82ef16')) {\n      api.createRecord('5e82ef16', component.options)\n    } else {\n      api.reload('5e82ef16', component.options)\n    }\n    module.hot.accept(\"./exam.vue?vue&type=template&id=5e82ef16&\", function () {\n      api.rerender('5e82ef16', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/online-exam/exam.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam.vue?vue&type=template&id=5e82ef16&\""],"mappings":";;;;;;;;;;;;;;;;;AAujOA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAkBA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAmBA;AAAA;AAqBA;AAAA;AACA;AAAA;AASA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAQA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AA2BA;AACA;AAMA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAYA;AAAA;AAaA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAKA;AAEA;AAKA;AAEA;AAGA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AAMA;AACA;AAIA;AAIA;AAKA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAsBA;AAEA;AAEA;AACA;AAGA;AAEA;AAaA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAQA;AAUA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAGA;AACA;AAIA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AAYA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AAAA;AAGA;AAMA;AAAA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAWA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAYA;AAAA;AAcA;AACA;AACA;;;;;;;;;;;;;ACpoBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
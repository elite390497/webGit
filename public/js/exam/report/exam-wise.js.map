{"version":3,"file":"js/exam/report/exam-wise.js?id=20e97a49c4a125de4b23","sources":["webpack:///resources/js/views/exam/report/exam-wise.vue","webpack:///./resources/js/views/exam/report/exam-wise.vue","webpack:///./resources/js/views/exam/report/exam-wise.vue?7f8c","webpack:///./resources/js/views/exam/report/exam-wise.vue?8ec0","webpack:///./resources/js/views/exam/report/exam-wise.vue?8a80"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('exam.exam_wise_report')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <form @submit.prevent=\"submit\" @keydown=\"reportForm.errors.clear($event.target.name)\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('exam.exam')}} </label>\r\n                                    <v-select label=\"name\" v-model=\"selected_exam\" name=\"exam_id\" id=\"exam_id\" :options=\"exams\" :placeholder=\"trans('exam.select_exam')\" @select=\"onExamSelect\" @close=\"reportForm.errors.clear('exam_id')\" @remove=\"reportForm.exam_id = ''\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!exams.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                    <show-error :form-name=\"reportForm\" prop-name=\"exam_id\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.batch')}} </label>\r\n                                    <v-select label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"reportForm.errors.clear('batch_id')\" @remove=\"reportForm.batch_id = ''\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                    <show-error :form-name=\"reportForm\" prop-name=\"batch_id\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"getReport\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.print')}}</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import vSelect from 'vue-multiselect'\r\n\r\n    export default {\r\n        components : { vSelect },\r\n        data() {\r\n            return {\r\n                reportForm: new Form({\r\n                    batch_id: '',\r\n                    exam_id: '',\r\n                    type: ''\r\n                },false),\r\n                types: [],\r\n                batches: [],\r\n                selected_batch: null,\r\n                exams: [],\r\n                selected_exam: null\r\n            }\r\n        },\r\n        mounted(){\r\n            if(helper.hasRole('student') || helper.hasRole('parent')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(!helper.hasPermission('access-exam-report') && !helper.hasPermission('access-class-teacher-wise-exam-report')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/exam/report/pre-requisite')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        this.exams = response.exams;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getReport(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/exam/report/exam-wise', {\r\n                    batch_id: this.reportForm.batch_id,\r\n                    exam_id: this.reportForm.exam_id\r\n                })\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.reportForm.batch_id = selectedOption.id;\r\n            },\r\n            onExamSelect(selectedOption){\r\n                this.reportForm.exam_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"exam.exam_wise_report\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm._m(0),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\"div\", { staticClass: \"card-body p-t-20\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.reportForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"exam.exam\")) + \" \"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: \"exam_id\",\n                            id: \"exam_id\",\n                            options: _vm.exams,\n                            placeholder: _vm.trans(\"exam.select_exam\"),\n                          },\n                          on: {\n                            select: _vm.onExamSelect,\n                            close: function ($event) {\n                              return _vm.reportForm.errors.clear(\"exam_id\")\n                            },\n                            remove: function ($event) {\n                              _vm.reportForm.exam_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_exam,\n                            callback: function ($$v) {\n                              _vm.selected_exam = $$v\n                            },\n                            expression: \"selected_exam\",\n                          },\n                        },\n                        [\n                          !_vm.exams.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                        \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                    \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.reportForm,\n                          \"prop-name\": \"exam_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \" \"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            \"group-values\": \"batches\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: \"batch_id\",\n                            id: \"batch_id\",\n                            options: _vm.batches,\n                            placeholder: _vm.trans(\"academic.select_batch\"),\n                          },\n                          on: {\n                            select: _vm.onBatchSelect,\n                            close: function ($event) {\n                              return _vm.reportForm.errors.clear(\"batch_id\")\n                            },\n                            remove: function ($event) {\n                              _vm.reportForm.batch_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_batch,\n                            callback: function ($$v) {\n                              _vm.selected_batch = $$v\n                            },\n                            expression: \"selected_batch\",\n                          },\n                        },\n                        [\n                          !_vm.batches.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                        \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                    \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.reportForm,\n                          \"prop-name\": \"batch_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.getReport },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.print\")))]\n                ),\n              ]),\n            ]\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n      _c(\"div\", { staticClass: \"action-buttons pull-right\" }),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./exam-wise.vue?vue&type=template&id=eebd5910&\"\nimport script from \"./exam-wise.vue?vue&type=script&lang=js&\"\nexport * from \"./exam-wise.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('eebd5910')) {\n      api.createRecord('eebd5910', component.options)\n    } else {\n      api.reload('eebd5910', component.options)\n    }\n    module.hot.accept(\"./exam-wise.vue?vue&type=template&id=eebd5910&\", function () {\n      api.rerender('eebd5910', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/report/exam-wise.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam-wise.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam-wise.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./exam-wise.vue?vue&type=template&id=eebd5910&\""],"mappings":";;;;;;;;;;AAoDA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;AC7MA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
{"version":3,"file":"js/exam/report/index.js?id=c83cc0f62514a3ecdae8","sources":["webpack:///resources/js/views/exam/report/index.vue","webpack:///./resources/js/views/exam/report/index.vue","webpack:///./resources/js/views/exam/report/index.vue?42fa","webpack:///./resources/js/views/exam/report/index.vue?e1ae","webpack:///./resources/js/views/exam/report/index.vue?fa3e"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('exam.report')}}</h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"card card-form\">\n                <div class=\"card-body p-t-20\">\n\t\t\t        <form @submit.prevent=\"submit\" @keydown=\"reportForm.errors.clear($event.target.name)\">\n\t\t\t            <div class=\"row\">\n\t\t\t                <div class=\"col-12 col-sm-3\">\n\t\t\t                    <div class=\"form-group\">\n\t\t\t                        <label for=\"\">{{trans('academic.batch')}} </label>\n\t\t\t                        <v-select label=\"name\" :disabled=\"disable_filter\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"reportForm.errors.clear('batch_id')\" @remove=\"reportForm.batch_id = ''\">\n\t\t\t                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\n\t\t\t                                {{trans('general.no_option_found')}}\n\t\t\t                            </div>\n\t\t\t                        </v-select>\n\t\t\t                        <show-error :form-name=\"reportForm\" prop-name=\"batch_id\"></show-error>\n\t\t\t                    </div>\n\t\t\t                </div>\n\t\t\t                <div class=\"col-12 col-sm-3\">\n\t\t\t                    <div class=\"form-group\">\n\t\t\t                        <label for=\"\">{{trans('student.student')}} </label>\n\t\t\t                        <v-select label=\"name\" :disabled=\"disable_filter\" v-model=\"selected_student\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" @close=\"reportForm.errors.clear('student_id')\" @remove=\"reportForm.student_id = ''\">\n\t\t\t                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\n\t\t\t                                {{trans('general.no_option_found')}}\n\t\t\t                            </div>\n\t\t\t                        </v-select>\n\t\t\t                        <show-error :form-name=\"reportForm\" prop-name=\"student_id\"></show-error>\n\t\t\t                    </div>\n\t\t\t                </div>\n                            <div class=\"col-12 col-sm-3\" v-if=\"types.length > 1\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('exam.term_report_type')}}</label>\n                                    <select v-model=\"reportForm.type\" class=\"custom-select col-12\" name=\"type\" @change=\"reportForm.errors.clear('type')\">\n                                      <option v-for=\"option in types\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"reportForm\" prop-name=\"type\"></show-error>\n                                </div>\n                            </div>\n\t\t\t            </div>\n\t\t\t            <div class=\"card-footer text-right\">\n\t\t\t                <button type=\"button\" @click=\"getAllReport\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.bulk_print')}}</button>\n                            <button type=\"button\" @click=\"getReport\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.print')}}</button>\n                            <button type=\"button\" @click=\"getPDFReport\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.generate_pdf')}}</button>\n\t\t\t            </div>\n\t\t\t        </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\texport default {\n        components : {  },\n        data() {\n            return {\n                reportForm: new Form({\n                    batch_id: '',\n                    student_id: '',\n                    type: ''\n                },false),\n                types: [],\n                batches: [],\n                selected_batch: null,\n                students: [],\n                selected_student: null,\n                disable_filter: false\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('access-exam-report') && !helper.hasPermission('access-class-teacher-wise-exam-report')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/exam/report/pre-requisite')\n                    .then(response => {\n                        this.batches = response.batches;\n                        this.types = response.types;\n                        this.reportForm.type = this.types[0].value;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            getStudents(){\n                let loader = this.$loading.show();\n                this.students = [];\n                this.selected_student = null;\n                axios.post('/api/exam/report/student', {\n                    batch_id: this.reportForm.batch_id\n                })\n                .then(response => {\n                    this.students = response.students;\n                    loader.hide();\n                })\n                .catch(error => {\n                    loader.hide();\n                    helper.showErrorMsg(error);\n                })\n            },\n            resetFilter(){\n                this.disable_filter = false;\n            },\n            getReport(){\n                let loader = this.$loading.show();\n                axios.post('/api/exam/report', {\n                \tbatch_id: this.reportForm.batch_id,\n                    student_record_id: this.reportForm.student_id,\n                    type: this.reportForm.type\n                })\n                .then(response => {\n                    let print = window.open(\"/print\");\n                    loader.hide();\n                    print.document.write(response);\n                })\n                .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                });\n            },\n\n            getAllReport: function() {\n                if (!this.reportForm.batch_id) {\n                    helper.showErrorMsg(\"Please select a batch!\")\n                }\n                var t = this.$loading.show();\n                axios.post(\"/api/exam/report-card/\" + this.reportForm.batch_id + \"/print\", {\n                    batch_id: this.reportForm.batch_id,\n                    type: this.reportForm.type\n                }).then((function(e) {\n                    var r = window.open(\"/print\");\n                    t.hide(), r.document.write(e)\n                })).catch((function(e) {\n                    t.hide(), helper.showErrorMsg(e)\n                }))\n            },\n            getPDFReport(){\n                let loader = this.$loading.show();\n                axios.post('/api/exam/report/pdf',{\n                        batch_id: this.reportForm.batch_id,\n                        student_record_id: this.reportForm.student_id,\n                        type: this.reportForm.type\n                    }\n                    )\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onBatchSelect(selectedOption){\n                this.reportForm.batch_id = selectedOption.id;\n                this.getStudents();\n            },\n            onStudentSelect(selectedOption){\n                this.reportForm.student_id = selectedOption.id;\n            }\n        },\n        watch: {\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"exam.report\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm._m(0),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\"div\", { staticClass: \"card-body p-t-20\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.reportForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \" \"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            disabled: _vm.disable_filter,\n                            \"group-values\": \"batches\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: \"batch_id\",\n                            id: \"batch_id\",\n                            options: _vm.batches,\n                            placeholder: _vm.trans(\"academic.select_batch\"),\n                          },\n                          on: {\n                            select: _vm.onBatchSelect,\n                            close: function ($event) {\n                              return _vm.reportForm.errors.clear(\"batch_id\")\n                            },\n                            remove: function ($event) {\n                              _vm.reportForm.batch_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_batch,\n                            callback: function ($$v) {\n                              _vm.selected_batch = $$v\n                            },\n                            expression: \"selected_batch\",\n                          },\n                        },\n                        [\n                          !_vm.batches.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t                                \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n\\t\\t\\t                            \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.reportForm,\n                          \"prop-name\": \"batch_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.student\")) + \" \"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            disabled: _vm.disable_filter,\n                            name: \"student_id\",\n                            id: \"student_id\",\n                            options: _vm.students,\n                            placeholder: _vm.trans(\"student.select_student\"),\n                          },\n                          on: {\n                            select: _vm.onStudentSelect,\n                            close: function ($event) {\n                              return _vm.reportForm.errors.clear(\"student_id\")\n                            },\n                            remove: function ($event) {\n                              _vm.reportForm.student_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_student,\n                            callback: function ($$v) {\n                              _vm.selected_student = $$v\n                            },\n                            expression: \"selected_student\",\n                          },\n                        },\n                        [\n                          !_vm.students.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t                                \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n\\t\\t\\t                            \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.reportForm,\n                          \"prop-name\": \"student_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.types.length > 1\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"exam.term_report_type\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.reportForm.type,\n                                  expression: \"reportForm.type\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: { name: \"type\" },\n                              on: {\n                                change: [\n                                  function ($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call(\n                                        $event.target.options,\n                                        function (o) {\n                                          return o.selected\n                                        }\n                                      )\n                                      .map(function (o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.reportForm,\n                                      \"type\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function ($event) {\n                                    return _vm.reportForm.errors.clear(\"type\")\n                                  },\n                                ],\n                              },\n                            },\n                            _vm._l(_vm.types, function (option) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: option.value } },\n                                [\n                                  _vm._v(\n                                    \"\\n                                        \" +\n                                      _vm._s(option.text) +\n                                      \"\\n                                      \"\n                                  ),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.reportForm,\n                              \"prop-name\": \"type\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.getAllReport },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.bulk_print\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.getReport },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.print\")))]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.getPDFReport },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.generate_pdf\")))]\n                ),\n              ]),\n            ]\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n      _c(\"div\", { staticClass: \"action-buttons pull-right\" }),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=fde04490&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('fde04490')) {\n      api.createRecord('fde04490', component.options)\n    } else {\n      api.reload('fde04490', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=fde04490&\", function () {\n      api.rerender('fde04490', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/report/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=fde04490&\""],"mappings":";;;;;;;;;;AAihMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AASA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AASA;AAKA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;ACnTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}
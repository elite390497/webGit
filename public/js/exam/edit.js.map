{"version":3,"file":"js/exam/edit.js?id=ba8aa17b4571a66d2e36","sources":["webpack:///resources/js/views/exam/edit.vue","webpack:///resources/js/views/exam/form.vue","webpack:///./resources/js/views/exam/edit.vue","webpack:///./resources/js/views/exam/form.vue","webpack:///./resources/js/views/exam/edit.vue?0af7","webpack:///./resources/js/views/exam/edit.vue?fbad","webpack:///./resources/js/views/exam/edit.vue?7d3f","webpack:///./resources/js/views/exam/form.vue?71e6","webpack:///./resources/js/views/exam/form.vue?addd","webpack:///./resources/js/views/exam/form.vue?b627"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('exam.edit_exam')}}</h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/exam')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('exam.edit_exam')}}</span></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"card card-form\">\n                <div class=\"card-body p-t-20\">\n                    <exam-form :id=\"id\"></exam-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import examForm from './form';\n\n    export default {\n        components : { examForm },\n        data() {\n            return {\n                id:this.$route.params.id\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('edit-exam')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n        }\n    }\n</script>\n","<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"examForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('exam.term')}} </label>\n                    <v-select label=\"name\" v-model=\"selected_exam_term\" name=\"exam_term_id\" id=\"exam_term_id\" :options=\"exam_terms\" :placeholder=\"trans('exam.select_term')\" @select=\"onExamTermSelect\" @close=\"examForm.errors.clear('exam_term_id')\" @remove=\"examForm.exam_term_id = ''\">\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!exam_terms.length\">\n                            {{trans('general.no_option_found')}}\n                        </div>\n                    </v-select>\n                    <show-error :form-name=\"examForm\" prop-name=\"exam_term_id\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('exam.exam_name')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"examForm.name\" name=\"name\" :placeholder=\"trans('exam.exam_name')\">\n                    <show-error :form-name=\"examForm\" prop-name=\"name\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('exam.exam_description')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"examForm.description\" name=\"description\" :placeholder=\"trans('exam.exam_description')\">\n                    <show-error :form-name=\"examForm\" prop-name=\"description\"></show-error>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer text-right\">\n            <router-link to=\"/exam\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                <span v-if=\"id\">{{trans('general.update')}}</span>\n                <span v-else>{{trans('general.save')}}</span>\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        components: {},\n        data() {\n            return {\n                examForm: new Form({\n                    name : '',\n                    exam_term_id: '',\n                    description : ''\n                }),\n                exam_terms: [],\n                selected_exam_term: null\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(!helper.hasPermission('create-exam') && !helper.hasPermission('edit-exam')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/exam/pre-requisite')\n                    .then(response => {\n                        this.exam_terms = response.exam_terms;\n\n                        if(this.id)\n                            this.get();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.examForm.post('/api/exam')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.selected_exam_term = null;\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/exam/'+this.id)\n                    .then(response => {\n                        this.examForm.name = response.name;\n                        this.examForm.exam_term_id = response.exam_term_id;\n                        this.selected_exam_term = response.exam_term_id ? {id:response.exam_term_id, name:response.term.name+' ('+response.term.course_group.name+')'} : null;\n                        this.examForm.description = response.description;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/exam');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.examForm.patch('/api/exam/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/exam');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config);\n            },\n            onExamTermSelect(selectedOption){\n                this.examForm.exam_term_id = selectedOption.id;\n            }\n        }\n    }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"exam.edit_exam\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/exam\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"exam.edit_exam\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"exam-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.examForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"exam.term\")) + \" \"),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-select\",\n                {\n                  attrs: {\n                    label: \"name\",\n                    name: \"exam_term_id\",\n                    id: \"exam_term_id\",\n                    options: _vm.exam_terms,\n                    placeholder: _vm.trans(\"exam.select_term\"),\n                  },\n                  on: {\n                    select: _vm.onExamTermSelect,\n                    close: function ($event) {\n                      return _vm.examForm.errors.clear(\"exam_term_id\")\n                    },\n                    remove: function ($event) {\n                      _vm.examForm.exam_term_id = \"\"\n                    },\n                  },\n                  model: {\n                    value: _vm.selected_exam_term,\n                    callback: function ($$v) {\n                      _vm.selected_exam_term = $$v\n                    },\n                    expression: \"selected_exam_term\",\n                  },\n                },\n                [\n                  !_vm.exam_terms.length\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"multiselect__option\",\n                          attrs: { slot: \"afterList\" },\n                          slot: \"afterList\",\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm.trans(\"general.no_option_found\")) +\n                              \"\\n                    \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.examForm,\n                  \"prop-name\": \"exam_term_id\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"exam.exam_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.examForm.name,\n                    expression: \"examForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"exam.exam_name\"),\n                },\n                domProps: { value: _vm.examForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.examForm, \"name\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.examForm, \"prop-name\": \"name\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"exam.exam_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.examForm.description,\n                    expression: \"examForm.description\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"exam.exam_description\"),\n                },\n                domProps: { value: _vm.examForm.description },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.examForm, \"description\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.examForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/exam\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=b57bd1ea&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b57bd1ea')) {\n      api.createRecord('b57bd1ea', component.options)\n    } else {\n      api.reload('b57bd1ea', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=b57bd1ea&\", function () {\n      api.rerender('b57bd1ea', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/edit.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=b57bd1ea&\"","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=6200c8c5&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\admin\\\\Desktop\\\\BULK\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6200c8c5')) {\n      api.createRecord('6200c8c5', component.options)\n    } else {\n      api.reload('6200c8c5', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=6200c8c5&\", function () {\n      api.rerender('6200c8c5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/exam/form.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=6200c8c5&\""],"mappings":";;;;;;;;;;AAyBA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzIA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAiBA;AACA;AACA;;;;;;;;;;;;ACtCA;AAAA;AAAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;A","sourceRoot":""}